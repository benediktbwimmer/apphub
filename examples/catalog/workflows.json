{
  "workflows": [
    {
      "slug": "observatory-calibration-import",
      "path": "examples/environmental-observatory-event-driven/workflows/observatory-calibration-import.json",
      "definition": {
        "slug": "observatory-calibration-import",
        "name": "Observatory Calibration Import",
        "version": 1,
        "description": "Validates uploaded calibration files, persists canonical records in the Metastore, and emits calibration updates for downstream workflows.",
        "parametersSchema": {
          "type": "object",
          "properties": {
            "filestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "filestoreBackendId": {
              "type": "number",
              "minimum": 1
            },
            "filestoreToken": {
              "type": "string"
            },
            "filestorePrincipal": {
              "type": "string"
            },
            "calibrationPath": {
              "type": "string",
              "minLength": 1
            },
            "calibrationNodeId": {
              "type": "number",
              "minimum": 1
            },
            "calibrationsPrefix": {
              "type": "string",
              "minLength": 1
            },
            "plansPrefix": {
              "type": "string",
              "minLength": 1
            },
            "catalogBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "catalogApiToken": {
              "type": "string"
            },
            "checksum": {
              "type": "string"
            },
            "metastoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "metastoreNamespace": {
              "type": "string",
              "minLength": 1
            },
            "metastoreAuthToken": {
              "type": "string"
            }
          },
          "required": [
            "filestoreBaseUrl",
            "filestoreBackendId",
            "calibrationPath",
            "metastoreBaseUrl"
          ]
        },
        "defaultParameters": {
          "filestoreBaseUrl": "http://127.0.0.1:4300",
          "filestoreBackendId": 1,
          "filestoreToken": null,
          "filestorePrincipal": "observatory-calibration-importer",
          "metastoreBaseUrl": "http://127.0.0.1:4100",
          "metastoreNamespace": "observatory.calibrations",
          "metastoreAuthToken": null,
          "calibrationsPrefix": "datasets/observatory/calibrations",
          "plansPrefix": "datasets/observatory/calibrations/plans",
          "catalogBaseUrl": "http://127.0.0.1:4000",
          "catalogApiToken": null
        },
        "steps": [
          {
            "id": "import-calibration",
            "name": "Import calibration file",
            "type": "job",
            "jobSlug": "observatory-calibration-importer",
            "parameters": {
              "filestoreBaseUrl": "{{ parameters.filestoreBaseUrl }}",
              "filestoreBackendId": "{{ parameters.filestoreBackendId }}",
              "filestoreToken": "{{ parameters.filestoreToken }}",
              "filestorePrincipal": "{{ parameters.filestorePrincipal }}",
              "calibrationPath": "{{ parameters.calibrationPath }}",
              "calibrationNodeId": "{{ parameters.calibrationNodeId }}",
              "calibrationsPrefix": "{{ parameters.calibrationsPrefix }}",
              "checksum": "{{ parameters.checksum }}",
              "metastoreBaseUrl": "{{ parameters.metastoreBaseUrl }}",
              "metastoreNamespace": "{{ parameters.metastoreNamespace }}",
              "metastoreAuthToken": "{{ parameters.metastoreAuthToken }}"
            },
            "storeResultAs": "importResult",
            "produces": [
              {
                "assetId": "observatory.calibration.instrument",
                "schema": {
                  "type": "object",
                  "properties": {
                    "calibrationId": {
                      "type": "string"
                    },
                    "instrumentId": {
                      "type": "string"
                    },
                    "effectiveAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "revision": {
                      "type": [
                        "number",
                        "null"
                      ]
                    },
                    "offsets": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "number"
                      }
                    },
                    "scales": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": "number"
                      }
                    },
                    "notes": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "sourcePath": {
                      "type": "string"
                    },
                    "metastoreNamespace": {
                      "type": "string"
                    },
                    "metastoreRecordKey": {
                      "type": "string"
                    },
                    "metastoreVersion": {
                      "type": [
                        "number",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "calibrationId",
                    "instrumentId",
                    "effectiveAt",
                    "createdAt",
                    "offsets",
                    "metadata",
                    "sourcePath",
                    "metastoreNamespace",
                    "metastoreRecordKey"
                  ]
                }
              }
            ]
          },
          {
            "id": "plan-reprocessing",
            "name": "Build calibration reprocess plan",
            "type": "job",
            "jobSlug": "observatory-calibration-planner",
            "parameters": {
              "filestoreBaseUrl": "{{ parameters.filestoreBaseUrl }}",
              "filestoreBackendId": "{{ parameters.filestoreBackendId }}",
              "filestoreToken": "{{ parameters.filestoreToken }}",
              "filestorePrincipal": "observatory-calibration-planner",
              "plansPrefix": "{{ parameters.plansPrefix }}",
              "catalogBaseUrl": "{{ parameters.catalogBaseUrl }}",
              "catalogApiToken": "{{ parameters.catalogApiToken }}",
              "metastoreBaseUrl": "{{ parameters.metastoreBaseUrl }}",
              "metastoreNamespace": "{{ parameters.metastoreNamespace }}",
              "metastoreAuthToken": "{{ parameters.metastoreAuthToken }}",
              "calibrations": [
                {
                  "calibrationId": "{{ steps.import-calibration.result.calibrationId }}",
                  "instrumentId": "{{ steps.import-calibration.result.instrumentId }}",
                  "effectiveAt": "{{ steps.import-calibration.result.effectiveAt }}",
                  "metastoreVersion": "{{ steps.import-calibration.result.metastoreVersion }}"
                }
              ],
              "downstreamWorkflows": [
                {
                  "workflowSlug": "observatory-minute-ingest"
                },
                {
                  "workflowSlug": "observatory-daily-publication"
                },
                {
                  "workflowSlug": "observatory-dashboard-aggregate"
                }
              ]
            },
            "storeResultAs": "planResult",
            "produces": [
              {
                "assetId": "observatory.reprocess.plan",
                "partitioning": {
                  "type": "dynamic"
                },
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            ]
          }
        ],
        "triggers": [
          {
            "type": "manual"
          }
        ],
        "metadata": {
          "provisioning": {
            "eventTriggers": [
              {
                "name": "Observatory calibration upload",
                "description": "Import calibration records whenever a calibration file is added to the observatory calibrations prefix.",
                "eventType": "filestore.command.completed",
                "eventSource": "filestore.service",
                "predicates": [
                  {
                    "path": "$.payload.command",
                    "operator": "equals",
                    "value": "uploadFile"
                  },
                  {
                    "path": "$.payload.backendMountId",
                    "operator": "equals",
                    "value": "{{ trigger.metadata.filestore.backendMountId }}"
                  }
                ],
                "parameterTemplate": {
                  "filestoreBaseUrl": "{{ trigger.metadata.filestore.baseUrl }}",
                  "filestoreBackendId": "{{ trigger.metadata.filestore.backendMountId }}",
                  "filestoreToken": "{{ trigger.metadata.filestore.token }}",
                  "filestorePrincipal": "{{ trigger.metadata.filestore.principal }}",
                  "calibrationPath": "{{ event.payload.path }}",
                  "calibrationNodeId": "{{ event.payload.node.id }}",
                  "calibrationsPrefix": "{{ trigger.metadata.calibrations.prefix }}",
                  "plansPrefix": "{{ trigger.metadata.calibrations.plansPrefix }}",
                  "catalogBaseUrl": "{{ trigger.metadata.catalog.baseUrl }}",
                  "catalogApiToken": "{{ trigger.metadata.catalog.apiToken }}",
                  "checksum": "{{ event.payload.node.checksum }}",
                  "metastoreBaseUrl": "{{ trigger.metadata.metastore.baseUrl }}",
                  "metastoreNamespace": "{{ trigger.metadata.metastore.namespace }}",
                  "metastoreAuthToken": "{{ trigger.metadata.metastore.authToken }}"
                },
                "metadata": {
                  "filestore": {
                    "baseUrl": "{{ defaultParameters.filestoreBaseUrl }}",
                    "backendMountId": "{{ defaultParameters.filestoreBackendId }}",
                    "token": "{{ defaultParameters.filestoreToken }}",
                    "principal": "{{ defaultParameters.filestorePrincipal }}"
                  },
                  "metastore": {
                    "baseUrl": "{{ defaultParameters.metastoreBaseUrl }}",
                    "namespace": "{{ defaultParameters.metastoreNamespace }}",
                    "authToken": "{{ defaultParameters.metastoreAuthToken }}"
                  },
                  "calibrations": {
                    "prefix": "{{ trigger.metadata.calibrations.prefix }}",
                    "plansPrefix": "{{ trigger.metadata.calibrations.plansPrefix }}"
                  },
                  "catalog": {
                    "baseUrl": "{{ defaultParameters.catalogBaseUrl }}",
                    "apiToken": "{{ defaultParameters.catalogApiToken }}"
                  }
                },
                "idempotencyKeyExpression": "observatory-calibration-{{ event.payload.node.id | default: event.payload.path | replace: '/', '_' }}",
                "runKeyTemplate": "observatory-calibration-{{ event.payload.node.id | default: event.payload.path | replace: '/', '-' }}",
                "status": "active"
              }
            ]
          }
        }
      }
    },
    {
      "slug": "observatory-calibration-reprocess",
      "path": "examples/environmental-observatory-event-driven/workflows/observatory-calibration-reprocess.json",
      "definition": {
        "slug": "observatory-calibration-reprocess",
        "name": "Observatory Calibration Reprocess",
        "version": 1,
        "description": "Consumes calibration reprocessing plans, queues ingest reruns with bounded concurrency, and updates plan artifacts as runs complete.",
        "parametersSchema": {
          "type": "object",
          "properties": {
            "planPath": {
              "type": "string",
              "minLength": 1
            },
            "planNodeId": {
              "type": "number",
              "minimum": 1
            },
            "planId": {
              "type": "string"
            },
            "mode": {
              "type": "string",
              "enum": [
                "all",
                "selected"
              ]
            },
            "selectedPartitions": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              }
            },
            "maxConcurrency": {
              "type": "number",
              "minimum": 1,
              "maximum": 10
            },
            "pollIntervalMs": {
              "type": "number",
              "minimum": 250,
              "maximum": 10000
            },
            "catalogBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "catalogApiToken": {
              "type": "string"
            },
            "filestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "filestoreBackendId": {
              "type": "number",
              "minimum": 1
            },
            "filestoreToken": {
              "type": "string"
            },
            "filestorePrincipal": {
              "type": "string"
            },
            "metastoreBaseUrl": {
              "type": "string"
            },
            "metastoreNamespace": {
              "type": "string"
            },
            "metastoreAuthToken": {
              "type": "string"
            }
          },
          "required": [
            "catalogBaseUrl",
            "filestoreBaseUrl",
            "filestoreBackendId"
          ]
        },
        "defaultParameters": {
          "mode": "all",
          "selectedPartitions": [],
          "maxConcurrency": 3,
          "pollIntervalMs": 1500,
          "catalogBaseUrl": "http://127.0.0.1:4000",
          "catalogApiToken": null,
          "filestoreBaseUrl": "http://127.0.0.1:4300",
          "filestoreBackendId": 1,
          "filestoreToken": null,
          "filestorePrincipal": "observatory-calibration-reprocessor",
          "metastoreBaseUrl": null,
          "metastoreNamespace": "observatory.reprocess.plans",
          "metastoreAuthToken": null
        },
        "steps": [
          {
            "id": "orchestrate-reprocess",
            "name": "Orchestrate calibration reprocess",
            "type": "job",
            "jobSlug": "observatory-calibration-reprocessor",
            "parameters": {
              "planPath": "{{ parameters.planPath }}",
              "planNodeId": "{{ parameters.planNodeId }}",
              "planId": "{{ parameters.planId }}",
              "mode": "{{ parameters.mode }}",
              "selectedPartitions": "{{ parameters.selectedPartitions }}",
              "maxConcurrency": "{{ parameters.maxConcurrency }}",
              "pollIntervalMs": "{{ parameters.pollIntervalMs }}",
              "catalogBaseUrl": "{{ parameters.catalogBaseUrl }}",
              "catalogApiToken": "{{ parameters.catalogApiToken }}",
              "filestoreBaseUrl": "{{ parameters.filestoreBaseUrl }}",
              "filestoreBackendId": "{{ parameters.filestoreBackendId }}",
              "filestoreToken": "{{ parameters.filestoreToken }}",
              "filestorePrincipal": "{{ parameters.filestorePrincipal }}",
              "metastoreBaseUrl": "{{ parameters.metastoreBaseUrl }}",
              "metastoreNamespace": "{{ parameters.metastoreNamespace }}",
              "metastoreAuthToken": "{{ parameters.metastoreAuthToken }}"
            },
            "produces": [
              {
                "assetId": "observatory.reprocess.plan",
                "partitioning": {
                  "type": "dynamic"
                },
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            ]
          }
        ],
        "triggers": [
          {
            "type": "manual"
          }
        ]
      }
    },
    {
      "slug": "observatory-daily-publication",
      "path": "examples/environmental-observatory-event-driven/workflows/observatory-daily-publication.json",
      "definition": {
        "slug": "observatory-daily-publication",
        "name": "Observatory Visualization & Reports",
        "version": 1,
        "description": "Generates plots from Timestore partitions and publishes minute-level status reports with optional Metastore upserts.",
        "parametersSchema": {
          "type": "object",
          "properties": {
            "timestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "timestoreDatasetSlug": {
              "type": "string",
              "minLength": 1
            },
            "timestoreAuthToken": {
              "type": "string"
            },
            "plotsDir": {
              "type": "string",
              "minLength": 1
            },
            "reportsDir": {
              "type": "string",
              "minLength": 1
            },
            "partitionKey": {
              "type": "string",
              "minLength": 1
            },
            "instrumentId": {
              "type": "string"
            },
            "lookbackMinutes": {
              "type": "number",
              "minimum": 1,
              "maximum": 10080
            },
            "siteFilter": {
              "type": "string"
            },
            "reportTemplate": {
              "type": "string"
            },
            "metastoreBaseUrl": {
              "type": "string"
            },
            "metastoreAuthToken": {
              "type": "string"
            },
            "metastoreNamespace": {
              "type": "string"
            }
          },
          "required": [
            "timestoreBaseUrl",
            "timestoreDatasetSlug",
            "plotsDir",
            "reportsDir",
            "partitionKey",
            "instrumentId"
          ]
        },
        "defaultParameters": {
          "lookbackMinutes": 180,
          "timestoreBaseUrl": "http://127.0.0.1:4200",
          "timestoreDatasetSlug": "observatory-timeseries",
          "plotsDir": "/tmp/apphub-observatory/plots",
          "reportsDir": "/tmp/apphub-observatory/reports",
          "metastoreBaseUrl": "http://127.0.0.1:4100",
          "metastoreNamespace": "observatory.reports",
          "timestoreAuthToken": null,
          "metastoreAuthToken": null,
          "instrumentId": null
        },
        "steps": [
          {
            "id": "generate-plots",
            "name": "Generate observatory plots",
            "type": "job",
            "jobSlug": "observatory-visualization-runner",
            "parameters": {
              "timestoreBaseUrl": "{{ parameters.timestoreBaseUrl }}",
              "timestoreDatasetSlug": "{{ parameters.timestoreDatasetSlug }}",
              "timestoreAuthToken": "{{ parameters.timestoreAuthToken }}",
              "plotsDir": "{{ parameters.plotsDir }}",
              "partitionKey": "{{ parameters.partitionKey }}",
              "instrumentId": "{{ parameters.instrumentId }}",
              "lookbackMinutes": "{{ parameters.lookbackMinutes }}",
              "siteFilter": "{{ parameters.siteFilter }}"
            },
            "storeResultAs": "visualizations",
            "consumes": [
              {
                "assetId": "observatory.timeseries.timestore"
              }
            ],
            "produces": [
              {
                "assetId": "observatory.visualizations.minute",
                "freshness": {
                  "ttlMs": 86400000
                },
                "autoMaterialize": {
                  "onUpstreamUpdate": true,
                  "priority": 6
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "generatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "partitionKey": {
                      "type": "string"
                    },
                    "plotsDir": {
                      "type": "string"
                    },
                    "lookbackMinutes": {
                      "type": "number"
                    },
                    "artifacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relativePath": {
                            "type": "string"
                          },
                          "mediaType": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "sizeBytes": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "relativePath",
                          "mediaType"
                        ]
                      }
                    },
                    "metrics": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "required": [
                    "generatedAt",
                    "partitionKey",
                    "plotsDir",
                    "artifacts"
                  ]
                }
              }
            ]
          },
          {
            "id": "publish-report",
            "name": "Publish status report",
            "type": "job",
            "jobSlug": "observatory-report-publisher",
            "dependsOn": [
              "generate-plots"
            ],
            "parameters": {
              "reportsDir": "{{ parameters.reportsDir }}",
              "plotsDir": "{{ parameters.plotsDir }}",
              "partitionKey": "{{ parameters.partitionKey }}",
              "instrumentId": "{{ parameters.instrumentId }}",
              "reportTemplate": "{{ parameters.reportTemplate }}",
              "visualizationAsset": "{{ shared.visualizations.visualization }}",
              "metastoreBaseUrl": "{{ parameters.metastoreBaseUrl }}",
              "metastoreAuthToken": "{{ parameters.metastoreAuthToken }}",
              "metastoreNamespace": "{{ parameters.metastoreNamespace }}"
            },
            "consumes": [
              {
                "assetId": "observatory.visualizations.minute"
              }
            ],
            "produces": [
              {
                "assetId": "observatory.reports.status",
                "autoMaterialize": {
                  "onUpstreamUpdate": true,
                  "priority": 7
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "generatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "reportsDir": {
                      "type": "string"
                    },
                    "reportFiles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relativePath": {
                            "type": "string"
                          },
                          "mediaType": {
                            "type": "string"
                          },
                          "sizeBytes": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "relativePath",
                          "mediaType"
                        ]
                      }
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "instrumentCount": {
                          "type": "number"
                        },
                        "siteCount": {
                          "type": "number"
                        },
                        "alertCount": {
                          "type": "number"
                        }
                      }
                    },
                    "plotsReferenced": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relativePath": {
                            "type": "string"
                          },
                          "altText": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "relativePath"
                        ]
                      }
                    }
                  },
                  "required": [
                    "generatedAt",
                    "reportsDir",
                    "reportFiles"
                  ]
                }
              }
            ]
          }
        ],
        "triggers": [
          {
            "type": "manual"
          }
        ],
        "metadata": {
          "provisioning": {
            "eventTriggers": [
              {
                "name": "Observatory publication on timestore partition",
                "description": "Generate plots and publish observatory reports when new Timestore partitions are created.",
                "eventType": "timestore.partition.created",
                "eventSource": "timestore.ingest",
                "predicates": [
                  {
                    "path": "$.payload.datasetSlug",
                    "operator": "equals",
                    "value": "{{ defaultParameters.timestoreDatasetSlug }}"
                  }
                ],
                "parameterTemplate": {
                  "partitionKey": "{{ event.payload.partitionKeyFields.window | default: event.payload.partitionKey }}",
                  "instrumentId": "{{ event.payload.attributes.instrumentId | default: event.payload.partitionKeyFields.instrument | default: 'unknown' }}",
                  "timestoreBaseUrl": "{{ trigger.metadata.timestore.baseUrl }}",
                  "timestoreDatasetSlug": "{{ trigger.metadata.timestore.datasetSlug }}",
                  "timestoreAuthToken": "{{ trigger.metadata.timestore.authToken }}",
                  "plotsDir": "{{ trigger.metadata.paths.plotsDir }}",
                  "reportsDir": "{{ trigger.metadata.paths.reportsDir }}",
                  "metastoreBaseUrl": "{{ trigger.metadata.metastore.baseUrl }}",
                  "metastoreNamespace": "{{ trigger.metadata.metastore.namespace }}",
                  "metastoreAuthToken": "{{ trigger.metadata.metastore.authToken }}"
                },
                "runKeyTemplate": "observatory-publish-{{ parameters.instrumentId | replace: ':', '-' }}-{{ parameters.partitionKey | replace: ':', '-' }}",
                "metadata": {
                  "timestore": {
                    "baseUrl": "{{ defaultParameters.timestoreBaseUrl }}",
                    "datasetSlug": "{{ defaultParameters.timestoreDatasetSlug }}",
                    "authToken": "{{ defaultParameters.timestoreAuthToken }}"
                  },
                  "paths": {
                    "plotsDir": "{{ defaultParameters.plotsDir }}",
                    "reportsDir": "{{ defaultParameters.reportsDir }}"
                  },
                  "metastore": {
                    "baseUrl": "{{ defaultParameters.metastoreBaseUrl }}",
                    "namespace": "{{ defaultParameters.metastoreNamespace }}",
                    "authToken": "{{ defaultParameters.metastoreAuthToken }}"
                  }
                },
                "idempotencyKeyExpression": "{{ event.payload.attributes.instrumentId | default: 'unknown' | replace: \":\", \"-\" }}-{{ event.payload.partitionKey | default: event.payload.partitionKeyFields.window | replace: \":\", \"-\" }}",
                "status": "active"
              }
            ]
          }
        }
      }
    },
    {
      "slug": "observatory-minute-data-generator",
      "path": "examples/environmental-observatory-event-driven/workflows/observatory-minute-data-generator.json",
      "definition": {
        "slug": "observatory-minute-data-generator",
        "name": "Observatory Minute Data Generator",
        "version": 2,
        "description": "Uploads synthetic minute-level CSV drops to Filestore to simulate instrument readings arriving in the inbox.",
        "parametersSchema": {
          "type": "object",
          "properties": {
            "minute": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$"
            },
            "rowsPerInstrument": {
              "type": "number",
              "minimum": 1,
              "maximum": 360
            },
            "intervalMinutes": {
              "type": "number",
              "minimum": 1,
              "maximum": 120
            },
            "instrumentCount": {
              "type": "number",
              "minimum": 1,
              "maximum": 50
            },
            "seed": {
              "type": "number"
            },
            "filestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "filestoreBackendId": {
              "type": "number",
              "minimum": 1
            },
            "filestoreToken": {
              "type": "string"
            },
            "inboxPrefix": {
              "type": "string",
              "minLength": 1
            },
            "stagingPrefix": {
              "type": "string",
              "minLength": 1
            },
            "archivePrefix": {
              "type": "string",
              "minLength": 1
            },
            "filestorePrincipal": {
              "type": "string"
            }
          },
          "required": [
            "minute",
            "filestoreBaseUrl",
            "filestoreBackendId",
            "inboxPrefix",
            "stagingPrefix",
            "archivePrefix"
          ]
        },
        "defaultParameters": {
          "rowsPerInstrument": 6,
          "intervalMinutes": 10,
          "instrumentCount": 3,
          "filestoreBaseUrl": "http://127.0.0.1:4300",
          "filestoreBackendId": 1,
          "inboxPrefix": "datasets/observatory/inbox",
          "stagingPrefix": "datasets/observatory/staging",
          "archivePrefix": "datasets/observatory/archive",
          "filestorePrincipal": "observatory-data-generator",
          "filestoreToken": null,
          "metastoreBaseUrl": null,
          "metastoreNamespace": "observatory.ingest",
          "metastoreAuthToken": null
        },
        "steps": [
          {
            "id": "generate-synthetic-drop",
            "name": "Generate synthetic instrument readings",
            "type": "job",
            "jobSlug": "observatory-data-generator",
            "parameters": {
              "minute": "{{ parameters.minute }}",
              "rowsPerInstrument": "{{ parameters.rowsPerInstrument }}",
              "intervalMinutes": "{{ parameters.intervalMinutes }}",
              "instrumentCount": "{{ parameters.instrumentCount }}",
              "seed": "{{ parameters.seed }}",
              "filestoreBaseUrl": "{{ parameters.filestoreBaseUrl }}",
              "filestoreBackendId": "{{ parameters.filestoreBackendId }}",
              "filestoreToken": "{{ parameters.filestoreToken }}",
              "inboxPrefix": "{{ parameters.inboxPrefix }}",
              "stagingPrefix": "{{ parameters.stagingPrefix }}",
              "archivePrefix": "{{ parameters.archivePrefix }}",
              "principal": "{{ parameters.filestorePrincipal }}",
              "metastoreBaseUrl": "{{ parameters.metastoreBaseUrl }}",
              "metastoreNamespace": "{{ parameters.metastoreNamespace }}",
              "metastoreAuthToken": "{{ parameters.metastoreAuthToken }}"
            },
            "storeResultAs": "syntheticDrop",
            "produces": [
              {
                "assetId": "observatory.inbox.synthetic",
                "partitioning": {
                  "type": "timeWindow",
                  "granularity": "minute",
                  "format": "YYYY-MM-DDTHH:mm",
                  "lookbackWindows": 1440
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "generatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "partitionKey": {
                      "type": "string"
                    },
                    "filestoreInboxPrefix": {
                      "type": "string"
                    },
                    "filestoreBackendId": {
                      "type": "number"
                    },
                    "rowsGenerated": {
                      "type": "number"
                    },
                    "instrumentCount": {
                      "type": "number"
                    },
                    "files": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relativePath": {
                            "type": "string"
                          },
                          "filestorePath": {
                            "type": "string"
                          },
                          "instrumentId": {
                            "type": "string"
                          },
                          "site": {
                            "type": "string"
                          },
                          "rows": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "relativePath",
                          "filestorePath",
                          "instrumentId",
                          "rows"
                        ]
                      }
                    }
                  },
                  "required": [
                    "generatedAt",
                    "partitionKey",
                    "filestoreInboxPrefix",
                    "filestoreBackendId",
                    "rowsGenerated",
                    "instrumentCount",
                    "files"
                  ]
                }
              }
            ]
          }
        ],
        "triggers": [
          {
            "type": "manual"
          }
        ],
        "metadata": {
          "provisioning": {
            "schedules": [
              {
                "name": "Observatory minute data generator",
                "description": "Emit synthetic instrument drops every minute so downstream ingest and visualization workflows stay in sync.",
                "cron": "*/1 * * * *",
                "timezone": "UTC",
                "catchUp": false,
                "isActive": true,
                "parameters": {
                  "rowsPerInstrument": "{{ defaultParameters.rowsPerInstrument }}",
                  "intervalMinutes": "{{ defaultParameters.intervalMinutes }}",
                  "instrumentCount": "{{ defaultParameters.instrumentCount }}",
                  "filestoreBaseUrl": "{{ defaultParameters.filestoreBaseUrl }}",
                  "filestoreBackendId": "{{ defaultParameters.filestoreBackendId }}",
                  "filestoreToken": "{{ defaultParameters.filestoreToken }}",
                  "inboxPrefix": "{{ defaultParameters.inboxPrefix }}",
                  "stagingPrefix": "{{ defaultParameters.stagingPrefix }}",
                  "archivePrefix": "{{ defaultParameters.archivePrefix }}",
                  "filestorePrincipal": "{{ defaultParameters.filestorePrincipal }}",
                  "metastoreBaseUrl": "{{ defaultParameters.metastoreBaseUrl }}",
                  "metastoreNamespace": "{{ defaultParameters.metastoreNamespace }}",
                  "metastoreAuthToken": "{{ defaultParameters.metastoreAuthToken }}"
                }
              }
            ]
          }
        }
      }
    },
    {
      "slug": "observatory-minute-ingest",
      "path": "examples/environmental-observatory-event-driven/workflows/observatory-minute-ingest.json",
      "definition": {
        "slug": "observatory-minute-ingest",
        "name": "Observatory Minute Ingest",
        "version": 1,
        "description": "Normalizes inbox CSVs and persists minute-level readings into Timestore.",
        "parametersSchema": {
          "type": "object",
          "properties": {
            "stagingDir": {
              "type": "string",
              "minLength": 1
            },
            "archiveDir": {
              "type": "string",
              "minLength": 1
            },
            "minute": {
              "type": "string",
              "minLength": 1
            },
            "maxFiles": {
              "type": "number",
              "minimum": 1,
              "maximum": 200
            },
            "filestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "filestoreBackendId": {
              "type": "number",
              "minimum": 1
            },
            "filestoreToken": {
              "type": "string"
            },
            "inboxPrefix": {
              "type": "string",
              "minLength": 1
            },
            "stagingPrefix": {
              "type": "string",
              "minLength": 1
            },
            "archivePrefix": {
              "type": "string",
              "minLength": 1
            },
            "filestorePrincipal": {
              "type": "string"
            },
            "commandPath": {
              "type": "string"
            },
            "timestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "timestoreDatasetSlug": {
              "type": "string",
              "minLength": 1
            },
            "timestoreDatasetName": {
              "type": "string"
            },
            "timestoreTableName": {
              "type": "string"
            },
            "timestoreStorageTargetId": {
              "type": "string"
            },
            "timestoreAuthToken": {
              "type": "string"
            }
          },
          "required": [
            "stagingDir",
            "archiveDir",
            "minute",
            "filestoreBaseUrl",
            "filestoreBackendId",
            "inboxPrefix",
            "stagingPrefix",
            "archivePrefix",
            "timestoreBaseUrl",
            "timestoreDatasetSlug"
          ]
        },
        "defaultParameters": {
          "maxFiles": 1,
          "stagingDir": "/tmp/apphub-observatory/staging",
          "archiveDir": "/tmp/apphub-observatory/archive",
          "filestoreBaseUrl": "http://127.0.0.1:4300",
          "filestoreBackendId": 1,
          "inboxPrefix": "datasets/observatory/inbox",
          "stagingPrefix": "datasets/observatory/staging",
          "archivePrefix": "datasets/observatory/archive",
          "filestorePrincipal": "observatory-inbox-normalizer",
          "timestoreBaseUrl": "http://127.0.0.1:4200",
          "timestoreDatasetSlug": "observatory-timeseries",
          "timestoreDatasetName": "Observatory Time Series",
          "timestoreTableName": "observations",
          "filestoreToken": null,
          "timestoreStorageTargetId": null,
          "timestoreAuthToken": null,
          "metastoreBaseUrl": null,
          "metastoreNamespace": "observatory.ingest",
          "metastoreAuthToken": null
        },
        "steps": [
          {
            "id": "normalize-inbox",
            "name": "Normalize inbox files",
            "type": "job",
            "jobSlug": "observatory-inbox-normalizer",
            "parameters": {
              "stagingDir": "{{ parameters.stagingDir }}",
              "archiveDir": "{{ parameters.archiveDir }}",
              "minute": "{{ parameters.minute }}",
              "maxFiles": "{{ parameters.maxFiles }}",
              "filestoreBaseUrl": "{{ parameters.filestoreBaseUrl }}",
              "filestoreBackendId": "{{ parameters.filestoreBackendId }}",
              "filestoreToken": "{{ parameters.filestoreToken }}",
              "inboxPrefix": "{{ parameters.inboxPrefix }}",
              "stagingPrefix": "{{ parameters.stagingPrefix }}",
              "archivePrefix": "{{ parameters.archivePrefix }}",
              "commandPath": "{{ parameters.commandPath }}",
              "principal": "{{ parameters.filestorePrincipal }}"
            },
            "storeResultAs": "normalizedOutput",
            "produces": [
              {
                "assetId": "observatory.timeseries.raw",
                "partitioning": {
                  "type": "timeWindow",
                  "granularity": "minute",
                  "format": "YYYY-MM-DDTHH:mm",
                  "lookbackWindows": 1440
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "partitionKey": {
                      "type": "string"
                    },
                    "minute": {
                      "type": "string"
                    },
                    "instrumentCount": {
                      "type": "number"
                    },
                    "recordCount": {
                      "type": "number"
                    },
                    "sourceFiles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "relativePath": {
                            "type": "string"
                          },
                          "site": {
                            "type": "string"
                          },
                          "instrumentId": {
                            "type": "string"
                          },
                          "rows": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "relativePath",
                          "rows"
                        ]
                      }
                    },
                    "stagingDir": {
                      "type": "string"
                    },
                    "normalizedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "partitionKey",
                    "minute",
                    "recordCount",
                    "sourceFiles",
                    "normalizedAt"
                  ]
                }
              }
            ]
          },
          {
            "id": "load-timestore",
            "name": "Ingest into Timestore",
            "type": "job",
            "jobSlug": "observatory-timestore-loader",
            "dependsOn": [
              "normalize-inbox"
            ],
            "parameters": {
              "datasetSlug": "{{ parameters.timestoreDatasetSlug }}",
              "datasetName": "{{ parameters.timestoreDatasetName }}",
              "tableName": "{{ parameters.timestoreTableName }}",
              "timestoreBaseUrl": "{{ parameters.timestoreBaseUrl }}",
              "timestoreAuthToken": "{{ parameters.timestoreAuthToken }}",
              "storageTargetId": "{{ parameters.timestoreStorageTargetId }}",
              "partitionNamespace": "observatory",
              "minute": "{{ parameters.minute }}",
              "idempotencyKey": "{{ parameters.commandPath | default: parameters.minute }}",
              "rawAsset": "{{ shared.normalizedOutput.normalized }}"
            },
            "storeResultAs": "timestoreIngestion",
            "consumes": [
              {
                "assetId": "observatory.timeseries.raw"
              }
            ],
            "produces": [
              {
                "assetId": "observatory.timeseries.timestore",
                "partitioning": {
                  "type": "timeWindow",
                  "granularity": "minute",
                  "format": "YYYY-MM-DDTHH:mm",
                  "lookbackWindows": 1440
                },
                "freshness": {
                  "ttlMs": 60000
                },
                "autoMaterialize": {
                  "onUpstreamUpdate": true,
                  "priority": 5
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "partitionKey": {
                      "type": "string"
                    },
                    "datasetSlug": {
                      "type": "string"
                    },
                    "ingestionMode": {
                      "type": "string"
                    },
                    "manifestId": {
                      "type": "string"
                    },
                    "datasetId": {
                      "type": "string"
                    },
                    "rowCount": {
                      "type": "number"
                    },
                    "storageTargetId": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "partitionKey",
                    "datasetSlug",
                    "rowCount"
                  ]
                }
              }
            ]
          }
        ],
        "triggers": [
          {
            "type": "manual"
          }
        ],
        "metadata": {
          "provisioning": {
            "eventTriggers": [
              {
                "name": "Observatory ingest on filestore upload",
                "description": "Kick off the minute ingest workflow whenever new observatory CSV uploads land in Filestore.",
                "eventType": "filestore.command.completed",
                "eventSource": "filestore.service",
                "predicates": [
                  {
                    "path": "$.payload.command",
                    "operator": "equals",
                    "value": "uploadFile"
                  },
                  {
                    "path": "$.payload.backendMountId",
                    "operator": "equals",
                    "value": "{{ defaultParameters.filestoreBackendId }}"
                  }
                ],
                "parameterTemplate": {
                  "minute": "{{ event.payload.node.metadata.minute }}",
                  "instrumentId": "{{ event.payload.node.metadata.instrumentId }}",
                  "maxFiles": "{{ trigger.metadata.maxFiles }}",
                  "stagingDir": "{{ trigger.metadata.paths.stagingDir }}",
                  "archiveDir": "{{ trigger.metadata.paths.archiveDir }}",
                  "filestoreBaseUrl": "{{ trigger.metadata.filestore.baseUrl }}",
                  "filestoreBackendId": "{{ trigger.metadata.filestore.backendMountId }}",
                  "filestoreToken": "{{ trigger.metadata.filestore.token }}",
                  "inboxPrefix": "{{ trigger.metadata.filestore.inboxPrefix }}",
                  "stagingPrefix": "{{ trigger.metadata.filestore.stagingPrefix }}",
                  "archivePrefix": "{{ trigger.metadata.filestore.archivePrefix }}",
                  "filestorePrincipal": "{{ trigger.metadata.filestore.principal }}",
                  "commandPath": "{{ event.payload.path }}",
                  "timestoreBaseUrl": "{{ trigger.metadata.timestore.baseUrl }}",
                  "timestoreDatasetSlug": "{{ trigger.metadata.timestore.datasetSlug }}",
                  "timestoreDatasetName": "{{ trigger.metadata.timestore.datasetName }}",
                  "timestoreTableName": "{{ trigger.metadata.timestore.tableName }}",
                  "timestoreStorageTargetId": "{{ trigger.metadata.timestore.storageTargetId }}",
                  "timestoreAuthToken": "{{ trigger.metadata.timestore.authToken }}",
                  "metastoreBaseUrl": "{{ trigger.metadata.metastore.baseUrl }}",
                  "metastoreNamespace": "{{ trigger.metadata.metastore.namespace }}",
                  "metastoreAuthToken": "{{ trigger.metadata.metastore.authToken }}"
                },
                "runKeyTemplate": "observatory-ingest-{{ parameters.instrumentId | default: 'unknown' | replace: ':', '-' }}-{{ parameters.minute | replace: ':', '-' }}",
                "metadata": {
                  "maxFiles": "{{ defaultParameters.maxFiles }}",
                  "paths": {
                    "stagingDir": "{{ defaultParameters.stagingDir }}",
                    "archiveDir": "{{ defaultParameters.archiveDir }}"
                  },
                  "filestore": {
                    "baseUrl": "{{ defaultParameters.filestoreBaseUrl }}",
                    "backendMountId": "{{ defaultParameters.filestoreBackendId }}",
                    "token": "{{ defaultParameters.filestoreToken }}",
                    "inboxPrefix": "{{ defaultParameters.inboxPrefix }}",
                    "stagingPrefix": "{{ defaultParameters.stagingPrefix }}",
                    "archivePrefix": "{{ defaultParameters.archivePrefix }}",
                    "principal": "{{ defaultParameters.filestorePrincipal }}"
                  },
                  "timestore": {
                    "baseUrl": "{{ defaultParameters.timestoreBaseUrl }}",
                    "datasetSlug": "{{ defaultParameters.timestoreDatasetSlug }}",
                    "datasetName": "{{ defaultParameters.timestoreDatasetName }}",
                    "tableName": "{{ defaultParameters.timestoreTableName }}",
                    "storageTargetId": "{{ defaultParameters.timestoreStorageTargetId }}",
                    "authToken": "{{ defaultParameters.timestoreAuthToken }}"
                  },
                  "metastore": {
                    "baseUrl": "{{ defaultParameters.metastoreBaseUrl }}",
                    "namespace": "{{ defaultParameters.metastoreNamespace }}",
                    "authToken": "{{ defaultParameters.metastoreAuthToken }}"
                  }
                },
                "idempotencyKeyExpression": "{{ event.payload.path | replace: '/', '_' | replace: ':', '-' }}",
                "status": "active"
              }
            ]
          }
        }
      }
    },
    {
      "slug": "observatory-dashboard-aggregate",
      "path": "examples/environmental-observatory-event-driven/workflows/observatory-dashboard-aggregate.json",
      "definition": {
        "slug": "observatory-dashboard-aggregate",
        "name": "Observatory Dashboard Aggregate",
        "description": "Aggregate recent observatory readings and render the interactive overview dashboard.",
        "parametersSchema": {
          "type": "object",
          "properties": {
            "partitionKey": {
              "type": "string",
              "minLength": 1
            },
            "lookbackMinutes": {
              "type": "number",
              "minimum": 5,
              "maximum": 4320
            },
            "timestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "timestoreDatasetSlug": {
              "type": "string",
              "minLength": 1
            },
            "timestoreAuthToken": {
              "type": "string"
            },
            "filestoreBaseUrl": {
              "type": "string",
              "minLength": 1
            },
            "filestoreBackendId": {
              "type": "number",
              "minimum": 1
            },
            "filestoreToken": {
              "type": "string"
            },
            "filestorePrincipal": {
              "type": "string"
            },
            "reportsPrefix": {
              "type": "string",
              "minLength": 1
            },
            "overviewPrefix": {
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "partitionKey",
            "lookbackMinutes",
            "timestoreBaseUrl",
            "timestoreDatasetSlug",
            "filestoreBaseUrl",
            "filestoreBackendId",
            "reportsPrefix",
            "overviewPrefix"
          ]
        },
        "defaultParameters": {
          "lookbackMinutes": 720,
          "timestoreBaseUrl": "http://127.0.0.1:4200",
          "timestoreDatasetSlug": "observatory-timeseries",
          "timestoreAuthToken": null,
          "reportsPrefix": "datasets/observatory/reports",
          "overviewPrefix": "datasets/observatory/reports/overview",
          "filestoreBaseUrl": "http://127.0.0.1:4300",
          "filestoreBackendId": 1,
          "filestoreToken": null,
          "filestorePrincipal": null
        },
        "triggers": [
          {
            "type": "manual"
          }
        ],
        "metadata": {
          "provisioning": {
            "eventTriggers": [
              {
                "name": "Observatory dashboard aggregate",
                "description": "Refresh the aggregate dashboard whenever new observatory partitions arrive.",
                "eventType": "timestore.partition.created",
                "eventSource": "timestore.ingest",
                "predicates": [
                  {
                    "path": "$.payload.datasetSlug",
                    "operator": "equals",
                    "value": "{{ defaultParameters.timestoreDatasetSlug }}"
                  }
                ],
                "parameterTemplate": {
                  "partitionKey": "{{ event.payload.partitionKeyFields.window | default: event.payload.partitionKey }}",
                  "lookbackMinutes": "{{ trigger.metadata.dashboard.lookbackMinutes }}",
                  "timestoreBaseUrl": "{{ trigger.metadata.timestore.baseUrl }}",
                  "timestoreDatasetSlug": "{{ trigger.metadata.timestore.datasetSlug }}",
                  "timestoreAuthToken": "{{ trigger.metadata.timestore.authToken }}",
                  "filestoreBaseUrl": "{{ trigger.metadata.filestore.baseUrl }}",
                  "filestoreBackendId": "{{ trigger.metadata.filestore.backendMountId }}",
                  "reportsPrefix": "{{ trigger.metadata.paths.reportsPrefix }}",
                  "overviewPrefix": "{{ trigger.metadata.dashboard.overviewPrefix }}",
                  "filestoreToken": "{{ trigger.metadata.filestore.token }}",
                  "filestorePrincipal": "{{ trigger.metadata.filestore.principal }}"
                },
                "metadata": {
                  "paths": {
                    "reportsPrefix": "{{ defaultParameters.reportsPrefix }}"
                  },
                  "timestore": {
                    "baseUrl": "{{ defaultParameters.timestoreBaseUrl }}",
                    "datasetSlug": "{{ defaultParameters.timestoreDatasetSlug }}",
                    "authToken": "{{ defaultParameters.timestoreAuthToken }}"
                  },
                  "dashboard": {
                    "overviewDirName": "{{ defaultParameters.overviewDirName | default: 'overview' }}",
                    "lookbackMinutes": "{{ defaultParameters.lookbackMinutes }}",
                    "overviewPrefix": "{{ defaultParameters.overviewPrefix }}"
                  }
                },
                "idempotencyKeyExpression": "dashboard-aggregate-{{ event.payload.partitionKeyFields.window | default: event.payload.partitionKey }}",
                "status": "active"
              },
              {
                "name": "Observatory dashboard aggregate (fallback)",
                "description": "Fallback trigger so dashboards refresh as soon as the ingest workflow finishes staging.",
                "eventType": "observatory.minute.partition-ready",
                "eventSource": "observatory.timestore-loader",
                "predicates": [
                  {
                    "path": "$.payload.datasetSlug",
                    "operator": "equals",
                    "value": "{{ defaultParameters.timestoreDatasetSlug }}"
                  }
                ],
                "parameterTemplate": {
                  "partitionKey": "{{ event.payload.partitionKeyFields.window | default: event.payload.minute }}",
                  "lookbackMinutes": "{{ trigger.metadata.dashboard.lookbackMinutes }}",
                  "timestoreBaseUrl": "{{ trigger.metadata.timestore.baseUrl }}",
                  "timestoreDatasetSlug": "{{ trigger.metadata.timestore.datasetSlug }}",
                  "timestoreAuthToken": "{{ trigger.metadata.timestore.authToken }}",
                  "filestoreBaseUrl": "{{ trigger.metadata.filestore.baseUrl }}",
                  "filestoreBackendId": "{{ trigger.metadata.filestore.backendMountId }}",
                  "reportsPrefix": "{{ trigger.metadata.paths.reportsPrefix }}",
                  "overviewPrefix": "{{ trigger.metadata.dashboard.overviewPrefix }}",
                  "filestoreToken": "{{ trigger.metadata.filestore.token }}",
                  "filestorePrincipal": "{{ trigger.metadata.filestore.principal }}"
                },
                "metadata": {
                  "paths": {
                    "reportsPrefix": "{{ defaultParameters.reportsPrefix }}"
                  },
                  "timestore": {
                    "baseUrl": "{{ defaultParameters.timestoreBaseUrl }}",
                    "datasetSlug": "{{ defaultParameters.timestoreDatasetSlug }}",
                    "authToken": "{{ defaultParameters.timestoreAuthToken }}"
                  },
                  "dashboard": {
                    "overviewDirName": "{{ defaultParameters.overviewDirName | default: 'overview' }}",
                    "lookbackMinutes": "{{ defaultParameters.lookbackMinutes }}",
                    "overviewPrefix": "{{ defaultParameters.overviewPrefix }}"
                  }
                },
                "idempotencyKeyExpression": "dashboard-aggregate-{{ event.payload.partitionKeyFields.window | default: event.payload.minute }}",
                "status": "active"
              }
            ]
          }
        },
        "steps": [
          {
            "id": "aggregate-dashboard",
            "name": "Aggregate dashboard",
            "type": "job",
            "jobSlug": "observatory-dashboard-aggregator",
            "parameters": {
              "partitionKey": "{{ parameters.partitionKey }}",
              "lookbackMinutes": "{{ parameters.lookbackMinutes }}",
              "timestoreBaseUrl": "{{ parameters.timestoreBaseUrl }}",
              "timestoreDatasetSlug": "{{ parameters.timestoreDatasetSlug }}",
              "timestoreAuthToken": "{{ parameters.timestoreAuthToken }}",
              "filestoreBaseUrl": "{{ parameters.filestoreBaseUrl }}",
              "filestoreBackendId": "{{ parameters.filestoreBackendId }}",
              "filestoreToken": "{{ parameters.filestoreToken }}",
              "filestorePrincipal": "{{ parameters.filestorePrincipal }}",
              "reportsPrefix": "{{ parameters.reportsPrefix }}",
              "overviewPrefix": "{{ parameters.overviewPrefix }}"
            }
          }
        ],
        "version": 1
      }
    }
  ]
}
