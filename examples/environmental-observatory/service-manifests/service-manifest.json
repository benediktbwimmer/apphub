{
  "services": [
    {
      "slug": "observatory-file-watcher",
      "displayName": "Observatory File Watcher",
      "kind": "workflow-watcher",
      "baseUrl": "http://127.0.0.1:4310",
      "healthEndpoint": "/healthz",
      "devCommand": "npm run dev",
      "workingDir": "examples/environmental-observatory/services/observatory-file-watcher",
      "env": [
        {
          "key": "PORT",
          "value": "4310"
        },
        {
          "key": "FILE_WATCH_ROOT",
          "value": {
            "$var": {
              "name": "FILE_WATCH_ROOT",
              "default": "examples/environmental-observatory/data/inbox",
              "description": "Directory monitored for incoming minute-level CSV drops."
            }
          }
        },
        {
          "key": "FILE_WATCH_STAGING_DIR",
          "value": {
            "$var": {
              "name": "FILE_WATCH_STAGING_DIR",
              "default": "examples/environmental-observatory/data/staging",
              "description": "Staging directory where normalized files are copied prior to ingest."
            }
          }
        },
        {
          "key": "FILE_ARCHIVE_DIR",
          "value": {
            "$var": {
              "name": "FILE_ARCHIVE_DIR",
              "default": "examples/environmental-observatory/data/archive",
              "description": "Archive directory where processed inbox files are moved after normalization."
            }
          }
        },
        {
          "key": "TIMESTORE_BASE_URL",
          "value": {
            "$var": {
              "name": "TIMESTORE_BASE_URL",
              "default": "http://host.docker.internal:4200",
              "description": "Timestore API base URL used by the ingestion job."
            }
          }
        },
        {
          "key": "TIMESTORE_DATASET_SLUG",
          "value": {
            "$var": {
              "name": "TIMESTORE_DATASET_SLUG",
              "default": "observatory-timeseries",
              "description": "Dataset slug written by the Timestore loader."
            }
          }
        },
        {
          "key": "TIMESTORE_DATASET_NAME",
          "value": {
            "$var": {
              "name": "TIMESTORE_DATASET_NAME",
              "default": "Observatory Time Series",
              "description": "Human-readable dataset name created on first ingest."
            }
          }
        },
        {
          "key": "TIMESTORE_TABLE_NAME",
          "value": {
            "$var": {
              "name": "TIMESTORE_TABLE_NAME",
              "default": "observations",
              "description": "Logical table name used inside Timestore."
            }
          }
        },
        {
          "key": "TIMESTORE_STORAGE_TARGET_ID",
          "value": {
            "$var": {
              "name": "TIMESTORE_STORAGE_TARGET_ID",
              "default": "",
              "description": "Optional storage target override for the ingestion job."
            }
          }
        },
        {
          "key": "TIMESTORE_API_TOKEN",
          "value": {
            "$var": {
              "name": "TIMESTORE_API_TOKEN",
              "default": "",
              "description": "Bearer token forwarded to the Timestore API if required."
            }
          }
        },
        {
          "key": "OBSERVATORY_WORKFLOW_SLUG",
          "value": "observatory-minute-ingest"
        },
        {
          "key": "FILE_WATCH_MAX_FILES",
          "value": "64"
        },
        {
          "key": "OBSERVATORY_AUTO_COMPLETE",
          "value": "true"
        },
        {
          "key": "CATALOG_API_BASE_URL",
          "value": "http://host.docker.internal:4000"
        },
        {
          "key": "CATALOG_API_TOKEN",
          "value": {
            "$var": {
              "name": "CATALOG_API_TOKEN",
              "default": "dev-token",
              "description": "Operator API token used to trigger workflows and update run status."
            }
          }
        }
      ]
    },
    {
      "slug": "observatory-dashboard",
      "displayName": "Observatory Dashboard",
      "kind": "dashboard",
      "baseUrl": "http://127.0.0.1:4311",
      "healthEndpoint": "/healthz",
      "devCommand": "npm run dev",
      "workingDir": "examples/environmental-observatory/services/observatory-dashboard",
      "env": [
        {
          "key": "REPORTS_DIR",
          "value": {
            "$var": {
              "name": "REPORTS_DIR",
              "default": "examples/environmental-observatory/data/reports",
              "description": "Directory containing observatory status reports (status.html/json/md)."
            }
          }
        },
        {
          "key": "HOST",
          "value": "0.0.0.0"
        },
        {
          "key": "PORT",
          "value": "4311"
        },
        {
          "key": "DASHBOARD_REFRESH_MS",
          "value": "10000"
        }
      ]
    }
  ]
}