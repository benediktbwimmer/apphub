{
  "openapi": "3.0.3",
  "info": {
    "title": "AppHub Filestore API",
    "version": "1.0.0",
    "description": "HTTP interface for managing storage backends, file metadata, and reconciliation jobs within the AppHub filestore service."
  },
  "components": {
    "schemas": {
      "JsonValue": {
        "description": "Arbitrary JSON value.",
        "nullable": true,
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          }
        ]
      },
      "JsonRecord": {
        "type": "object",
        "description": "Map of string keys to arbitrary JSON values.",
        "additionalProperties": {
          "$ref": "#/components/schemas/def-0"
        }
      },
      "ErrorObject": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Stable machine-readable identifier for the error."
          },
          "message": {
            "type": "string",
            "description": "Human-readable explanation of the error."
          },
          "details": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Stable machine-readable identifier for the error."
              },
              "message": {
                "type": "string",
                "description": "Human-readable explanation of the error."
              },
              "details": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "EventsHealth": {
        "type": "object",
        "required": [
          "mode",
          "ready",
          "lastError"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "inline",
              "redis"
            ],
            "description": "Operating mode for filestore event delivery."
          },
          "ready": {
            "type": "boolean",
            "description": "Indicates whether the event publisher is ready."
          },
          "lastError": {
            "type": "string",
            "description": "Most recent connection or publish error, when available.",
            "nullable": true
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "status",
          "events"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "degraded"
            ],
            "description": "Summary health indicator for the filestore service."
          },
          "events": {
            "type": "object",
            "required": [
              "mode",
              "ready",
              "lastError"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "inline",
                  "redis"
                ],
                "description": "Operating mode for filestore event delivery."
              },
              "ready": {
                "type": "boolean",
                "description": "Indicates whether the event publisher is ready."
              },
              "lastError": {
                "type": "string",
                "description": "Most recent connection or publish error, when available.",
                "nullable": true
              }
            }
          }
        }
      },
      "ReadyResponse": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ],
            "description": "Indicates all critical dependencies are available."
          }
        }
      },
      "ReadyUnavailableResponse": {
        "type": "object",
        "required": [
          "status",
          "reason",
          "events"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "unavailable"
            ],
            "description": "Signals that at least one dependency is unavailable."
          },
          "reason": {
            "type": "string",
            "description": "Details about the failing dependency."
          },
          "events": {
            "type": "object",
            "required": [
              "mode",
              "ready",
              "lastError"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "inline",
                  "redis"
                ],
                "description": "Operating mode for filestore event delivery."
              },
              "ready": {
                "type": "boolean",
                "description": "Indicates whether the event publisher is ready."
              },
              "lastError": {
                "type": "string",
                "description": "Most recent connection or publish error, when available.",
                "nullable": true
              }
            }
          }
        }
      },
      "BackendMount": {
        "type": "object",
        "required": [
          "id",
          "mountKey",
          "backendKind",
          "accessMode",
          "state",
          "labels",
          "rootPath",
          "bucket",
          "prefix",
          "createdAt",
          "updatedAt",
          "config",
          "displayName",
          "description",
          "contact",
          "stateReason",
          "lastHealthCheckAt",
          "lastHealthStatus"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the backend mount."
          },
          "mountKey": {
            "type": "string",
            "description": "Stable slug identifying the backend."
          },
          "displayName": {
            "type": "string",
            "description": "Human friendly backend name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Optional description of the backend.",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "description": "Point of contact for the backend.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "description": "Arbitrary labels associated with the backend.",
            "items": {
              "type": "string"
            }
          },
          "backendKind": {
            "type": "string",
            "enum": [
              "local",
              "s3"
            ],
            "description": "Implementation backing this mount."
          },
          "accessMode": {
            "type": "string",
            "enum": [
              "rw",
              "ro"
            ],
            "description": "Indicates whether files can be written or only read."
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "offline",
              "degraded",
              "error",
              "unknown"
            ],
            "description": "Current health state as reported by the mount."
          },
          "stateReason": {
            "type": "string",
            "description": "Additional context explaining the current state.",
            "nullable": true
          },
          "rootPath": {
            "type": "string",
            "description": "Base path for local backends.",
            "nullable": true
          },
          "bucket": {
            "type": "string",
            "description": "Bucket name for S3 backends.",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "Optional prefix used when addressing the backend.",
            "nullable": true
          },
          "config": {
            "type": "object",
            "description": "Backend specific configuration. Secrets are omitted.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            },
            "nullable": true
          },
          "lastHealthCheckAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the most recent health check.",
            "nullable": true
          },
          "lastHealthStatus": {
            "type": "string",
            "description": "Latest reported status message from the backend.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the backend was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the backend was last updated."
          }
        }
      },
      "BackendMountEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "mountKey",
              "backendKind",
              "accessMode",
              "state",
              "labels",
              "rootPath",
              "bucket",
              "prefix",
              "createdAt",
              "updatedAt",
              "config",
              "displayName",
              "description",
              "contact",
              "stateReason",
              "lastHealthCheckAt",
              "lastHealthStatus"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the backend mount."
              },
              "mountKey": {
                "type": "string",
                "description": "Stable slug identifying the backend."
              },
              "displayName": {
                "type": "string",
                "description": "Human friendly backend name.",
                "nullable": true
              },
              "description": {
                "type": "string",
                "description": "Optional description of the backend.",
                "nullable": true
              },
              "contact": {
                "type": "string",
                "description": "Point of contact for the backend.",
                "nullable": true
              },
              "labels": {
                "type": "array",
                "description": "Arbitrary labels associated with the backend.",
                "items": {
                  "type": "string"
                }
              },
              "backendKind": {
                "type": "string",
                "enum": [
                  "local",
                  "s3"
                ],
                "description": "Implementation backing this mount."
              },
              "accessMode": {
                "type": "string",
                "enum": [
                  "rw",
                  "ro"
                ],
                "description": "Indicates whether files can be written or only read."
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inactive",
                  "offline",
                  "degraded",
                  "error",
                  "unknown"
                ],
                "description": "Current health state as reported by the mount."
              },
              "stateReason": {
                "type": "string",
                "description": "Additional context explaining the current state.",
                "nullable": true
              },
              "rootPath": {
                "type": "string",
                "description": "Base path for local backends.",
                "nullable": true
              },
              "bucket": {
                "type": "string",
                "description": "Bucket name for S3 backends.",
                "nullable": true
              },
              "prefix": {
                "type": "string",
                "description": "Optional prefix used when addressing the backend.",
                "nullable": true
              },
              "config": {
                "type": "object",
                "description": "Backend specific configuration. Secrets are omitted.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                },
                "nullable": true
              },
              "lastHealthCheckAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent health check.",
                "nullable": true
              },
              "lastHealthStatus": {
                "type": "string",
                "description": "Latest reported status message from the backend.",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the backend was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the backend was last updated."
              }
            }
          }
        }
      },
      "BackendMountListFilters": {
        "type": "object",
        "required": [
          "search",
          "kinds",
          "states",
          "accessModes"
        ],
        "properties": {
          "search": {
            "type": "string",
            "description": "Search term applied to mount names or descriptions.",
            "nullable": true
          },
          "kinds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "local",
                "s3"
              ]
            }
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "offline",
                "degraded",
                "error",
                "unknown"
              ]
            }
          },
          "accessModes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "rw",
                "ro"
              ]
            }
          }
        }
      },
      "BackendMountList": {
        "type": "object",
        "required": [
          "mounts",
          "pagination",
          "filters"
        ],
        "properties": {
          "mounts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "mountKey",
                "backendKind",
                "accessMode",
                "state",
                "labels",
                "rootPath",
                "bucket",
                "prefix",
                "createdAt",
                "updatedAt",
                "config",
                "displayName",
                "description",
                "contact",
                "stateReason",
                "lastHealthCheckAt",
                "lastHealthStatus"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the backend mount."
                },
                "mountKey": {
                  "type": "string",
                  "description": "Stable slug identifying the backend."
                },
                "displayName": {
                  "type": "string",
                  "description": "Human friendly backend name.",
                  "nullable": true
                },
                "description": {
                  "type": "string",
                  "description": "Optional description of the backend.",
                  "nullable": true
                },
                "contact": {
                  "type": "string",
                  "description": "Point of contact for the backend.",
                  "nullable": true
                },
                "labels": {
                  "type": "array",
                  "description": "Arbitrary labels associated with the backend.",
                  "items": {
                    "type": "string"
                  }
                },
                "backendKind": {
                  "type": "string",
                  "enum": [
                    "local",
                    "s3"
                  ],
                  "description": "Implementation backing this mount."
                },
                "accessMode": {
                  "type": "string",
                  "enum": [
                    "rw",
                    "ro"
                  ],
                  "description": "Indicates whether files can be written or only read."
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive",
                    "offline",
                    "degraded",
                    "error",
                    "unknown"
                  ],
                  "description": "Current health state as reported by the mount."
                },
                "stateReason": {
                  "type": "string",
                  "description": "Additional context explaining the current state.",
                  "nullable": true
                },
                "rootPath": {
                  "type": "string",
                  "description": "Base path for local backends.",
                  "nullable": true
                },
                "bucket": {
                  "type": "string",
                  "description": "Bucket name for S3 backends.",
                  "nullable": true
                },
                "prefix": {
                  "type": "string",
                  "description": "Optional prefix used when addressing the backend.",
                  "nullable": true
                },
                "config": {
                  "type": "object",
                  "description": "Backend specific configuration. Secrets are omitted.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  },
                  "nullable": true
                },
                "lastHealthCheckAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent health check.",
                  "nullable": true
                },
                "lastHealthStatus": {
                  "type": "string",
                  "description": "Latest reported status message from the backend.",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the backend was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the backend was last updated."
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": "integer",
                "description": "Next offset to request, if more data is available.",
                "nullable": true
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "search",
              "kinds",
              "states",
              "accessModes"
            ],
            "properties": {
              "search": {
                "type": "string",
                "description": "Search term applied to mount names or descriptions.",
                "nullable": true
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "local",
                    "s3"
                  ]
                }
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive",
                    "offline",
                    "degraded",
                    "error",
                    "unknown"
                  ]
                }
              },
              "accessModes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "rw",
                    "ro"
                  ]
                }
              }
            }
          }
        }
      },
      "BackendMountListEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "mounts",
              "pagination",
              "filters"
            ],
            "properties": {
              "mounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "mountKey",
                    "backendKind",
                    "accessMode",
                    "state",
                    "labels",
                    "rootPath",
                    "bucket",
                    "prefix",
                    "createdAt",
                    "updatedAt",
                    "config",
                    "displayName",
                    "description",
                    "contact",
                    "stateReason",
                    "lastHealthCheckAt",
                    "lastHealthStatus"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the backend mount."
                    },
                    "mountKey": {
                      "type": "string",
                      "description": "Stable slug identifying the backend."
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Human friendly backend name.",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "description": "Optional description of the backend.",
                      "nullable": true
                    },
                    "contact": {
                      "type": "string",
                      "description": "Point of contact for the backend.",
                      "nullable": true
                    },
                    "labels": {
                      "type": "array",
                      "description": "Arbitrary labels associated with the backend.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "backendKind": {
                      "type": "string",
                      "enum": [
                        "local",
                        "s3"
                      ],
                      "description": "Implementation backing this mount."
                    },
                    "accessMode": {
                      "type": "string",
                      "enum": [
                        "rw",
                        "ro"
                      ],
                      "description": "Indicates whether files can be written or only read."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive",
                        "offline",
                        "degraded",
                        "error",
                        "unknown"
                      ],
                      "description": "Current health state as reported by the mount."
                    },
                    "stateReason": {
                      "type": "string",
                      "description": "Additional context explaining the current state.",
                      "nullable": true
                    },
                    "rootPath": {
                      "type": "string",
                      "description": "Base path for local backends.",
                      "nullable": true
                    },
                    "bucket": {
                      "type": "string",
                      "description": "Bucket name for S3 backends.",
                      "nullable": true
                    },
                    "prefix": {
                      "type": "string",
                      "description": "Optional prefix used when addressing the backend.",
                      "nullable": true
                    },
                    "config": {
                      "type": "object",
                      "description": "Backend specific configuration. Secrets are omitted.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      },
                      "nullable": true
                    },
                    "lastHealthCheckAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent health check.",
                      "nullable": true
                    },
                    "lastHealthStatus": {
                      "type": "string",
                      "description": "Latest reported status message from the backend.",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the backend was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the backend was last updated."
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": "integer",
                    "description": "Next offset to request, if more data is available.",
                    "nullable": true
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "search",
                  "kinds",
                  "states",
                  "accessModes"
                ],
                "properties": {
                  "search": {
                    "type": "string",
                    "description": "Search term applied to mount names or descriptions.",
                    "nullable": true
                  },
                  "kinds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "local",
                        "s3"
                      ]
                    }
                  },
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive",
                        "offline",
                        "degraded",
                        "error",
                        "unknown"
                      ]
                    }
                  },
                  "accessModes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "rw",
                        "ro"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "BackendMountCreateRequest": {
        "type": "object",
        "required": [
          "mountKey",
          "backendKind"
        ],
        "additionalProperties": false,
        "properties": {
          "mountKey": {
            "type": "string",
            "description": "Unique slug for the backend mount."
          },
          "backendKind": {
            "type": "string",
            "enum": [
              "local",
              "s3"
            ]
          },
          "displayName": {
            "type": "string",
            "description": "Optional display name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Optional description.",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "description": "Point of contact for the backend.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "description": "Optional labels providing additional context.",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "offline",
              "degraded",
              "error",
              "unknown"
            ],
            "description": "Override the lifecycle state for the backend."
          },
          "stateReason": {
            "type": "string",
            "description": "Explanation for the assigned state.",
            "nullable": true
          },
          "accessMode": {
            "type": "string",
            "enum": [
              "rw",
              "ro"
            ],
            "description": "Desired access level for the backend."
          },
          "rootPath": {
            "type": "string",
            "description": "Path to mount for local backends.",
            "nullable": true
          },
          "bucket": {
            "type": "string",
            "description": "Bucket name for S3 backends.",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "Optional path prefix when interacting with the backend.",
            "nullable": true
          },
          "config": {
            "type": "object",
            "description": "Backend specific configuration overrides.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            },
            "nullable": true
          }
        }
      },
      "BackendMountUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mountKey": {
            "type": "string",
            "description": "Updated slug for the backend mount."
          },
          "displayName": {
            "type": "string",
            "description": "Optional display name.",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Optional description.",
            "nullable": true
          },
          "contact": {
            "type": "string",
            "description": "Point of contact for the backend.",
            "nullable": true
          },
          "labels": {
            "type": "array",
            "description": "Optional labels providing additional context.",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "offline",
              "degraded",
              "error",
              "unknown"
            ],
            "description": "Override the lifecycle state for the backend."
          },
          "stateReason": {
            "type": "string",
            "description": "Explanation for the assigned state.",
            "nullable": true
          },
          "accessMode": {
            "type": "string",
            "enum": [
              "rw",
              "ro"
            ],
            "description": "Desired access level for the backend."
          },
          "rootPath": {
            "type": "string",
            "description": "Path to mount for local backends.",
            "nullable": true
          },
          "bucket": {
            "type": "string",
            "description": "Bucket name for S3 backends.",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "Optional path prefix when interacting with the backend.",
            "nullable": true
          },
          "config": {
            "type": "object",
            "description": "Backend specific configuration overrides.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            },
            "nullable": true
          }
        }
      },
      "Pagination": {
        "type": "object",
        "required": [
          "total",
          "limit",
          "offset",
          "nextOffset"
        ],
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total matching records."
          },
          "limit": {
            "type": "integer",
            "description": "Requested page size."
          },
          "offset": {
            "type": "integer",
            "description": "Current offset within the collection."
          },
          "nextOffset": {
            "type": "integer",
            "description": "Next offset to request, if more data is available.",
            "nullable": true
          }
        }
      },
      "NodeRollup": {
        "type": "object",
        "required": [
          "nodeId",
          "sizeBytes",
          "fileCount",
          "directoryCount",
          "childCount",
          "state",
          "lastCalculatedAt"
        ],
        "properties": {
          "nodeId": {
            "type": "integer",
            "description": "Identifier of the node associated with this rollup."
          },
          "sizeBytes": {
            "type": "integer",
            "description": "Total bytes attributed to the subtree."
          },
          "fileCount": {
            "type": "integer",
            "description": "Number of files in the subtree."
          },
          "directoryCount": {
            "type": "integer",
            "description": "Number of directories in the subtree."
          },
          "childCount": {
            "type": "integer",
            "description": "Total direct children tracked in the rollup."
          },
          "state": {
            "type": "string",
            "enum": [
              "up_to_date",
              "pending",
              "stale",
              "invalid"
            ],
            "description": "Freshness indicator for the rollup snapshot."
          },
          "lastCalculatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the most recent rollup calculation.",
            "nullable": true
          }
        }
      },
      "NodeDownloadDescriptor": {
        "type": "object",
        "required": [
          "mode",
          "streamUrl",
          "presignUrl",
          "supportsRange",
          "sizeBytes",
          "checksum",
          "contentHash",
          "filename"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "stream",
              "presign"
            ],
            "description": "Preferred download strategy for the file."
          },
          "streamUrl": {
            "type": "string",
            "description": "URL to stream the file through the filestore service."
          },
          "presignUrl": {
            "type": "string",
            "description": "Link to request a presigned download if supported.",
            "nullable": true
          },
          "supportsRange": {
            "type": "boolean",
            "description": "Indicates whether byte-range requests are supported."
          },
          "sizeBytes": {
            "type": "integer",
            "description": "Known size of the file when available.",
            "nullable": true
          },
          "checksum": {
            "type": "string",
            "description": "Checksum recorded for the file content.",
            "nullable": true
          },
          "contentHash": {
            "type": "string",
            "description": "Content hash recorded for the file content.",
            "nullable": true
          },
          "filename": {
            "type": "string",
            "description": "Suggested filename for downloads.",
            "nullable": true
          }
        }
      },
      "FilestoreNode": {
        "type": "object",
        "required": [
          "id",
          "backendMountId",
          "parentId",
          "path",
          "name",
          "depth",
          "kind",
          "sizeBytes",
          "checksum",
          "contentHash",
          "metadata",
          "state",
          "version",
          "isSymlink",
          "lastSeenAt",
          "lastModifiedAt",
          "consistencyState",
          "consistencyCheckedAt",
          "lastReconciledAt",
          "lastDriftDetectedAt",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "rollup",
          "download"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the node."
          },
          "backendMountId": {
            "type": "integer",
            "description": "Identifier of the backend mount containing the node."
          },
          "parentId": {
            "type": "integer",
            "description": "Identifier of the parent directory, if any.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Normalized absolute path for the node."
          },
          "name": {
            "type": "string",
            "description": "Basename of the node."
          },
          "depth": {
            "type": "integer",
            "description": "Directory depth starting from the backend root."
          },
          "kind": {
            "type": "string",
            "enum": [
              "file",
              "directory"
            ]
          },
          "sizeBytes": {
            "type": "integer",
            "description": "Logical size recorded for the node, in bytes."
          },
          "checksum": {
            "type": "string",
            "description": "Checksum recorded for the node content.",
            "nullable": true
          },
          "contentHash": {
            "type": "string",
            "description": "Content hash recorded for the node content.",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "description": "Arbitrary metadata captured for the node.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inconsistent",
              "missing",
              "deleted"
            ],
            "description": "Lifecycle state tracked for the node."
          },
          "version": {
            "type": "integer",
            "description": "Monotonic version counter for optimistic concurrency."
          },
          "isSymlink": {
            "type": "boolean",
            "description": "Indicates if the node represents a symbolic link."
          },
          "lastSeenAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node was last observed in the backend."
          },
          "lastModifiedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Last modification timestamp reported by the backend.",
            "nullable": true
          },
          "consistencyState": {
            "type": "string",
            "enum": [
              "active",
              "inconsistent",
              "missing"
            ],
            "description": "Consistency status derived from reconciliation."
          },
          "consistencyCheckedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the most recent consistency check."
          },
          "lastReconciledAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the most recent reconciliation success.",
            "nullable": true
          },
          "lastDriftDetectedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when drift was last detected.",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node record was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node record was last updated."
          },
          "deletedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node was marked deleted.",
            "nullable": true
          },
          "rollup": {
            "type": "object",
            "required": [
              "nodeId",
              "sizeBytes",
              "fileCount",
              "directoryCount",
              "childCount",
              "state",
              "lastCalculatedAt"
            ],
            "properties": {
              "nodeId": {
                "type": "integer",
                "description": "Identifier of the node associated with this rollup."
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Total bytes attributed to the subtree."
              },
              "fileCount": {
                "type": "integer",
                "description": "Number of files in the subtree."
              },
              "directoryCount": {
                "type": "integer",
                "description": "Number of directories in the subtree."
              },
              "childCount": {
                "type": "integer",
                "description": "Total direct children tracked in the rollup."
              },
              "state": {
                "type": "string",
                "enum": [
                  "up_to_date",
                  "pending",
                  "stale",
                  "invalid"
                ],
                "description": "Freshness indicator for the rollup snapshot."
              },
              "lastCalculatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent rollup calculation.",
                "nullable": true
              }
            },
            "nullable": true
          },
          "download": {
            "type": "object",
            "required": [
              "mode",
              "streamUrl",
              "presignUrl",
              "supportsRange",
              "sizeBytes",
              "checksum",
              "contentHash",
              "filename"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "stream",
                  "presign"
                ],
                "description": "Preferred download strategy for the file."
              },
              "streamUrl": {
                "type": "string",
                "description": "URL to stream the file through the filestore service."
              },
              "presignUrl": {
                "type": "string",
                "description": "Link to request a presigned download if supported.",
                "nullable": true
              },
              "supportsRange": {
                "type": "boolean",
                "description": "Indicates whether byte-range requests are supported."
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Known size of the file when available.",
                "nullable": true
              },
              "checksum": {
                "type": "string",
                "description": "Checksum recorded for the file content.",
                "nullable": true
              },
              "contentHash": {
                "type": "string",
                "description": "Content hash recorded for the file content.",
                "nullable": true
              },
              "filename": {
                "type": "string",
                "description": "Suggested filename for downloads.",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "FilestoreNodeFilters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "query": {
            "type": "string",
            "description": "Full-text search term applied to node names and metadata."
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Metadata key to match."
                },
                "value": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            },
            "description": "Match nodes whose metadata entries equal the supplied values."
          },
          "size": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "min": {
                "type": "integer",
                "description": "Lower bound, inclusive."
              },
              "max": {
                "type": "integer",
                "description": "Upper bound, inclusive."
              }
            },
            "description": "Range constraint applied to numeric values."
          },
          "lastSeenAt": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "after": {
                "type": "string",
                "format": "date-time",
                "description": "Lower inclusive bound."
              },
              "before": {
                "type": "string",
                "format": "date-time",
                "description": "Upper inclusive bound."
              }
            },
            "description": "Range constraint applied to ISO-8601 timestamps."
          },
          "rollup": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "up_to_date",
                    "pending",
                    "stale",
                    "invalid"
                  ]
                }
              },
              "minChildCount": {
                "type": "integer"
              },
              "maxChildCount": {
                "type": "integer"
              },
              "minFileCount": {
                "type": "integer"
              },
              "maxFileCount": {
                "type": "integer"
              },
              "minDirectoryCount": {
                "type": "integer"
              },
              "maxDirectoryCount": {
                "type": "integer"
              },
              "minSizeBytes": {
                "type": "integer"
              },
              "maxSizeBytes": {
                "type": "integer"
              },
              "lastCalculatedAfter": {
                "type": "string",
                "format": "date-time"
              },
              "lastCalculatedBefore": {
                "type": "string",
                "format": "date-time"
              }
            },
            "description": "Advanced rollup constraints applied when filtering nodes."
          }
        }
      },
      "NodeListFilters": {
        "type": "object",
        "required": [
          "backendMountId",
          "path",
          "depth",
          "states",
          "kinds",
          "search",
          "driftOnly",
          "advanced"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend filter applied to the query."
          },
          "path": {
            "type": "string",
            "description": "Optional path prefix filter.",
            "nullable": true
          },
          "depth": {
            "type": "integer",
            "description": "Maximum depth relative to the provided path.",
            "nullable": true
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "inconsistent",
                "missing",
                "deleted"
              ]
            }
          },
          "kinds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "file",
                "directory"
              ]
            }
          },
          "search": {
            "type": "string",
            "description": "Term supplied via search or advanced filters.",
            "nullable": true
          },
          "driftOnly": {
            "type": "boolean",
            "description": "Whether only nodes with detected drift were requested."
          },
          "advanced": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "query": {
                "type": "string",
                "description": "Full-text search term applied to node names and metadata."
              },
              "metadata": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Metadata key to match."
                    },
                    "value": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                },
                "description": "Match nodes whose metadata entries equal the supplied values."
              },
              "size": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "min": {
                    "type": "integer",
                    "description": "Lower bound, inclusive."
                  },
                  "max": {
                    "type": "integer",
                    "description": "Upper bound, inclusive."
                  }
                },
                "description": "Range constraint applied to numeric values."
              },
              "lastSeenAt": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Lower inclusive bound."
                  },
                  "before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Upper inclusive bound."
                  }
                },
                "description": "Range constraint applied to ISO-8601 timestamps."
              },
              "rollup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "up_to_date",
                        "pending",
                        "stale",
                        "invalid"
                      ]
                    }
                  },
                  "minChildCount": {
                    "type": "integer"
                  },
                  "maxChildCount": {
                    "type": "integer"
                  },
                  "minFileCount": {
                    "type": "integer"
                  },
                  "maxFileCount": {
                    "type": "integer"
                  },
                  "minDirectoryCount": {
                    "type": "integer"
                  },
                  "maxDirectoryCount": {
                    "type": "integer"
                  },
                  "minSizeBytes": {
                    "type": "integer"
                  },
                  "maxSizeBytes": {
                    "type": "integer"
                  },
                  "lastCalculatedAfter": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastCalculatedBefore": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "description": "Advanced rollup constraints applied when filtering nodes."
              }
            },
            "nullable": true
          }
        }
      },
      "NodeList": {
        "type": "object",
        "required": [
          "nodes",
          "pagination",
          "filters"
        ],
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "backendMountId",
                "parentId",
                "path",
                "name",
                "depth",
                "kind",
                "sizeBytes",
                "checksum",
                "contentHash",
                "metadata",
                "state",
                "version",
                "isSymlink",
                "lastSeenAt",
                "lastModifiedAt",
                "consistencyState",
                "consistencyCheckedAt",
                "lastReconciledAt",
                "lastDriftDetectedAt",
                "createdAt",
                "updatedAt",
                "deletedAt",
                "rollup",
                "download"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the node."
                },
                "backendMountId": {
                  "type": "integer",
                  "description": "Identifier of the backend mount containing the node."
                },
                "parentId": {
                  "type": "integer",
                  "description": "Identifier of the parent directory, if any.",
                  "nullable": true
                },
                "path": {
                  "type": "string",
                  "description": "Normalized absolute path for the node."
                },
                "name": {
                  "type": "string",
                  "description": "Basename of the node."
                },
                "depth": {
                  "type": "integer",
                  "description": "Directory depth starting from the backend root."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                },
                "sizeBytes": {
                  "type": "integer",
                  "description": "Logical size recorded for the node, in bytes."
                },
                "checksum": {
                  "type": "string",
                  "description": "Checksum recorded for the node content.",
                  "nullable": true
                },
                "contentHash": {
                  "type": "string",
                  "description": "Content hash recorded for the node content.",
                  "nullable": true
                },
                "metadata": {
                  "type": "object",
                  "description": "Arbitrary metadata captured for the node.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ],
                  "description": "Lifecycle state tracked for the node."
                },
                "version": {
                  "type": "integer",
                  "description": "Monotonic version counter for optimistic concurrency."
                },
                "isSymlink": {
                  "type": "boolean",
                  "description": "Indicates if the node represents a symbolic link."
                },
                "lastSeenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node was last observed in the backend."
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp reported by the backend.",
                  "nullable": true
                },
                "consistencyState": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing"
                  ],
                  "description": "Consistency status derived from reconciliation."
                },
                "consistencyCheckedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent consistency check."
                },
                "lastReconciledAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent reconciliation success.",
                  "nullable": true
                },
                "lastDriftDetectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when drift was last detected.",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was last updated."
                },
                "deletedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node was marked deleted.",
                  "nullable": true
                },
                "rollup": {
                  "type": "object",
                  "required": [
                    "nodeId",
                    "sizeBytes",
                    "fileCount",
                    "directoryCount",
                    "childCount",
                    "state",
                    "lastCalculatedAt"
                  ],
                  "properties": {
                    "nodeId": {
                      "type": "integer",
                      "description": "Identifier of the node associated with this rollup."
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Total bytes attributed to the subtree."
                    },
                    "fileCount": {
                      "type": "integer",
                      "description": "Number of files in the subtree."
                    },
                    "directoryCount": {
                      "type": "integer",
                      "description": "Number of directories in the subtree."
                    },
                    "childCount": {
                      "type": "integer",
                      "description": "Total direct children tracked in the rollup."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "up_to_date",
                        "pending",
                        "stale",
                        "invalid"
                      ],
                      "description": "Freshness indicator for the rollup snapshot."
                    },
                    "lastCalculatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent rollup calculation.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "download": {
                  "type": "object",
                  "required": [
                    "mode",
                    "streamUrl",
                    "presignUrl",
                    "supportsRange",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "filename"
                  ],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "enum": [
                        "stream",
                        "presign"
                      ],
                      "description": "Preferred download strategy for the file."
                    },
                    "streamUrl": {
                      "type": "string",
                      "description": "URL to stream the file through the filestore service."
                    },
                    "presignUrl": {
                      "type": "string",
                      "description": "Link to request a presigned download if supported.",
                      "nullable": true
                    },
                    "supportsRange": {
                      "type": "boolean",
                      "description": "Indicates whether byte-range requests are supported."
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Known size of the file when available.",
                      "nullable": true
                    },
                    "checksum": {
                      "type": "string",
                      "description": "Checksum recorded for the file content.",
                      "nullable": true
                    },
                    "contentHash": {
                      "type": "string",
                      "description": "Content hash recorded for the file content.",
                      "nullable": true
                    },
                    "filename": {
                      "type": "string",
                      "description": "Suggested filename for downloads.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": "integer",
                "description": "Next offset to request, if more data is available.",
                "nullable": true
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "backendMountId",
              "path",
              "depth",
              "states",
              "kinds",
              "search",
              "driftOnly",
              "advanced"
            ],
            "properties": {
              "backendMountId": {
                "type": "integer",
                "description": "Backend filter applied to the query."
              },
              "path": {
                "type": "string",
                "description": "Optional path prefix filter.",
                "nullable": true
              },
              "depth": {
                "type": "integer",
                "description": "Maximum depth relative to the provided path.",
                "nullable": true
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ]
                }
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                }
              },
              "search": {
                "type": "string",
                "description": "Term supplied via search or advanced filters.",
                "nullable": true
              },
              "driftOnly": {
                "type": "boolean",
                "description": "Whether only nodes with detected drift were requested."
              },
              "advanced": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Full-text search term applied to node names and metadata."
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Metadata key to match."
                        },
                        "value": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    },
                    "description": "Match nodes whose metadata entries equal the supplied values."
                  },
                  "size": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "min": {
                        "type": "integer",
                        "description": "Lower bound, inclusive."
                      },
                      "max": {
                        "type": "integer",
                        "description": "Upper bound, inclusive."
                      }
                    },
                    "description": "Range constraint applied to numeric values."
                  },
                  "lastSeenAt": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "after": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Lower inclusive bound."
                      },
                      "before": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Upper inclusive bound."
                      }
                    },
                    "description": "Range constraint applied to ISO-8601 timestamps."
                  },
                  "rollup": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "states": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ]
                        }
                      },
                      "minChildCount": {
                        "type": "integer"
                      },
                      "maxChildCount": {
                        "type": "integer"
                      },
                      "minFileCount": {
                        "type": "integer"
                      },
                      "maxFileCount": {
                        "type": "integer"
                      },
                      "minDirectoryCount": {
                        "type": "integer"
                      },
                      "maxDirectoryCount": {
                        "type": "integer"
                      },
                      "minSizeBytes": {
                        "type": "integer"
                      },
                      "maxSizeBytes": {
                        "type": "integer"
                      },
                      "lastCalculatedAfter": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastCalculatedBefore": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "description": "Advanced rollup constraints applied when filtering nodes."
                  }
                },
                "nullable": true
              }
            }
          }
        }
      },
      "NodeListEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "nodes",
              "pagination",
              "filters"
            ],
            "properties": {
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "backendMountId",
                    "parentId",
                    "path",
                    "name",
                    "depth",
                    "kind",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "metadata",
                    "state",
                    "version",
                    "isSymlink",
                    "lastSeenAt",
                    "lastModifiedAt",
                    "consistencyState",
                    "consistencyCheckedAt",
                    "lastReconciledAt",
                    "lastDriftDetectedAt",
                    "createdAt",
                    "updatedAt",
                    "deletedAt",
                    "rollup",
                    "download"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the node."
                    },
                    "backendMountId": {
                      "type": "integer",
                      "description": "Identifier of the backend mount containing the node."
                    },
                    "parentId": {
                      "type": "integer",
                      "description": "Identifier of the parent directory, if any.",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "description": "Normalized absolute path for the node."
                    },
                    "name": {
                      "type": "string",
                      "description": "Basename of the node."
                    },
                    "depth": {
                      "type": "integer",
                      "description": "Directory depth starting from the backend root."
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Logical size recorded for the node, in bytes."
                    },
                    "checksum": {
                      "type": "string",
                      "description": "Checksum recorded for the node content.",
                      "nullable": true
                    },
                    "contentHash": {
                      "type": "string",
                      "description": "Content hash recorded for the node content.",
                      "nullable": true
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Arbitrary metadata captured for the node.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ],
                      "description": "Lifecycle state tracked for the node."
                    },
                    "version": {
                      "type": "integer",
                      "description": "Monotonic version counter for optimistic concurrency."
                    },
                    "isSymlink": {
                      "type": "boolean",
                      "description": "Indicates if the node represents a symbolic link."
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node was last observed in the backend."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp reported by the backend.",
                      "nullable": true
                    },
                    "consistencyState": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing"
                      ],
                      "description": "Consistency status derived from reconciliation."
                    },
                    "consistencyCheckedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent consistency check."
                    },
                    "lastReconciledAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent reconciliation success.",
                      "nullable": true
                    },
                    "lastDriftDetectedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when drift was last detected.",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was last updated."
                    },
                    "deletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node was marked deleted.",
                      "nullable": true
                    },
                    "rollup": {
                      "type": "object",
                      "required": [
                        "nodeId",
                        "sizeBytes",
                        "fileCount",
                        "directoryCount",
                        "childCount",
                        "state",
                        "lastCalculatedAt"
                      ],
                      "properties": {
                        "nodeId": {
                          "type": "integer",
                          "description": "Identifier of the node associated with this rollup."
                        },
                        "sizeBytes": {
                          "type": "integer",
                          "description": "Total bytes attributed to the subtree."
                        },
                        "fileCount": {
                          "type": "integer",
                          "description": "Number of files in the subtree."
                        },
                        "directoryCount": {
                          "type": "integer",
                          "description": "Number of directories in the subtree."
                        },
                        "childCount": {
                          "type": "integer",
                          "description": "Total direct children tracked in the rollup."
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ],
                          "description": "Freshness indicator for the rollup snapshot."
                        },
                        "lastCalculatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the most recent rollup calculation.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "download": {
                      "type": "object",
                      "required": [
                        "mode",
                        "streamUrl",
                        "presignUrl",
                        "supportsRange",
                        "sizeBytes",
                        "checksum",
                        "contentHash",
                        "filename"
                      ],
                      "properties": {
                        "mode": {
                          "type": "string",
                          "enum": [
                            "stream",
                            "presign"
                          ],
                          "description": "Preferred download strategy for the file."
                        },
                        "streamUrl": {
                          "type": "string",
                          "description": "URL to stream the file through the filestore service."
                        },
                        "presignUrl": {
                          "type": "string",
                          "description": "Link to request a presigned download if supported.",
                          "nullable": true
                        },
                        "supportsRange": {
                          "type": "boolean",
                          "description": "Indicates whether byte-range requests are supported."
                        },
                        "sizeBytes": {
                          "type": "integer",
                          "description": "Known size of the file when available.",
                          "nullable": true
                        },
                        "checksum": {
                          "type": "string",
                          "description": "Checksum recorded for the file content.",
                          "nullable": true
                        },
                        "contentHash": {
                          "type": "string",
                          "description": "Content hash recorded for the file content.",
                          "nullable": true
                        },
                        "filename": {
                          "type": "string",
                          "description": "Suggested filename for downloads.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": "integer",
                    "description": "Next offset to request, if more data is available.",
                    "nullable": true
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "backendMountId",
                  "path",
                  "depth",
                  "states",
                  "kinds",
                  "search",
                  "driftOnly",
                  "advanced"
                ],
                "properties": {
                  "backendMountId": {
                    "type": "integer",
                    "description": "Backend filter applied to the query."
                  },
                  "path": {
                    "type": "string",
                    "description": "Optional path prefix filter.",
                    "nullable": true
                  },
                  "depth": {
                    "type": "integer",
                    "description": "Maximum depth relative to the provided path.",
                    "nullable": true
                  },
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ]
                    }
                  },
                  "kinds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    }
                  },
                  "search": {
                    "type": "string",
                    "description": "Term supplied via search or advanced filters.",
                    "nullable": true
                  },
                  "driftOnly": {
                    "type": "boolean",
                    "description": "Whether only nodes with detected drift were requested."
                  },
                  "advanced": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "Full-text search term applied to node names and metadata."
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Metadata key to match."
                            },
                            "value": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        },
                        "description": "Match nodes whose metadata entries equal the supplied values."
                      },
                      "size": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "min": {
                            "type": "integer",
                            "description": "Lower bound, inclusive."
                          },
                          "max": {
                            "type": "integer",
                            "description": "Upper bound, inclusive."
                          }
                        },
                        "description": "Range constraint applied to numeric values."
                      },
                      "lastSeenAt": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "after": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Lower inclusive bound."
                          },
                          "before": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Upper inclusive bound."
                          }
                        },
                        "description": "Range constraint applied to ISO-8601 timestamps."
                      },
                      "rollup": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "states": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "up_to_date",
                                "pending",
                                "stale",
                                "invalid"
                              ]
                            }
                          },
                          "minChildCount": {
                            "type": "integer"
                          },
                          "maxChildCount": {
                            "type": "integer"
                          },
                          "minFileCount": {
                            "type": "integer"
                          },
                          "maxFileCount": {
                            "type": "integer"
                          },
                          "minDirectoryCount": {
                            "type": "integer"
                          },
                          "maxDirectoryCount": {
                            "type": "integer"
                          },
                          "minSizeBytes": {
                            "type": "integer"
                          },
                          "maxSizeBytes": {
                            "type": "integer"
                          },
                          "lastCalculatedAfter": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastCalculatedBefore": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "description": "Advanced rollup constraints applied when filtering nodes."
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "NodeChildren": {
        "type": "object",
        "required": [
          "parent",
          "children",
          "pagination",
          "filters"
        ],
        "properties": {
          "parent": {
            "type": "object",
            "required": [
              "id",
              "backendMountId",
              "parentId",
              "path",
              "name",
              "depth",
              "kind",
              "sizeBytes",
              "checksum",
              "contentHash",
              "metadata",
              "state",
              "version",
              "isSymlink",
              "lastSeenAt",
              "lastModifiedAt",
              "consistencyState",
              "consistencyCheckedAt",
              "lastReconciledAt",
              "lastDriftDetectedAt",
              "createdAt",
              "updatedAt",
              "deletedAt",
              "rollup",
              "download"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the node."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Identifier of the backend mount containing the node."
              },
              "parentId": {
                "type": "integer",
                "description": "Identifier of the parent directory, if any.",
                "nullable": true
              },
              "path": {
                "type": "string",
                "description": "Normalized absolute path for the node."
              },
              "name": {
                "type": "string",
                "description": "Basename of the node."
              },
              "depth": {
                "type": "integer",
                "description": "Directory depth starting from the backend root."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ]
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Logical size recorded for the node, in bytes."
              },
              "checksum": {
                "type": "string",
                "description": "Checksum recorded for the node content.",
                "nullable": true
              },
              "contentHash": {
                "type": "string",
                "description": "Content hash recorded for the node content.",
                "nullable": true
              },
              "metadata": {
                "type": "object",
                "description": "Arbitrary metadata captured for the node.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing",
                  "deleted"
                ],
                "description": "Lifecycle state tracked for the node."
              },
              "version": {
                "type": "integer",
                "description": "Monotonic version counter for optimistic concurrency."
              },
              "isSymlink": {
                "type": "boolean",
                "description": "Indicates if the node represents a symbolic link."
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was last observed in the backend."
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Last modification timestamp reported by the backend.",
                "nullable": true
              },
              "consistencyState": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing"
                ],
                "description": "Consistency status derived from reconciliation."
              },
              "consistencyCheckedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent consistency check."
              },
              "lastReconciledAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent reconciliation success.",
                "nullable": true
              },
              "lastDriftDetectedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when drift was last detected.",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was last updated."
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was marked deleted.",
                "nullable": true
              },
              "rollup": {
                "type": "object",
                "required": [
                  "nodeId",
                  "sizeBytes",
                  "fileCount",
                  "directoryCount",
                  "childCount",
                  "state",
                  "lastCalculatedAt"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer",
                    "description": "Identifier of the node associated with this rollup."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Total bytes attributed to the subtree."
                  },
                  "fileCount": {
                    "type": "integer",
                    "description": "Number of files in the subtree."
                  },
                  "directoryCount": {
                    "type": "integer",
                    "description": "Number of directories in the subtree."
                  },
                  "childCount": {
                    "type": "integer",
                    "description": "Total direct children tracked in the rollup."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "up_to_date",
                      "pending",
                      "stale",
                      "invalid"
                    ],
                    "description": "Freshness indicator for the rollup snapshot."
                  },
                  "lastCalculatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent rollup calculation.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "download": {
                "type": "object",
                "required": [
                  "mode",
                  "streamUrl",
                  "presignUrl",
                  "supportsRange",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "filename"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "stream",
                      "presign"
                    ],
                    "description": "Preferred download strategy for the file."
                  },
                  "streamUrl": {
                    "type": "string",
                    "description": "URL to stream the file through the filestore service."
                  },
                  "presignUrl": {
                    "type": "string",
                    "description": "Link to request a presigned download if supported.",
                    "nullable": true
                  },
                  "supportsRange": {
                    "type": "boolean",
                    "description": "Indicates whether byte-range requests are supported."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Known size of the file when available.",
                    "nullable": true
                  },
                  "checksum": {
                    "type": "string",
                    "description": "Checksum recorded for the file content.",
                    "nullable": true
                  },
                  "contentHash": {
                    "type": "string",
                    "description": "Content hash recorded for the file content.",
                    "nullable": true
                  },
                  "filename": {
                    "type": "string",
                    "description": "Suggested filename for downloads.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            }
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "backendMountId",
                "parentId",
                "path",
                "name",
                "depth",
                "kind",
                "sizeBytes",
                "checksum",
                "contentHash",
                "metadata",
                "state",
                "version",
                "isSymlink",
                "lastSeenAt",
                "lastModifiedAt",
                "consistencyState",
                "consistencyCheckedAt",
                "lastReconciledAt",
                "lastDriftDetectedAt",
                "createdAt",
                "updatedAt",
                "deletedAt",
                "rollup",
                "download"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the node."
                },
                "backendMountId": {
                  "type": "integer",
                  "description": "Identifier of the backend mount containing the node."
                },
                "parentId": {
                  "type": "integer",
                  "description": "Identifier of the parent directory, if any.",
                  "nullable": true
                },
                "path": {
                  "type": "string",
                  "description": "Normalized absolute path for the node."
                },
                "name": {
                  "type": "string",
                  "description": "Basename of the node."
                },
                "depth": {
                  "type": "integer",
                  "description": "Directory depth starting from the backend root."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                },
                "sizeBytes": {
                  "type": "integer",
                  "description": "Logical size recorded for the node, in bytes."
                },
                "checksum": {
                  "type": "string",
                  "description": "Checksum recorded for the node content.",
                  "nullable": true
                },
                "contentHash": {
                  "type": "string",
                  "description": "Content hash recorded for the node content.",
                  "nullable": true
                },
                "metadata": {
                  "type": "object",
                  "description": "Arbitrary metadata captured for the node.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ],
                  "description": "Lifecycle state tracked for the node."
                },
                "version": {
                  "type": "integer",
                  "description": "Monotonic version counter for optimistic concurrency."
                },
                "isSymlink": {
                  "type": "boolean",
                  "description": "Indicates if the node represents a symbolic link."
                },
                "lastSeenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node was last observed in the backend."
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Last modification timestamp reported by the backend.",
                  "nullable": true
                },
                "consistencyState": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing"
                  ],
                  "description": "Consistency status derived from reconciliation."
                },
                "consistencyCheckedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent consistency check."
                },
                "lastReconciledAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent reconciliation success.",
                  "nullable": true
                },
                "lastDriftDetectedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when drift was last detected.",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was last updated."
                },
                "deletedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node was marked deleted.",
                  "nullable": true
                },
                "rollup": {
                  "type": "object",
                  "required": [
                    "nodeId",
                    "sizeBytes",
                    "fileCount",
                    "directoryCount",
                    "childCount",
                    "state",
                    "lastCalculatedAt"
                  ],
                  "properties": {
                    "nodeId": {
                      "type": "integer",
                      "description": "Identifier of the node associated with this rollup."
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Total bytes attributed to the subtree."
                    },
                    "fileCount": {
                      "type": "integer",
                      "description": "Number of files in the subtree."
                    },
                    "directoryCount": {
                      "type": "integer",
                      "description": "Number of directories in the subtree."
                    },
                    "childCount": {
                      "type": "integer",
                      "description": "Total direct children tracked in the rollup."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "up_to_date",
                        "pending",
                        "stale",
                        "invalid"
                      ],
                      "description": "Freshness indicator for the rollup snapshot."
                    },
                    "lastCalculatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent rollup calculation.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                },
                "download": {
                  "type": "object",
                  "required": [
                    "mode",
                    "streamUrl",
                    "presignUrl",
                    "supportsRange",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "filename"
                  ],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "enum": [
                        "stream",
                        "presign"
                      ],
                      "description": "Preferred download strategy for the file."
                    },
                    "streamUrl": {
                      "type": "string",
                      "description": "URL to stream the file through the filestore service."
                    },
                    "presignUrl": {
                      "type": "string",
                      "description": "Link to request a presigned download if supported.",
                      "nullable": true
                    },
                    "supportsRange": {
                      "type": "boolean",
                      "description": "Indicates whether byte-range requests are supported."
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Known size of the file when available.",
                      "nullable": true
                    },
                    "checksum": {
                      "type": "string",
                      "description": "Checksum recorded for the file content.",
                      "nullable": true
                    },
                    "contentHash": {
                      "type": "string",
                      "description": "Content hash recorded for the file content.",
                      "nullable": true
                    },
                    "filename": {
                      "type": "string",
                      "description": "Suggested filename for downloads.",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": "integer",
                "description": "Next offset to request, if more data is available.",
                "nullable": true
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "states",
              "kinds",
              "search",
              "driftOnly",
              "advanced"
            ],
            "properties": {
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ]
                }
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                }
              },
              "search": {
                "type": "string",
                "nullable": true
              },
              "driftOnly": {
                "type": "boolean"
              },
              "advanced": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Full-text search term applied to node names and metadata."
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Metadata key to match."
                        },
                        "value": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    },
                    "description": "Match nodes whose metadata entries equal the supplied values."
                  },
                  "size": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "min": {
                        "type": "integer",
                        "description": "Lower bound, inclusive."
                      },
                      "max": {
                        "type": "integer",
                        "description": "Upper bound, inclusive."
                      }
                    },
                    "description": "Range constraint applied to numeric values."
                  },
                  "lastSeenAt": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "after": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Lower inclusive bound."
                      },
                      "before": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Upper inclusive bound."
                      }
                    },
                    "description": "Range constraint applied to ISO-8601 timestamps."
                  },
                  "rollup": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "states": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ]
                        }
                      },
                      "minChildCount": {
                        "type": "integer"
                      },
                      "maxChildCount": {
                        "type": "integer"
                      },
                      "minFileCount": {
                        "type": "integer"
                      },
                      "maxFileCount": {
                        "type": "integer"
                      },
                      "minDirectoryCount": {
                        "type": "integer"
                      },
                      "maxDirectoryCount": {
                        "type": "integer"
                      },
                      "minSizeBytes": {
                        "type": "integer"
                      },
                      "maxSizeBytes": {
                        "type": "integer"
                      },
                      "lastCalculatedAfter": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastCalculatedBefore": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "description": "Advanced rollup constraints applied when filtering nodes."
                  }
                },
                "nullable": true
              }
            }
          }
        }
      },
      "NodeChildrenEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "parent",
              "children",
              "pagination",
              "filters"
            ],
            "properties": {
              "parent": {
                "type": "object",
                "required": [
                  "id",
                  "backendMountId",
                  "parentId",
                  "path",
                  "name",
                  "depth",
                  "kind",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "metadata",
                  "state",
                  "version",
                  "isSymlink",
                  "lastSeenAt",
                  "lastModifiedAt",
                  "consistencyState",
                  "consistencyCheckedAt",
                  "lastReconciledAt",
                  "lastDriftDetectedAt",
                  "createdAt",
                  "updatedAt",
                  "deletedAt",
                  "rollup",
                  "download"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the node."
                  },
                  "backendMountId": {
                    "type": "integer",
                    "description": "Identifier of the backend mount containing the node."
                  },
                  "parentId": {
                    "type": "integer",
                    "description": "Identifier of the parent directory, if any.",
                    "nullable": true
                  },
                  "path": {
                    "type": "string",
                    "description": "Normalized absolute path for the node."
                  },
                  "name": {
                    "type": "string",
                    "description": "Basename of the node."
                  },
                  "depth": {
                    "type": "integer",
                    "description": "Directory depth starting from the backend root."
                  },
                  "kind": {
                    "type": "string",
                    "enum": [
                      "file",
                      "directory"
                    ]
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Logical size recorded for the node, in bytes."
                  },
                  "checksum": {
                    "type": "string",
                    "description": "Checksum recorded for the node content.",
                    "nullable": true
                  },
                  "contentHash": {
                    "type": "string",
                    "description": "Content hash recorded for the node content.",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Arbitrary metadata captured for the node.",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing",
                      "deleted"
                    ],
                    "description": "Lifecycle state tracked for the node."
                  },
                  "version": {
                    "type": "integer",
                    "description": "Monotonic version counter for optimistic concurrency."
                  },
                  "isSymlink": {
                    "type": "boolean",
                    "description": "Indicates if the node represents a symbolic link."
                  },
                  "lastSeenAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node was last observed in the backend."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp reported by the backend.",
                    "nullable": true
                  },
                  "consistencyState": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing"
                    ],
                    "description": "Consistency status derived from reconciliation."
                  },
                  "consistencyCheckedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent consistency check."
                  },
                  "lastReconciledAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent reconciliation success.",
                    "nullable": true
                  },
                  "lastDriftDetectedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when drift was last detected.",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was last updated."
                  },
                  "deletedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node was marked deleted.",
                    "nullable": true
                  },
                  "rollup": {
                    "type": "object",
                    "required": [
                      "nodeId",
                      "sizeBytes",
                      "fileCount",
                      "directoryCount",
                      "childCount",
                      "state",
                      "lastCalculatedAt"
                    ],
                    "properties": {
                      "nodeId": {
                        "type": "integer",
                        "description": "Identifier of the node associated with this rollup."
                      },
                      "sizeBytes": {
                        "type": "integer",
                        "description": "Total bytes attributed to the subtree."
                      },
                      "fileCount": {
                        "type": "integer",
                        "description": "Number of files in the subtree."
                      },
                      "directoryCount": {
                        "type": "integer",
                        "description": "Number of directories in the subtree."
                      },
                      "childCount": {
                        "type": "integer",
                        "description": "Total direct children tracked in the rollup."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "up_to_date",
                          "pending",
                          "stale",
                          "invalid"
                        ],
                        "description": "Freshness indicator for the rollup snapshot."
                      },
                      "lastCalculatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the most recent rollup calculation.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "download": {
                    "type": "object",
                    "required": [
                      "mode",
                      "streamUrl",
                      "presignUrl",
                      "supportsRange",
                      "sizeBytes",
                      "checksum",
                      "contentHash",
                      "filename"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "enum": [
                          "stream",
                          "presign"
                        ],
                        "description": "Preferred download strategy for the file."
                      },
                      "streamUrl": {
                        "type": "string",
                        "description": "URL to stream the file through the filestore service."
                      },
                      "presignUrl": {
                        "type": "string",
                        "description": "Link to request a presigned download if supported.",
                        "nullable": true
                      },
                      "supportsRange": {
                        "type": "boolean",
                        "description": "Indicates whether byte-range requests are supported."
                      },
                      "sizeBytes": {
                        "type": "integer",
                        "description": "Known size of the file when available.",
                        "nullable": true
                      },
                      "checksum": {
                        "type": "string",
                        "description": "Checksum recorded for the file content.",
                        "nullable": true
                      },
                      "contentHash": {
                        "type": "string",
                        "description": "Content hash recorded for the file content.",
                        "nullable": true
                      },
                      "filename": {
                        "type": "string",
                        "description": "Suggested filename for downloads.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                }
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "backendMountId",
                    "parentId",
                    "path",
                    "name",
                    "depth",
                    "kind",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "metadata",
                    "state",
                    "version",
                    "isSymlink",
                    "lastSeenAt",
                    "lastModifiedAt",
                    "consistencyState",
                    "consistencyCheckedAt",
                    "lastReconciledAt",
                    "lastDriftDetectedAt",
                    "createdAt",
                    "updatedAt",
                    "deletedAt",
                    "rollup",
                    "download"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the node."
                    },
                    "backendMountId": {
                      "type": "integer",
                      "description": "Identifier of the backend mount containing the node."
                    },
                    "parentId": {
                      "type": "integer",
                      "description": "Identifier of the parent directory, if any.",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "description": "Normalized absolute path for the node."
                    },
                    "name": {
                      "type": "string",
                      "description": "Basename of the node."
                    },
                    "depth": {
                      "type": "integer",
                      "description": "Directory depth starting from the backend root."
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Logical size recorded for the node, in bytes."
                    },
                    "checksum": {
                      "type": "string",
                      "description": "Checksum recorded for the node content.",
                      "nullable": true
                    },
                    "contentHash": {
                      "type": "string",
                      "description": "Content hash recorded for the node content.",
                      "nullable": true
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Arbitrary metadata captured for the node.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ],
                      "description": "Lifecycle state tracked for the node."
                    },
                    "version": {
                      "type": "integer",
                      "description": "Monotonic version counter for optimistic concurrency."
                    },
                    "isSymlink": {
                      "type": "boolean",
                      "description": "Indicates if the node represents a symbolic link."
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node was last observed in the backend."
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last modification timestamp reported by the backend.",
                      "nullable": true
                    },
                    "consistencyState": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing"
                      ],
                      "description": "Consistency status derived from reconciliation."
                    },
                    "consistencyCheckedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent consistency check."
                    },
                    "lastReconciledAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent reconciliation success.",
                      "nullable": true
                    },
                    "lastDriftDetectedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when drift was last detected.",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was last updated."
                    },
                    "deletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node was marked deleted.",
                      "nullable": true
                    },
                    "rollup": {
                      "type": "object",
                      "required": [
                        "nodeId",
                        "sizeBytes",
                        "fileCount",
                        "directoryCount",
                        "childCount",
                        "state",
                        "lastCalculatedAt"
                      ],
                      "properties": {
                        "nodeId": {
                          "type": "integer",
                          "description": "Identifier of the node associated with this rollup."
                        },
                        "sizeBytes": {
                          "type": "integer",
                          "description": "Total bytes attributed to the subtree."
                        },
                        "fileCount": {
                          "type": "integer",
                          "description": "Number of files in the subtree."
                        },
                        "directoryCount": {
                          "type": "integer",
                          "description": "Number of directories in the subtree."
                        },
                        "childCount": {
                          "type": "integer",
                          "description": "Total direct children tracked in the rollup."
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ],
                          "description": "Freshness indicator for the rollup snapshot."
                        },
                        "lastCalculatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of the most recent rollup calculation.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "download": {
                      "type": "object",
                      "required": [
                        "mode",
                        "streamUrl",
                        "presignUrl",
                        "supportsRange",
                        "sizeBytes",
                        "checksum",
                        "contentHash",
                        "filename"
                      ],
                      "properties": {
                        "mode": {
                          "type": "string",
                          "enum": [
                            "stream",
                            "presign"
                          ],
                          "description": "Preferred download strategy for the file."
                        },
                        "streamUrl": {
                          "type": "string",
                          "description": "URL to stream the file through the filestore service."
                        },
                        "presignUrl": {
                          "type": "string",
                          "description": "Link to request a presigned download if supported.",
                          "nullable": true
                        },
                        "supportsRange": {
                          "type": "boolean",
                          "description": "Indicates whether byte-range requests are supported."
                        },
                        "sizeBytes": {
                          "type": "integer",
                          "description": "Known size of the file when available.",
                          "nullable": true
                        },
                        "checksum": {
                          "type": "string",
                          "description": "Checksum recorded for the file content.",
                          "nullable": true
                        },
                        "contentHash": {
                          "type": "string",
                          "description": "Content hash recorded for the file content.",
                          "nullable": true
                        },
                        "filename": {
                          "type": "string",
                          "description": "Suggested filename for downloads.",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": "integer",
                    "description": "Next offset to request, if more data is available.",
                    "nullable": true
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "states",
                  "kinds",
                  "search",
                  "driftOnly",
                  "advanced"
                ],
                "properties": {
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ]
                    }
                  },
                  "kinds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    }
                  },
                  "search": {
                    "type": "string",
                    "nullable": true
                  },
                  "driftOnly": {
                    "type": "boolean"
                  },
                  "advanced": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "Full-text search term applied to node names and metadata."
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Metadata key to match."
                            },
                            "value": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        },
                        "description": "Match nodes whose metadata entries equal the supplied values."
                      },
                      "size": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "min": {
                            "type": "integer",
                            "description": "Lower bound, inclusive."
                          },
                          "max": {
                            "type": "integer",
                            "description": "Upper bound, inclusive."
                          }
                        },
                        "description": "Range constraint applied to numeric values."
                      },
                      "lastSeenAt": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "after": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Lower inclusive bound."
                          },
                          "before": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Upper inclusive bound."
                          }
                        },
                        "description": "Range constraint applied to ISO-8601 timestamps."
                      },
                      "rollup": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "states": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "up_to_date",
                                "pending",
                                "stale",
                                "invalid"
                              ]
                            }
                          },
                          "minChildCount": {
                            "type": "integer"
                          },
                          "maxChildCount": {
                            "type": "integer"
                          },
                          "minFileCount": {
                            "type": "integer"
                          },
                          "maxFileCount": {
                            "type": "integer"
                          },
                          "minDirectoryCount": {
                            "type": "integer"
                          },
                          "maxDirectoryCount": {
                            "type": "integer"
                          },
                          "minSizeBytes": {
                            "type": "integer"
                          },
                          "maxSizeBytes": {
                            "type": "integer"
                          },
                          "lastCalculatedAfter": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastCalculatedBefore": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "description": "Advanced rollup constraints applied when filtering nodes."
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "NodeEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "backendMountId",
              "parentId",
              "path",
              "name",
              "depth",
              "kind",
              "sizeBytes",
              "checksum",
              "contentHash",
              "metadata",
              "state",
              "version",
              "isSymlink",
              "lastSeenAt",
              "lastModifiedAt",
              "consistencyState",
              "consistencyCheckedAt",
              "lastReconciledAt",
              "lastDriftDetectedAt",
              "createdAt",
              "updatedAt",
              "deletedAt",
              "rollup",
              "download"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the node."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Identifier of the backend mount containing the node."
              },
              "parentId": {
                "type": "integer",
                "description": "Identifier of the parent directory, if any.",
                "nullable": true
              },
              "path": {
                "type": "string",
                "description": "Normalized absolute path for the node."
              },
              "name": {
                "type": "string",
                "description": "Basename of the node."
              },
              "depth": {
                "type": "integer",
                "description": "Directory depth starting from the backend root."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ]
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Logical size recorded for the node, in bytes."
              },
              "checksum": {
                "type": "string",
                "description": "Checksum recorded for the node content.",
                "nullable": true
              },
              "contentHash": {
                "type": "string",
                "description": "Content hash recorded for the node content.",
                "nullable": true
              },
              "metadata": {
                "type": "object",
                "description": "Arbitrary metadata captured for the node.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing",
                  "deleted"
                ],
                "description": "Lifecycle state tracked for the node."
              },
              "version": {
                "type": "integer",
                "description": "Monotonic version counter for optimistic concurrency."
              },
              "isSymlink": {
                "type": "boolean",
                "description": "Indicates if the node represents a symbolic link."
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was last observed in the backend."
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Last modification timestamp reported by the backend.",
                "nullable": true
              },
              "consistencyState": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing"
                ],
                "description": "Consistency status derived from reconciliation."
              },
              "consistencyCheckedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent consistency check."
              },
              "lastReconciledAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent reconciliation success.",
                "nullable": true
              },
              "lastDriftDetectedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when drift was last detected.",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was last updated."
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was marked deleted.",
                "nullable": true
              },
              "rollup": {
                "type": "object",
                "required": [
                  "nodeId",
                  "sizeBytes",
                  "fileCount",
                  "directoryCount",
                  "childCount",
                  "state",
                  "lastCalculatedAt"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer",
                    "description": "Identifier of the node associated with this rollup."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Total bytes attributed to the subtree."
                  },
                  "fileCount": {
                    "type": "integer",
                    "description": "Number of files in the subtree."
                  },
                  "directoryCount": {
                    "type": "integer",
                    "description": "Number of directories in the subtree."
                  },
                  "childCount": {
                    "type": "integer",
                    "description": "Total direct children tracked in the rollup."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "up_to_date",
                      "pending",
                      "stale",
                      "invalid"
                    ],
                    "description": "Freshness indicator for the rollup snapshot."
                  },
                  "lastCalculatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent rollup calculation.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "download": {
                "type": "object",
                "required": [
                  "mode",
                  "streamUrl",
                  "presignUrl",
                  "supportsRange",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "filename"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "stream",
                      "presign"
                    ],
                    "description": "Preferred download strategy for the file."
                  },
                  "streamUrl": {
                    "type": "string",
                    "description": "URL to stream the file through the filestore service."
                  },
                  "presignUrl": {
                    "type": "string",
                    "description": "Link to request a presigned download if supported.",
                    "nullable": true
                  },
                  "supportsRange": {
                    "type": "boolean",
                    "description": "Indicates whether byte-range requests are supported."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Known size of the file when available.",
                    "nullable": true
                  },
                  "checksum": {
                    "type": "string",
                    "description": "Checksum recorded for the file content.",
                    "nullable": true
                  },
                  "contentHash": {
                    "type": "string",
                    "description": "Content hash recorded for the file content.",
                    "nullable": true
                  },
                  "filename": {
                    "type": "string",
                    "description": "Suggested filename for downloads.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            }
          }
        }
      },
      "CommandOutcome": {
        "type": "object",
        "required": [
          "idempotent",
          "journalEntryId",
          "node",
          "result"
        ],
        "properties": {
          "idempotent": {
            "type": "boolean",
            "description": "Indicates whether an idempotency key short-circuited the command."
          },
          "journalEntryId": {
            "type": "integer",
            "description": "Identifier of the journal entry generated for this command."
          },
          "node": {
            "type": "object",
            "required": [
              "id",
              "backendMountId",
              "parentId",
              "path",
              "name",
              "depth",
              "kind",
              "sizeBytes",
              "checksum",
              "contentHash",
              "metadata",
              "state",
              "version",
              "isSymlink",
              "lastSeenAt",
              "lastModifiedAt",
              "consistencyState",
              "consistencyCheckedAt",
              "lastReconciledAt",
              "lastDriftDetectedAt",
              "createdAt",
              "updatedAt",
              "deletedAt",
              "rollup",
              "download"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the node."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Identifier of the backend mount containing the node."
              },
              "parentId": {
                "type": "integer",
                "description": "Identifier of the parent directory, if any.",
                "nullable": true
              },
              "path": {
                "type": "string",
                "description": "Normalized absolute path for the node."
              },
              "name": {
                "type": "string",
                "description": "Basename of the node."
              },
              "depth": {
                "type": "integer",
                "description": "Directory depth starting from the backend root."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ]
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Logical size recorded for the node, in bytes."
              },
              "checksum": {
                "type": "string",
                "description": "Checksum recorded for the node content.",
                "nullable": true
              },
              "contentHash": {
                "type": "string",
                "description": "Content hash recorded for the node content.",
                "nullable": true
              },
              "metadata": {
                "type": "object",
                "description": "Arbitrary metadata captured for the node.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing",
                  "deleted"
                ],
                "description": "Lifecycle state tracked for the node."
              },
              "version": {
                "type": "integer",
                "description": "Monotonic version counter for optimistic concurrency."
              },
              "isSymlink": {
                "type": "boolean",
                "description": "Indicates if the node represents a symbolic link."
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was last observed in the backend."
              },
              "lastModifiedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Last modification timestamp reported by the backend.",
                "nullable": true
              },
              "consistencyState": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing"
                ],
                "description": "Consistency status derived from reconciliation."
              },
              "consistencyCheckedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent consistency check."
              },
              "lastReconciledAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent reconciliation success.",
                "nullable": true
              },
              "lastDriftDetectedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when drift was last detected.",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was last updated."
              },
              "deletedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was marked deleted.",
                "nullable": true
              },
              "rollup": {
                "type": "object",
                "required": [
                  "nodeId",
                  "sizeBytes",
                  "fileCount",
                  "directoryCount",
                  "childCount",
                  "state",
                  "lastCalculatedAt"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer",
                    "description": "Identifier of the node associated with this rollup."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Total bytes attributed to the subtree."
                  },
                  "fileCount": {
                    "type": "integer",
                    "description": "Number of files in the subtree."
                  },
                  "directoryCount": {
                    "type": "integer",
                    "description": "Number of directories in the subtree."
                  },
                  "childCount": {
                    "type": "integer",
                    "description": "Total direct children tracked in the rollup."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "up_to_date",
                      "pending",
                      "stale",
                      "invalid"
                    ],
                    "description": "Freshness indicator for the rollup snapshot."
                  },
                  "lastCalculatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent rollup calculation.",
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "download": {
                "type": "object",
                "required": [
                  "mode",
                  "streamUrl",
                  "presignUrl",
                  "supportsRange",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "filename"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "stream",
                      "presign"
                    ],
                    "description": "Preferred download strategy for the file."
                  },
                  "streamUrl": {
                    "type": "string",
                    "description": "URL to stream the file through the filestore service."
                  },
                  "presignUrl": {
                    "type": "string",
                    "description": "Link to request a presigned download if supported.",
                    "nullable": true
                  },
                  "supportsRange": {
                    "type": "boolean",
                    "description": "Indicates whether byte-range requests are supported."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Known size of the file when available.",
                    "nullable": true
                  },
                  "checksum": {
                    "type": "string",
                    "description": "Checksum recorded for the file content.",
                    "nullable": true
                  },
                  "contentHash": {
                    "type": "string",
                    "description": "Content hash recorded for the file content.",
                    "nullable": true
                  },
                  "filename": {
                    "type": "string",
                    "description": "Suggested filename for downloads.",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            },
            "nullable": true
          },
          "result": {
            "type": "object",
            "description": "Command-specific payload describing the work performed.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          }
        }
      },
      "CommandOutcomeEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "idempotent",
              "journalEntryId",
              "node",
              "result"
            ],
            "properties": {
              "idempotent": {
                "type": "boolean",
                "description": "Indicates whether an idempotency key short-circuited the command."
              },
              "journalEntryId": {
                "type": "integer",
                "description": "Identifier of the journal entry generated for this command."
              },
              "node": {
                "type": "object",
                "required": [
                  "id",
                  "backendMountId",
                  "parentId",
                  "path",
                  "name",
                  "depth",
                  "kind",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "metadata",
                  "state",
                  "version",
                  "isSymlink",
                  "lastSeenAt",
                  "lastModifiedAt",
                  "consistencyState",
                  "consistencyCheckedAt",
                  "lastReconciledAt",
                  "lastDriftDetectedAt",
                  "createdAt",
                  "updatedAt",
                  "deletedAt",
                  "rollup",
                  "download"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the node."
                  },
                  "backendMountId": {
                    "type": "integer",
                    "description": "Identifier of the backend mount containing the node."
                  },
                  "parentId": {
                    "type": "integer",
                    "description": "Identifier of the parent directory, if any.",
                    "nullable": true
                  },
                  "path": {
                    "type": "string",
                    "description": "Normalized absolute path for the node."
                  },
                  "name": {
                    "type": "string",
                    "description": "Basename of the node."
                  },
                  "depth": {
                    "type": "integer",
                    "description": "Directory depth starting from the backend root."
                  },
                  "kind": {
                    "type": "string",
                    "enum": [
                      "file",
                      "directory"
                    ]
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Logical size recorded for the node, in bytes."
                  },
                  "checksum": {
                    "type": "string",
                    "description": "Checksum recorded for the node content.",
                    "nullable": true
                  },
                  "contentHash": {
                    "type": "string",
                    "description": "Content hash recorded for the node content.",
                    "nullable": true
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Arbitrary metadata captured for the node.",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing",
                      "deleted"
                    ],
                    "description": "Lifecycle state tracked for the node."
                  },
                  "version": {
                    "type": "integer",
                    "description": "Monotonic version counter for optimistic concurrency."
                  },
                  "isSymlink": {
                    "type": "boolean",
                    "description": "Indicates if the node represents a symbolic link."
                  },
                  "lastSeenAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node was last observed in the backend."
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modification timestamp reported by the backend.",
                    "nullable": true
                  },
                  "consistencyState": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing"
                    ],
                    "description": "Consistency status derived from reconciliation."
                  },
                  "consistencyCheckedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent consistency check."
                  },
                  "lastReconciledAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent reconciliation success.",
                    "nullable": true
                  },
                  "lastDriftDetectedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when drift was last detected.",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was last updated."
                  },
                  "deletedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node was marked deleted.",
                    "nullable": true
                  },
                  "rollup": {
                    "type": "object",
                    "required": [
                      "nodeId",
                      "sizeBytes",
                      "fileCount",
                      "directoryCount",
                      "childCount",
                      "state",
                      "lastCalculatedAt"
                    ],
                    "properties": {
                      "nodeId": {
                        "type": "integer",
                        "description": "Identifier of the node associated with this rollup."
                      },
                      "sizeBytes": {
                        "type": "integer",
                        "description": "Total bytes attributed to the subtree."
                      },
                      "fileCount": {
                        "type": "integer",
                        "description": "Number of files in the subtree."
                      },
                      "directoryCount": {
                        "type": "integer",
                        "description": "Number of directories in the subtree."
                      },
                      "childCount": {
                        "type": "integer",
                        "description": "Total direct children tracked in the rollup."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "up_to_date",
                          "pending",
                          "stale",
                          "invalid"
                        ],
                        "description": "Freshness indicator for the rollup snapshot."
                      },
                      "lastCalculatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of the most recent rollup calculation.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "download": {
                    "type": "object",
                    "required": [
                      "mode",
                      "streamUrl",
                      "presignUrl",
                      "supportsRange",
                      "sizeBytes",
                      "checksum",
                      "contentHash",
                      "filename"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "enum": [
                          "stream",
                          "presign"
                        ],
                        "description": "Preferred download strategy for the file."
                      },
                      "streamUrl": {
                        "type": "string",
                        "description": "URL to stream the file through the filestore service."
                      },
                      "presignUrl": {
                        "type": "string",
                        "description": "Link to request a presigned download if supported.",
                        "nullable": true
                      },
                      "supportsRange": {
                        "type": "boolean",
                        "description": "Indicates whether byte-range requests are supported."
                      },
                      "sizeBytes": {
                        "type": "integer",
                        "description": "Known size of the file when available.",
                        "nullable": true
                      },
                      "checksum": {
                        "type": "string",
                        "description": "Checksum recorded for the file content.",
                        "nullable": true
                      },
                      "contentHash": {
                        "type": "string",
                        "description": "Content hash recorded for the file content.",
                        "nullable": true
                      },
                      "filename": {
                        "type": "string",
                        "description": "Suggested filename for downloads.",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  }
                },
                "nullable": true
              },
              "result": {
                "type": "object",
                "description": "Command-specific payload describing the work performed.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            }
          }
        }
      },
      "CreateDirectoryRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount receiving the directory."
          },
          "path": {
            "type": "string",
            "description": "Directory path to create."
          },
          "metadata": {
            "type": "object",
            "description": "Optional metadata assigned to the directory.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key to reuse previous results."
          }
        }
      },
      "DeleteNodeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the node."
          },
          "path": {
            "type": "string",
            "description": "Path of the node to delete."
          },
          "recursive": {
            "type": "boolean",
            "description": "When true, delete directories and their contents."
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        }
      },
      "MoveNodeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path",
          "targetPath"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the source node."
          },
          "path": {
            "type": "string",
            "description": "Source node path."
          },
          "targetPath": {
            "type": "string",
            "description": "Destination path for the node."
          },
          "targetBackendMountId": {
            "type": "integer",
            "description": "Alternate backend mount for cross-mount moves."
          },
          "overwrite": {
            "type": "boolean",
            "description": "When true, replace an existing node at the destination."
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        }
      },
      "CopyNodeRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path",
          "targetPath"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the source node."
          },
          "path": {
            "type": "string",
            "description": "Source node path."
          },
          "targetPath": {
            "type": "string",
            "description": "Destination path for the copy."
          },
          "targetBackendMountId": {
            "type": "integer",
            "description": "Alternate backend mount for cross-mount copies."
          },
          "overwrite": {
            "type": "boolean",
            "description": "When true, replace an existing node at the destination."
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        }
      },
      "UpdateMetadataRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the node."
          },
          "set": {
            "type": "object",
            "description": "Metadata entries to overwrite.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            },
            "nullable": true
          },
          "unset": {
            "type": "array",
            "description": "Metadata keys to remove from the node.",
            "items": {
              "type": "string"
            }
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        }
      },
      "ReconciliationRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the node to reconcile."
          },
          "path": {
            "type": "string",
            "description": "Path of the node to reconcile."
          },
          "nodeId": {
            "type": "integer",
            "description": "Identifier of the node to reconcile.",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "enum": [
              "drift",
              "audit",
              "manual"
            ],
            "description": "Reason the reconciliation was requested."
          },
          "detectChildren": {
            "type": "boolean",
            "description": "When true, enqueue reconciliation jobs for child nodes."
          },
          "requestedHash": {
            "type": "boolean",
            "description": "When true, force hash recomputation for the node."
          }
        }
      },
      "ReconciliationEnqueueResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "enqueued"
            ],
            "properties": {
              "enqueued": {
                "type": "boolean",
                "enum": [
                  true
                ],
                "description": "Indicates the reconciliation job was queued."
              }
            }
          }
        }
      },
      "ReconciliationJob": {
        "type": "object",
        "required": [
          "id",
          "jobKey",
          "backendMountId",
          "nodeId",
          "path",
          "reason",
          "status",
          "detectChildren",
          "requestedHash",
          "attempt",
          "result",
          "error",
          "enqueuedAt",
          "startedAt",
          "completedAt",
          "durationMs",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the reconciliation job."
          },
          "jobKey": {
            "type": "string",
            "description": "Deterministic key used for idempotent job scheduling."
          },
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount identifier associated with the job."
          },
          "nodeId": {
            "type": "integer",
            "description": "Identifier of the node under reconciliation.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Path of the node under reconciliation."
          },
          "reason": {
            "type": "string",
            "enum": [
              "drift",
              "audit",
              "manual"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "running",
              "succeeded",
              "failed",
              "skipped",
              "cancelled"
            ]
          },
          "detectChildren": {
            "type": "boolean",
            "description": "Whether child reconciliation jobs were requested."
          },
          "requestedHash": {
            "type": "boolean",
            "description": "Whether a hash recalculation was requested."
          },
          "attempt": {
            "type": "integer",
            "description": "Attempt counter for the job."
          },
          "result": {
            "type": "object",
            "description": "Map of string keys to arbitrary JSON values.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            },
            "nullable": true
          },
          "error": {
            "type": "object",
            "description": "Map of string keys to arbitrary JSON values.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            },
            "nullable": true
          },
          "enqueuedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the job was enqueued."
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the job started processing.",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the job finished processing.",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "description": "Duration in milliseconds, when available.",
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the job record was last updated."
          }
        }
      },
      "ReconciliationJobListFilters": {
        "type": "object",
        "required": [
          "backendMountId",
          "path",
          "status"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount filter applied to the query.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "Path filter applied to the job listing.",
            "nullable": true
          },
          "status": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "queued",
                "running",
                "succeeded",
                "failed",
                "skipped",
                "cancelled"
              ]
            }
          }
        }
      },
      "ReconciliationJobList": {
        "type": "object",
        "required": [
          "jobs",
          "pagination",
          "filters"
        ],
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "jobKey",
                "backendMountId",
                "nodeId",
                "path",
                "reason",
                "status",
                "detectChildren",
                "requestedHash",
                "attempt",
                "result",
                "error",
                "enqueuedAt",
                "startedAt",
                "completedAt",
                "durationMs",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifier of the reconciliation job."
                },
                "jobKey": {
                  "type": "string",
                  "description": "Deterministic key used for idempotent job scheduling."
                },
                "backendMountId": {
                  "type": "integer",
                  "description": "Backend mount identifier associated with the job."
                },
                "nodeId": {
                  "type": "integer",
                  "description": "Identifier of the node under reconciliation.",
                  "nullable": true
                },
                "path": {
                  "type": "string",
                  "description": "Path of the node under reconciliation."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "drift",
                    "audit",
                    "manual"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "running",
                    "succeeded",
                    "failed",
                    "skipped",
                    "cancelled"
                  ]
                },
                "detectChildren": {
                  "type": "boolean",
                  "description": "Whether child reconciliation jobs were requested."
                },
                "requestedHash": {
                  "type": "boolean",
                  "description": "Whether a hash recalculation was requested."
                },
                "attempt": {
                  "type": "integer",
                  "description": "Attempt counter for the job."
                },
                "result": {
                  "type": "object",
                  "description": "Map of string keys to arbitrary JSON values.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  },
                  "nullable": true
                },
                "error": {
                  "type": "object",
                  "description": "Map of string keys to arbitrary JSON values.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  },
                  "nullable": true
                },
                "enqueuedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the job was enqueued."
                },
                "startedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the job started processing.",
                  "nullable": true
                },
                "completedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the job finished processing.",
                  "nullable": true
                },
                "durationMs": {
                  "type": "integer",
                  "description": "Duration in milliseconds, when available.",
                  "nullable": true
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the job record was last updated."
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": "integer",
                "description": "Next offset to request, if more data is available.",
                "nullable": true
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "backendMountId",
              "path",
              "status"
            ],
            "properties": {
              "backendMountId": {
                "type": "integer",
                "description": "Backend mount filter applied to the query.",
                "nullable": true
              },
              "path": {
                "type": "string",
                "description": "Path filter applied to the job listing.",
                "nullable": true
              },
              "status": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "running",
                    "succeeded",
                    "failed",
                    "skipped",
                    "cancelled"
                  ]
                }
              }
            }
          }
        }
      },
      "ReconciliationJobListEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "jobs",
              "pagination",
              "filters"
            ],
            "properties": {
              "jobs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "jobKey",
                    "backendMountId",
                    "nodeId",
                    "path",
                    "reason",
                    "status",
                    "detectChildren",
                    "requestedHash",
                    "attempt",
                    "result",
                    "error",
                    "enqueuedAt",
                    "startedAt",
                    "completedAt",
                    "durationMs",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the reconciliation job."
                    },
                    "jobKey": {
                      "type": "string",
                      "description": "Deterministic key used for idempotent job scheduling."
                    },
                    "backendMountId": {
                      "type": "integer",
                      "description": "Backend mount identifier associated with the job."
                    },
                    "nodeId": {
                      "type": "integer",
                      "description": "Identifier of the node under reconciliation.",
                      "nullable": true
                    },
                    "path": {
                      "type": "string",
                      "description": "Path of the node under reconciliation."
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "drift",
                        "audit",
                        "manual"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "skipped",
                        "cancelled"
                      ]
                    },
                    "detectChildren": {
                      "type": "boolean",
                      "description": "Whether child reconciliation jobs were requested."
                    },
                    "requestedHash": {
                      "type": "boolean",
                      "description": "Whether a hash recalculation was requested."
                    },
                    "attempt": {
                      "type": "integer",
                      "description": "Attempt counter for the job."
                    },
                    "result": {
                      "type": "object",
                      "description": "Map of string keys to arbitrary JSON values.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "description": "Map of string keys to arbitrary JSON values.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      },
                      "nullable": true
                    },
                    "enqueuedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the job was enqueued."
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the job started processing.",
                      "nullable": true
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the job finished processing.",
                      "nullable": true
                    },
                    "durationMs": {
                      "type": "integer",
                      "description": "Duration in milliseconds, when available.",
                      "nullable": true
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the job record was last updated."
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": "integer",
                    "description": "Next offset to request, if more data is available.",
                    "nullable": true
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "backendMountId",
                  "path",
                  "status"
                ],
                "properties": {
                  "backendMountId": {
                    "type": "integer",
                    "description": "Backend mount filter applied to the query.",
                    "nullable": true
                  },
                  "path": {
                    "type": "string",
                    "description": "Path filter applied to the job listing.",
                    "nullable": true
                  },
                  "status": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "skipped",
                        "cancelled"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ReconciliationJobEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "jobKey",
              "backendMountId",
              "nodeId",
              "path",
              "reason",
              "status",
              "detectChildren",
              "requestedHash",
              "attempt",
              "result",
              "error",
              "enqueuedAt",
              "startedAt",
              "completedAt",
              "durationMs",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Identifier of the reconciliation job."
              },
              "jobKey": {
                "type": "string",
                "description": "Deterministic key used for idempotent job scheduling."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Backend mount identifier associated with the job."
              },
              "nodeId": {
                "type": "integer",
                "description": "Identifier of the node under reconciliation.",
                "nullable": true
              },
              "path": {
                "type": "string",
                "description": "Path of the node under reconciliation."
              },
              "reason": {
                "type": "string",
                "enum": [
                  "drift",
                  "audit",
                  "manual"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "queued",
                  "running",
                  "succeeded",
                  "failed",
                  "skipped",
                  "cancelled"
                ]
              },
              "detectChildren": {
                "type": "boolean",
                "description": "Whether child reconciliation jobs were requested."
              },
              "requestedHash": {
                "type": "boolean",
                "description": "Whether a hash recalculation was requested."
              },
              "attempt": {
                "type": "integer",
                "description": "Attempt counter for the job."
              },
              "result": {
                "type": "object",
                "description": "Map of string keys to arbitrary JSON values.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                },
                "nullable": true
              },
              "error": {
                "type": "object",
                "description": "Map of string keys to arbitrary JSON values.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                },
                "nullable": true
              },
              "enqueuedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the job was enqueued."
              },
              "startedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the job started processing.",
                "nullable": true
              },
              "completedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the job finished processing.",
                "nullable": true
              },
              "durationMs": {
                "type": "integer",
                "description": "Duration in milliseconds, when available.",
                "nullable": true
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the job record was last updated."
              }
            }
          }
        }
      },
      "PresignedDownloadEnvelope": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "url",
              "expiresAt",
              "headers",
              "method"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "Presigned URL to download the file directly from the backend."
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the presigned URL expires."
              },
              "headers": {
                "type": "object",
                "description": "HTTP headers that must be supplied when invoking the presigned URL.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "method": {
                "type": "string",
                "description": "HTTP method to use for the presigned request."
              }
            }
          }
        }
      },
      "def-0": {
        "anyOf": [
          {
            "description": "Arbitrary JSON value.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          {
            "type": "null"
          }
        ],
        "title": "https://filestore.apphub/schemas/JsonValue.json"
      },
      "def-1": {
        "type": "object",
        "description": "Map of string keys to arbitrary JSON values.",
        "additionalProperties": {
          "$ref": "#/components/schemas/def-0"
        },
        "title": "https://filestore.apphub/schemas/JsonRecord.json"
      },
      "def-2": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Stable machine-readable identifier for the error."
          },
          "message": {
            "type": "string",
            "description": "Human-readable explanation of the error."
          },
          "details": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://filestore.apphub/schemas/ErrorObject.json"
      },
      "def-3": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string",
                "description": "Stable machine-readable identifier for the error."
              },
              "message": {
                "type": "string",
                "description": "Human-readable explanation of the error."
              },
              "details": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ErrorResponse.json"
      },
      "def-4": {
        "type": "object",
        "required": [
          "mode",
          "ready",
          "lastError"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "inline",
              "redis"
            ],
            "description": "Operating mode for filestore event delivery."
          },
          "ready": {
            "type": "boolean",
            "description": "Indicates whether the event publisher is ready."
          },
          "lastError": {
            "type": [
              "string",
              "null"
            ],
            "description": "Most recent connection or publish error, when available."
          }
        },
        "title": "https://filestore.apphub/schemas/EventsHealth.json"
      },
      "def-5": {
        "type": "object",
        "required": [
          "status",
          "events"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok",
              "degraded"
            ],
            "description": "Summary health indicator for the filestore service."
          },
          "events": {
            "type": "object",
            "required": [
              "mode",
              "ready",
              "lastError"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "inline",
                  "redis"
                ],
                "description": "Operating mode for filestore event delivery."
              },
              "ready": {
                "type": "boolean",
                "description": "Indicates whether the event publisher is ready."
              },
              "lastError": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Most recent connection or publish error, when available."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/HealthResponse.json"
      },
      "def-6": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ],
            "description": "Indicates all critical dependencies are available."
          }
        },
        "title": "https://filestore.apphub/schemas/ReadyResponse.json"
      },
      "def-7": {
        "type": "object",
        "required": [
          "status",
          "reason",
          "events"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "unavailable"
            ],
            "description": "Signals that at least one dependency is unavailable."
          },
          "reason": {
            "type": "string",
            "description": "Details about the failing dependency."
          },
          "events": {
            "type": "object",
            "required": [
              "mode",
              "ready",
              "lastError"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "inline",
                  "redis"
                ],
                "description": "Operating mode for filestore event delivery."
              },
              "ready": {
                "type": "boolean",
                "description": "Indicates whether the event publisher is ready."
              },
              "lastError": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Most recent connection or publish error, when available."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ReadyUnavailableResponse.json"
      },
      "def-8": {
        "type": "object",
        "required": [
          "id",
          "mountKey",
          "backendKind",
          "accessMode",
          "state",
          "labels",
          "rootPath",
          "bucket",
          "prefix",
          "createdAt",
          "updatedAt",
          "config",
          "displayName",
          "description",
          "contact",
          "stateReason",
          "lastHealthCheckAt",
          "lastHealthStatus"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the backend mount."
          },
          "mountKey": {
            "type": "string",
            "description": "Stable slug identifying the backend."
          },
          "displayName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Human friendly backend name."
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional description of the backend."
          },
          "contact": {
            "type": [
              "string",
              "null"
            ],
            "description": "Point of contact for the backend."
          },
          "labels": {
            "type": "array",
            "description": "Arbitrary labels associated with the backend.",
            "items": {
              "type": "string"
            }
          },
          "backendKind": {
            "type": "string",
            "enum": [
              "local",
              "s3"
            ],
            "description": "Implementation backing this mount."
          },
          "accessMode": {
            "type": "string",
            "enum": [
              "rw",
              "ro"
            ],
            "description": "Indicates whether files can be written or only read."
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "offline",
              "degraded",
              "error",
              "unknown"
            ],
            "description": "Current health state as reported by the mount."
          },
          "stateReason": {
            "type": [
              "string",
              "null"
            ],
            "description": "Additional context explaining the current state."
          },
          "rootPath": {
            "type": [
              "string",
              "null"
            ],
            "description": "Base path for local backends."
          },
          "bucket": {
            "type": [
              "string",
              "null"
            ],
            "description": "Bucket name for S3 backends."
          },
          "prefix": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional prefix used when addressing the backend."
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "description": "Backend specific configuration. Secrets are omitted.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "lastHealthCheckAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp of the most recent health check."
          },
          "lastHealthStatus": {
            "type": [
              "string",
              "null"
            ],
            "description": "Latest reported status message from the backend."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the backend was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the backend was last updated."
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMount.json"
      },
      "def-9": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "mountKey",
              "backendKind",
              "accessMode",
              "state",
              "labels",
              "rootPath",
              "bucket",
              "prefix",
              "createdAt",
              "updatedAt",
              "config",
              "displayName",
              "description",
              "contact",
              "stateReason",
              "lastHealthCheckAt",
              "lastHealthStatus"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the backend mount."
              },
              "mountKey": {
                "type": "string",
                "description": "Stable slug identifying the backend."
              },
              "displayName": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Human friendly backend name."
              },
              "description": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Optional description of the backend."
              },
              "contact": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Point of contact for the backend."
              },
              "labels": {
                "type": "array",
                "description": "Arbitrary labels associated with the backend.",
                "items": {
                  "type": "string"
                }
              },
              "backendKind": {
                "type": "string",
                "enum": [
                  "local",
                  "s3"
                ],
                "description": "Implementation backing this mount."
              },
              "accessMode": {
                "type": "string",
                "enum": [
                  "rw",
                  "ro"
                ],
                "description": "Indicates whether files can be written or only read."
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inactive",
                  "offline",
                  "degraded",
                  "error",
                  "unknown"
                ],
                "description": "Current health state as reported by the mount."
              },
              "stateReason": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Additional context explaining the current state."
              },
              "rootPath": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Base path for local backends."
              },
              "bucket": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Bucket name for S3 backends."
              },
              "prefix": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Optional prefix used when addressing the backend."
              },
              "config": {
                "type": [
                  "null",
                  "object"
                ],
                "description": "Backend specific configuration. Secrets are omitted.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "lastHealthCheckAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Timestamp of the most recent health check."
              },
              "lastHealthStatus": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Latest reported status message from the backend."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the backend was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the backend was last updated."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMountEnvelope.json"
      },
      "def-10": {
        "type": "object",
        "required": [
          "search",
          "kinds",
          "states",
          "accessModes"
        ],
        "properties": {
          "search": {
            "type": [
              "string",
              "null"
            ],
            "description": "Search term applied to mount names or descriptions."
          },
          "kinds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "local",
                "s3"
              ]
            }
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "offline",
                "degraded",
                "error",
                "unknown"
              ]
            }
          },
          "accessModes": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "rw",
                "ro"
              ]
            }
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMountListFilters.json"
      },
      "def-11": {
        "type": "object",
        "required": [
          "mounts",
          "pagination",
          "filters"
        ],
        "properties": {
          "mounts": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "mountKey",
                "backendKind",
                "accessMode",
                "state",
                "labels",
                "rootPath",
                "bucket",
                "prefix",
                "createdAt",
                "updatedAt",
                "config",
                "displayName",
                "description",
                "contact",
                "stateReason",
                "lastHealthCheckAt",
                "lastHealthStatus"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the backend mount."
                },
                "mountKey": {
                  "type": "string",
                  "description": "Stable slug identifying the backend."
                },
                "displayName": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Human friendly backend name."
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Optional description of the backend."
                },
                "contact": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Point of contact for the backend."
                },
                "labels": {
                  "type": "array",
                  "description": "Arbitrary labels associated with the backend.",
                  "items": {
                    "type": "string"
                  }
                },
                "backendKind": {
                  "type": "string",
                  "enum": [
                    "local",
                    "s3"
                  ],
                  "description": "Implementation backing this mount."
                },
                "accessMode": {
                  "type": "string",
                  "enum": [
                    "rw",
                    "ro"
                  ],
                  "description": "Indicates whether files can be written or only read."
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive",
                    "offline",
                    "degraded",
                    "error",
                    "unknown"
                  ],
                  "description": "Current health state as reported by the mount."
                },
                "stateReason": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Additional context explaining the current state."
                },
                "rootPath": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Base path for local backends."
                },
                "bucket": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Bucket name for S3 backends."
                },
                "prefix": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Optional prefix used when addressing the backend."
                },
                "config": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Backend specific configuration. Secrets are omitted.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "lastHealthCheckAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp of the most recent health check."
                },
                "lastHealthStatus": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Latest reported status message from the backend."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the backend was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the backend was last updated."
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Next offset to request, if more data is available."
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "search",
              "kinds",
              "states",
              "accessModes"
            ],
            "properties": {
              "search": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Search term applied to mount names or descriptions."
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "local",
                    "s3"
                  ]
                }
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inactive",
                    "offline",
                    "degraded",
                    "error",
                    "unknown"
                  ]
                }
              },
              "accessModes": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "rw",
                    "ro"
                  ]
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMountList.json"
      },
      "def-12": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "mounts",
              "pagination",
              "filters"
            ],
            "properties": {
              "mounts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "mountKey",
                    "backendKind",
                    "accessMode",
                    "state",
                    "labels",
                    "rootPath",
                    "bucket",
                    "prefix",
                    "createdAt",
                    "updatedAt",
                    "config",
                    "displayName",
                    "description",
                    "contact",
                    "stateReason",
                    "lastHealthCheckAt",
                    "lastHealthStatus"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the backend mount."
                    },
                    "mountKey": {
                      "type": "string",
                      "description": "Stable slug identifying the backend."
                    },
                    "displayName": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Human friendly backend name."
                    },
                    "description": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Optional description of the backend."
                    },
                    "contact": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Point of contact for the backend."
                    },
                    "labels": {
                      "type": "array",
                      "description": "Arbitrary labels associated with the backend.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "backendKind": {
                      "type": "string",
                      "enum": [
                        "local",
                        "s3"
                      ],
                      "description": "Implementation backing this mount."
                    },
                    "accessMode": {
                      "type": "string",
                      "enum": [
                        "rw",
                        "ro"
                      ],
                      "description": "Indicates whether files can be written or only read."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive",
                        "offline",
                        "degraded",
                        "error",
                        "unknown"
                      ],
                      "description": "Current health state as reported by the mount."
                    },
                    "stateReason": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Additional context explaining the current state."
                    },
                    "rootPath": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Base path for local backends."
                    },
                    "bucket": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Bucket name for S3 backends."
                    },
                    "prefix": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Optional prefix used when addressing the backend."
                    },
                    "config": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "description": "Backend specific configuration. Secrets are omitted.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "lastHealthCheckAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp of the most recent health check."
                    },
                    "lastHealthStatus": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Latest reported status message from the backend."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the backend was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the backend was last updated."
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Next offset to request, if more data is available."
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "search",
                  "kinds",
                  "states",
                  "accessModes"
                ],
                "properties": {
                  "search": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Search term applied to mount names or descriptions."
                  },
                  "kinds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "local",
                        "s3"
                      ]
                    }
                  },
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inactive",
                        "offline",
                        "degraded",
                        "error",
                        "unknown"
                      ]
                    }
                  },
                  "accessModes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "rw",
                        "ro"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMountListEnvelope.json"
      },
      "def-13": {
        "type": "object",
        "required": [
          "mountKey",
          "backendKind"
        ],
        "additionalProperties": false,
        "properties": {
          "mountKey": {
            "type": "string",
            "description": "Unique slug for the backend mount."
          },
          "backendKind": {
            "type": "string",
            "enum": [
              "local",
              "s3"
            ]
          },
          "displayName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional display name."
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional description."
          },
          "contact": {
            "type": [
              "string",
              "null"
            ],
            "description": "Point of contact for the backend."
          },
          "labels": {
            "type": "array",
            "description": "Optional labels providing additional context.",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "offline",
              "degraded",
              "error",
              "unknown"
            ],
            "description": "Override the lifecycle state for the backend."
          },
          "stateReason": {
            "type": [
              "string",
              "null"
            ],
            "description": "Explanation for the assigned state."
          },
          "accessMode": {
            "type": "string",
            "enum": [
              "rw",
              "ro"
            ],
            "description": "Desired access level for the backend."
          },
          "rootPath": {
            "type": [
              "string",
              "null"
            ],
            "description": "Path to mount for local backends."
          },
          "bucket": {
            "type": [
              "string",
              "null"
            ],
            "description": "Bucket name for S3 backends."
          },
          "prefix": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional path prefix when interacting with the backend."
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "description": "Backend specific configuration overrides.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMountCreateRequest.json"
      },
      "def-14": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "mountKey": {
            "type": "string",
            "description": "Updated slug for the backend mount."
          },
          "displayName": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional display name."
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional description."
          },
          "contact": {
            "type": [
              "string",
              "null"
            ],
            "description": "Point of contact for the backend."
          },
          "labels": {
            "type": "array",
            "description": "Optional labels providing additional context.",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inactive",
              "offline",
              "degraded",
              "error",
              "unknown"
            ],
            "description": "Override the lifecycle state for the backend."
          },
          "stateReason": {
            "type": [
              "string",
              "null"
            ],
            "description": "Explanation for the assigned state."
          },
          "accessMode": {
            "type": "string",
            "enum": [
              "rw",
              "ro"
            ],
            "description": "Desired access level for the backend."
          },
          "rootPath": {
            "type": [
              "string",
              "null"
            ],
            "description": "Path to mount for local backends."
          },
          "bucket": {
            "type": [
              "string",
              "null"
            ],
            "description": "Bucket name for S3 backends."
          },
          "prefix": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional path prefix when interacting with the backend."
          },
          "config": {
            "type": [
              "object",
              "null"
            ],
            "description": "Backend specific configuration overrides.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          }
        },
        "title": "https://filestore.apphub/schemas/BackendMountUpdateRequest.json"
      },
      "def-15": {
        "type": "object",
        "required": [
          "total",
          "limit",
          "offset",
          "nextOffset"
        ],
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total matching records."
          },
          "limit": {
            "type": "integer",
            "description": "Requested page size."
          },
          "offset": {
            "type": "integer",
            "description": "Current offset within the collection."
          },
          "nextOffset": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Next offset to request, if more data is available."
          }
        },
        "title": "https://filestore.apphub/schemas/Pagination.json"
      },
      "def-16": {
        "type": "object",
        "required": [
          "nodeId",
          "sizeBytes",
          "fileCount",
          "directoryCount",
          "childCount",
          "state",
          "lastCalculatedAt"
        ],
        "properties": {
          "nodeId": {
            "type": "integer",
            "description": "Identifier of the node associated with this rollup."
          },
          "sizeBytes": {
            "type": "integer",
            "description": "Total bytes attributed to the subtree."
          },
          "fileCount": {
            "type": "integer",
            "description": "Number of files in the subtree."
          },
          "directoryCount": {
            "type": "integer",
            "description": "Number of directories in the subtree."
          },
          "childCount": {
            "type": "integer",
            "description": "Total direct children tracked in the rollup."
          },
          "state": {
            "type": "string",
            "enum": [
              "up_to_date",
              "pending",
              "stale",
              "invalid"
            ],
            "description": "Freshness indicator for the rollup snapshot."
          },
          "lastCalculatedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp of the most recent rollup calculation."
          }
        },
        "title": "https://filestore.apphub/schemas/NodeRollup.json"
      },
      "def-17": {
        "type": "object",
        "required": [
          "mode",
          "streamUrl",
          "presignUrl",
          "supportsRange",
          "sizeBytes",
          "checksum",
          "contentHash",
          "filename"
        ],
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "stream",
              "presign"
            ],
            "description": "Preferred download strategy for the file."
          },
          "streamUrl": {
            "type": "string",
            "description": "URL to stream the file through the filestore service."
          },
          "presignUrl": {
            "type": [
              "string",
              "null"
            ],
            "description": "Link to request a presigned download if supported."
          },
          "supportsRange": {
            "type": "boolean",
            "description": "Indicates whether byte-range requests are supported."
          },
          "sizeBytes": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Known size of the file when available."
          },
          "checksum": {
            "type": [
              "string",
              "null"
            ],
            "description": "Checksum recorded for the file content."
          },
          "contentHash": {
            "type": [
              "string",
              "null"
            ],
            "description": "Content hash recorded for the file content."
          },
          "filename": {
            "type": [
              "string",
              "null"
            ],
            "description": "Suggested filename for downloads."
          }
        },
        "title": "https://filestore.apphub/schemas/NodeDownloadDescriptor.json"
      },
      "def-18": {
        "type": "object",
        "required": [
          "id",
          "backendMountId",
          "parentId",
          "path",
          "name",
          "depth",
          "kind",
          "sizeBytes",
          "checksum",
          "contentHash",
          "metadata",
          "state",
          "version",
          "isSymlink",
          "lastSeenAt",
          "lastModifiedAt",
          "consistencyState",
          "consistencyCheckedAt",
          "lastReconciledAt",
          "lastDriftDetectedAt",
          "createdAt",
          "updatedAt",
          "deletedAt",
          "rollup",
          "download"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the node."
          },
          "backendMountId": {
            "type": "integer",
            "description": "Identifier of the backend mount containing the node."
          },
          "parentId": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Identifier of the parent directory, if any."
          },
          "path": {
            "type": "string",
            "description": "Normalized absolute path for the node."
          },
          "name": {
            "type": "string",
            "description": "Basename of the node."
          },
          "depth": {
            "type": "integer",
            "description": "Directory depth starting from the backend root."
          },
          "kind": {
            "type": "string",
            "enum": [
              "file",
              "directory"
            ]
          },
          "sizeBytes": {
            "type": "integer",
            "description": "Logical size recorded for the node, in bytes."
          },
          "checksum": {
            "type": [
              "string",
              "null"
            ],
            "description": "Checksum recorded for the node content."
          },
          "contentHash": {
            "type": [
              "string",
              "null"
            ],
            "description": "Content hash recorded for the node content."
          },
          "metadata": {
            "type": "object",
            "description": "Arbitrary metadata captured for the node.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "inconsistent",
              "missing",
              "deleted"
            ],
            "description": "Lifecycle state tracked for the node."
          },
          "version": {
            "type": "integer",
            "description": "Monotonic version counter for optimistic concurrency."
          },
          "isSymlink": {
            "type": "boolean",
            "description": "Indicates if the node represents a symbolic link."
          },
          "lastSeenAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node was last observed in the backend."
          },
          "lastModifiedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Last modification timestamp reported by the backend."
          },
          "consistencyState": {
            "type": "string",
            "enum": [
              "active",
              "inconsistent",
              "missing"
            ],
            "description": "Consistency status derived from reconciliation."
          },
          "consistencyCheckedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of the most recent consistency check."
          },
          "lastReconciledAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp of the most recent reconciliation success."
          },
          "lastDriftDetectedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp when drift was last detected."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node record was created."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the node record was last updated."
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp when the node was marked deleted."
          },
          "rollup": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "nodeId",
              "sizeBytes",
              "fileCount",
              "directoryCount",
              "childCount",
              "state",
              "lastCalculatedAt"
            ],
            "properties": {
              "nodeId": {
                "type": "integer",
                "description": "Identifier of the node associated with this rollup."
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Total bytes attributed to the subtree."
              },
              "fileCount": {
                "type": "integer",
                "description": "Number of files in the subtree."
              },
              "directoryCount": {
                "type": "integer",
                "description": "Number of directories in the subtree."
              },
              "childCount": {
                "type": "integer",
                "description": "Total direct children tracked in the rollup."
              },
              "state": {
                "type": "string",
                "enum": [
                  "up_to_date",
                  "pending",
                  "stale",
                  "invalid"
                ],
                "description": "Freshness indicator for the rollup snapshot."
              },
              "lastCalculatedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp of the most recent rollup calculation."
              }
            }
          },
          "download": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "mode",
              "streamUrl",
              "presignUrl",
              "supportsRange",
              "sizeBytes",
              "checksum",
              "contentHash",
              "filename"
            ],
            "properties": {
              "mode": {
                "type": "string",
                "enum": [
                  "stream",
                  "presign"
                ],
                "description": "Preferred download strategy for the file."
              },
              "streamUrl": {
                "type": "string",
                "description": "URL to stream the file through the filestore service."
              },
              "presignUrl": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Link to request a presigned download if supported."
              },
              "supportsRange": {
                "type": "boolean",
                "description": "Indicates whether byte-range requests are supported."
              },
              "sizeBytes": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Known size of the file when available."
              },
              "checksum": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Checksum recorded for the file content."
              },
              "contentHash": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Content hash recorded for the file content."
              },
              "filename": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Suggested filename for downloads."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/FilestoreNode.json"
      },
      "def-19": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "query": {
            "type": "string",
            "description": "Full-text search term applied to node names and metadata."
          },
          "metadata": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Metadata key to match."
                },
                "value": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            },
            "description": "Match nodes whose metadata entries equal the supplied values."
          },
          "size": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "min": {
                "type": "integer",
                "description": "Lower bound, inclusive."
              },
              "max": {
                "type": "integer",
                "description": "Upper bound, inclusive."
              }
            },
            "description": "Range constraint applied to numeric values."
          },
          "lastSeenAt": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "after": {
                "type": "string",
                "format": "date-time",
                "description": "Lower inclusive bound."
              },
              "before": {
                "type": "string",
                "format": "date-time",
                "description": "Upper inclusive bound."
              }
            },
            "description": "Range constraint applied to ISO-8601 timestamps."
          },
          "rollup": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "up_to_date",
                    "pending",
                    "stale",
                    "invalid"
                  ]
                }
              },
              "minChildCount": {
                "type": "integer"
              },
              "maxChildCount": {
                "type": "integer"
              },
              "minFileCount": {
                "type": "integer"
              },
              "maxFileCount": {
                "type": "integer"
              },
              "minDirectoryCount": {
                "type": "integer"
              },
              "maxDirectoryCount": {
                "type": "integer"
              },
              "minSizeBytes": {
                "type": "integer"
              },
              "maxSizeBytes": {
                "type": "integer"
              },
              "lastCalculatedAfter": {
                "type": "string",
                "format": "date-time"
              },
              "lastCalculatedBefore": {
                "type": "string",
                "format": "date-time"
              }
            },
            "description": "Advanced rollup constraints applied when filtering nodes."
          }
        },
        "title": "https://filestore.apphub/schemas/FilestoreNodeFilters.json"
      },
      "def-20": {
        "type": "object",
        "required": [
          "backendMountId",
          "path",
          "depth",
          "states",
          "kinds",
          "search",
          "driftOnly",
          "advanced"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend filter applied to the query."
          },
          "path": {
            "type": [
              "string",
              "null"
            ],
            "description": "Optional path prefix filter."
          },
          "depth": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Maximum depth relative to the provided path."
          },
          "states": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "active",
                "inconsistent",
                "missing",
                "deleted"
              ]
            }
          },
          "kinds": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "file",
                "directory"
              ]
            }
          },
          "search": {
            "type": [
              "string",
              "null"
            ],
            "description": "Term supplied via search or advanced filters."
          },
          "driftOnly": {
            "type": "boolean",
            "description": "Whether only nodes with detected drift were requested."
          },
          "advanced": {
            "type": [
              "object",
              "null"
            ],
            "additionalProperties": false,
            "properties": {
              "query": {
                "type": "string",
                "description": "Full-text search term applied to node names and metadata."
              },
              "metadata": {
                "type": "array",
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Metadata key to match."
                    },
                    "value": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                },
                "description": "Match nodes whose metadata entries equal the supplied values."
              },
              "size": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "min": {
                    "type": "integer",
                    "description": "Lower bound, inclusive."
                  },
                  "max": {
                    "type": "integer",
                    "description": "Upper bound, inclusive."
                  }
                },
                "description": "Range constraint applied to numeric values."
              },
              "lastSeenAt": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "after": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Lower inclusive bound."
                  },
                  "before": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Upper inclusive bound."
                  }
                },
                "description": "Range constraint applied to ISO-8601 timestamps."
              },
              "rollup": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "up_to_date",
                        "pending",
                        "stale",
                        "invalid"
                      ]
                    }
                  },
                  "minChildCount": {
                    "type": "integer"
                  },
                  "maxChildCount": {
                    "type": "integer"
                  },
                  "minFileCount": {
                    "type": "integer"
                  },
                  "maxFileCount": {
                    "type": "integer"
                  },
                  "minDirectoryCount": {
                    "type": "integer"
                  },
                  "maxDirectoryCount": {
                    "type": "integer"
                  },
                  "minSizeBytes": {
                    "type": "integer"
                  },
                  "maxSizeBytes": {
                    "type": "integer"
                  },
                  "lastCalculatedAfter": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastCalculatedBefore": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "description": "Advanced rollup constraints applied when filtering nodes."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/NodeListFilters.json"
      },
      "def-21": {
        "type": "object",
        "required": [
          "nodes",
          "pagination",
          "filters"
        ],
        "properties": {
          "nodes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "backendMountId",
                "parentId",
                "path",
                "name",
                "depth",
                "kind",
                "sizeBytes",
                "checksum",
                "contentHash",
                "metadata",
                "state",
                "version",
                "isSymlink",
                "lastSeenAt",
                "lastModifiedAt",
                "consistencyState",
                "consistencyCheckedAt",
                "lastReconciledAt",
                "lastDriftDetectedAt",
                "createdAt",
                "updatedAt",
                "deletedAt",
                "rollup",
                "download"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the node."
                },
                "backendMountId": {
                  "type": "integer",
                  "description": "Identifier of the backend mount containing the node."
                },
                "parentId": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Identifier of the parent directory, if any."
                },
                "path": {
                  "type": "string",
                  "description": "Normalized absolute path for the node."
                },
                "name": {
                  "type": "string",
                  "description": "Basename of the node."
                },
                "depth": {
                  "type": "integer",
                  "description": "Directory depth starting from the backend root."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                },
                "sizeBytes": {
                  "type": "integer",
                  "description": "Logical size recorded for the node, in bytes."
                },
                "checksum": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Checksum recorded for the node content."
                },
                "contentHash": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Content hash recorded for the node content."
                },
                "metadata": {
                  "type": "object",
                  "description": "Arbitrary metadata captured for the node.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ],
                  "description": "Lifecycle state tracked for the node."
                },
                "version": {
                  "type": "integer",
                  "description": "Monotonic version counter for optimistic concurrency."
                },
                "isSymlink": {
                  "type": "boolean",
                  "description": "Indicates if the node represents a symbolic link."
                },
                "lastSeenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node was last observed in the backend."
                },
                "lastModifiedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Last modification timestamp reported by the backend."
                },
                "consistencyState": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing"
                  ],
                  "description": "Consistency status derived from reconciliation."
                },
                "consistencyCheckedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent consistency check."
                },
                "lastReconciledAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp of the most recent reconciliation success."
                },
                "lastDriftDetectedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp when drift was last detected."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was last updated."
                },
                "deletedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp when the node was marked deleted."
                },
                "rollup": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "nodeId",
                    "sizeBytes",
                    "fileCount",
                    "directoryCount",
                    "childCount",
                    "state",
                    "lastCalculatedAt"
                  ],
                  "properties": {
                    "nodeId": {
                      "type": "integer",
                      "description": "Identifier of the node associated with this rollup."
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Total bytes attributed to the subtree."
                    },
                    "fileCount": {
                      "type": "integer",
                      "description": "Number of files in the subtree."
                    },
                    "directoryCount": {
                      "type": "integer",
                      "description": "Number of directories in the subtree."
                    },
                    "childCount": {
                      "type": "integer",
                      "description": "Total direct children tracked in the rollup."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "up_to_date",
                        "pending",
                        "stale",
                        "invalid"
                      ],
                      "description": "Freshness indicator for the rollup snapshot."
                    },
                    "lastCalculatedAt": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "Timestamp of the most recent rollup calculation."
                    }
                  }
                },
                "download": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "mode",
                    "streamUrl",
                    "presignUrl",
                    "supportsRange",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "filename"
                  ],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "enum": [
                        "stream",
                        "presign"
                      ],
                      "description": "Preferred download strategy for the file."
                    },
                    "streamUrl": {
                      "type": "string",
                      "description": "URL to stream the file through the filestore service."
                    },
                    "presignUrl": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Link to request a presigned download if supported."
                    },
                    "supportsRange": {
                      "type": "boolean",
                      "description": "Indicates whether byte-range requests are supported."
                    },
                    "sizeBytes": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Known size of the file when available."
                    },
                    "checksum": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Checksum recorded for the file content."
                    },
                    "contentHash": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Content hash recorded for the file content."
                    },
                    "filename": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Suggested filename for downloads."
                    }
                  }
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Next offset to request, if more data is available."
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "backendMountId",
              "path",
              "depth",
              "states",
              "kinds",
              "search",
              "driftOnly",
              "advanced"
            ],
            "properties": {
              "backendMountId": {
                "type": "integer",
                "description": "Backend filter applied to the query."
              },
              "path": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Optional path prefix filter."
              },
              "depth": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Maximum depth relative to the provided path."
              },
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ]
                }
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                }
              },
              "search": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Term supplied via search or advanced filters."
              },
              "driftOnly": {
                "type": "boolean",
                "description": "Whether only nodes with detected drift were requested."
              },
              "advanced": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": false,
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Full-text search term applied to node names and metadata."
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Metadata key to match."
                        },
                        "value": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    },
                    "description": "Match nodes whose metadata entries equal the supplied values."
                  },
                  "size": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "min": {
                        "type": "integer",
                        "description": "Lower bound, inclusive."
                      },
                      "max": {
                        "type": "integer",
                        "description": "Upper bound, inclusive."
                      }
                    },
                    "description": "Range constraint applied to numeric values."
                  },
                  "lastSeenAt": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "after": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Lower inclusive bound."
                      },
                      "before": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Upper inclusive bound."
                      }
                    },
                    "description": "Range constraint applied to ISO-8601 timestamps."
                  },
                  "rollup": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "states": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ]
                        }
                      },
                      "minChildCount": {
                        "type": "integer"
                      },
                      "maxChildCount": {
                        "type": "integer"
                      },
                      "minFileCount": {
                        "type": "integer"
                      },
                      "maxFileCount": {
                        "type": "integer"
                      },
                      "minDirectoryCount": {
                        "type": "integer"
                      },
                      "maxDirectoryCount": {
                        "type": "integer"
                      },
                      "minSizeBytes": {
                        "type": "integer"
                      },
                      "maxSizeBytes": {
                        "type": "integer"
                      },
                      "lastCalculatedAfter": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastCalculatedBefore": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "description": "Advanced rollup constraints applied when filtering nodes."
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/NodeList.json"
      },
      "def-22": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "nodes",
              "pagination",
              "filters"
            ],
            "properties": {
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "backendMountId",
                    "parentId",
                    "path",
                    "name",
                    "depth",
                    "kind",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "metadata",
                    "state",
                    "version",
                    "isSymlink",
                    "lastSeenAt",
                    "lastModifiedAt",
                    "consistencyState",
                    "consistencyCheckedAt",
                    "lastReconciledAt",
                    "lastDriftDetectedAt",
                    "createdAt",
                    "updatedAt",
                    "deletedAt",
                    "rollup",
                    "download"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the node."
                    },
                    "backendMountId": {
                      "type": "integer",
                      "description": "Identifier of the backend mount containing the node."
                    },
                    "parentId": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "description": "Identifier of the parent directory, if any."
                    },
                    "path": {
                      "type": "string",
                      "description": "Normalized absolute path for the node."
                    },
                    "name": {
                      "type": "string",
                      "description": "Basename of the node."
                    },
                    "depth": {
                      "type": "integer",
                      "description": "Directory depth starting from the backend root."
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Logical size recorded for the node, in bytes."
                    },
                    "checksum": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Checksum recorded for the node content."
                    },
                    "contentHash": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Content hash recorded for the node content."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Arbitrary metadata captured for the node.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ],
                      "description": "Lifecycle state tracked for the node."
                    },
                    "version": {
                      "type": "integer",
                      "description": "Monotonic version counter for optimistic concurrency."
                    },
                    "isSymlink": {
                      "type": "boolean",
                      "description": "Indicates if the node represents a symbolic link."
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node was last observed in the backend."
                    },
                    "lastModifiedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Last modification timestamp reported by the backend."
                    },
                    "consistencyState": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing"
                      ],
                      "description": "Consistency status derived from reconciliation."
                    },
                    "consistencyCheckedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent consistency check."
                    },
                    "lastReconciledAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp of the most recent reconciliation success."
                    },
                    "lastDriftDetectedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp when drift was last detected."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was last updated."
                    },
                    "deletedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp when the node was marked deleted."
                    },
                    "rollup": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "required": [
                        "nodeId",
                        "sizeBytes",
                        "fileCount",
                        "directoryCount",
                        "childCount",
                        "state",
                        "lastCalculatedAt"
                      ],
                      "properties": {
                        "nodeId": {
                          "type": "integer",
                          "description": "Identifier of the node associated with this rollup."
                        },
                        "sizeBytes": {
                          "type": "integer",
                          "description": "Total bytes attributed to the subtree."
                        },
                        "fileCount": {
                          "type": "integer",
                          "description": "Number of files in the subtree."
                        },
                        "directoryCount": {
                          "type": "integer",
                          "description": "Number of directories in the subtree."
                        },
                        "childCount": {
                          "type": "integer",
                          "description": "Total direct children tracked in the rollup."
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ],
                          "description": "Freshness indicator for the rollup snapshot."
                        },
                        "lastCalculatedAt": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "format": "date-time",
                          "description": "Timestamp of the most recent rollup calculation."
                        }
                      }
                    },
                    "download": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "required": [
                        "mode",
                        "streamUrl",
                        "presignUrl",
                        "supportsRange",
                        "sizeBytes",
                        "checksum",
                        "contentHash",
                        "filename"
                      ],
                      "properties": {
                        "mode": {
                          "type": "string",
                          "enum": [
                            "stream",
                            "presign"
                          ],
                          "description": "Preferred download strategy for the file."
                        },
                        "streamUrl": {
                          "type": "string",
                          "description": "URL to stream the file through the filestore service."
                        },
                        "presignUrl": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Link to request a presigned download if supported."
                        },
                        "supportsRange": {
                          "type": "boolean",
                          "description": "Indicates whether byte-range requests are supported."
                        },
                        "sizeBytes": {
                          "type": [
                            "null",
                            "integer"
                          ],
                          "description": "Known size of the file when available."
                        },
                        "checksum": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Checksum recorded for the file content."
                        },
                        "contentHash": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Content hash recorded for the file content."
                        },
                        "filename": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Suggested filename for downloads."
                        }
                      }
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Next offset to request, if more data is available."
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "backendMountId",
                  "path",
                  "depth",
                  "states",
                  "kinds",
                  "search",
                  "driftOnly",
                  "advanced"
                ],
                "properties": {
                  "backendMountId": {
                    "type": "integer",
                    "description": "Backend filter applied to the query."
                  },
                  "path": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Optional path prefix filter."
                  },
                  "depth": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Maximum depth relative to the provided path."
                  },
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ]
                    }
                  },
                  "kinds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    }
                  },
                  "search": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Term supplied via search or advanced filters."
                  },
                  "driftOnly": {
                    "type": "boolean",
                    "description": "Whether only nodes with detected drift were requested."
                  },
                  "advanced": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "Full-text search term applied to node names and metadata."
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Metadata key to match."
                            },
                            "value": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        },
                        "description": "Match nodes whose metadata entries equal the supplied values."
                      },
                      "size": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "min": {
                            "type": "integer",
                            "description": "Lower bound, inclusive."
                          },
                          "max": {
                            "type": "integer",
                            "description": "Upper bound, inclusive."
                          }
                        },
                        "description": "Range constraint applied to numeric values."
                      },
                      "lastSeenAt": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "after": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Lower inclusive bound."
                          },
                          "before": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Upper inclusive bound."
                          }
                        },
                        "description": "Range constraint applied to ISO-8601 timestamps."
                      },
                      "rollup": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "states": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "up_to_date",
                                "pending",
                                "stale",
                                "invalid"
                              ]
                            }
                          },
                          "minChildCount": {
                            "type": "integer"
                          },
                          "maxChildCount": {
                            "type": "integer"
                          },
                          "minFileCount": {
                            "type": "integer"
                          },
                          "maxFileCount": {
                            "type": "integer"
                          },
                          "minDirectoryCount": {
                            "type": "integer"
                          },
                          "maxDirectoryCount": {
                            "type": "integer"
                          },
                          "minSizeBytes": {
                            "type": "integer"
                          },
                          "maxSizeBytes": {
                            "type": "integer"
                          },
                          "lastCalculatedAfter": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastCalculatedBefore": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "description": "Advanced rollup constraints applied when filtering nodes."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/NodeListEnvelope.json"
      },
      "def-23": {
        "type": "object",
        "required": [
          "parent",
          "children",
          "pagination",
          "filters"
        ],
        "properties": {
          "parent": {
            "type": "object",
            "required": [
              "id",
              "backendMountId",
              "parentId",
              "path",
              "name",
              "depth",
              "kind",
              "sizeBytes",
              "checksum",
              "contentHash",
              "metadata",
              "state",
              "version",
              "isSymlink",
              "lastSeenAt",
              "lastModifiedAt",
              "consistencyState",
              "consistencyCheckedAt",
              "lastReconciledAt",
              "lastDriftDetectedAt",
              "createdAt",
              "updatedAt",
              "deletedAt",
              "rollup",
              "download"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the node."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Identifier of the backend mount containing the node."
              },
              "parentId": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Identifier of the parent directory, if any."
              },
              "path": {
                "type": "string",
                "description": "Normalized absolute path for the node."
              },
              "name": {
                "type": "string",
                "description": "Basename of the node."
              },
              "depth": {
                "type": "integer",
                "description": "Directory depth starting from the backend root."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ]
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Logical size recorded for the node, in bytes."
              },
              "checksum": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Checksum recorded for the node content."
              },
              "contentHash": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Content hash recorded for the node content."
              },
              "metadata": {
                "type": "object",
                "description": "Arbitrary metadata captured for the node.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing",
                  "deleted"
                ],
                "description": "Lifecycle state tracked for the node."
              },
              "version": {
                "type": "integer",
                "description": "Monotonic version counter for optimistic concurrency."
              },
              "isSymlink": {
                "type": "boolean",
                "description": "Indicates if the node represents a symbolic link."
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was last observed in the backend."
              },
              "lastModifiedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Last modification timestamp reported by the backend."
              },
              "consistencyState": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing"
                ],
                "description": "Consistency status derived from reconciliation."
              },
              "consistencyCheckedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent consistency check."
              },
              "lastReconciledAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp of the most recent reconciliation success."
              },
              "lastDriftDetectedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp when drift was last detected."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was last updated."
              },
              "deletedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp when the node was marked deleted."
              },
              "rollup": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "nodeId",
                  "sizeBytes",
                  "fileCount",
                  "directoryCount",
                  "childCount",
                  "state",
                  "lastCalculatedAt"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer",
                    "description": "Identifier of the node associated with this rollup."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Total bytes attributed to the subtree."
                  },
                  "fileCount": {
                    "type": "integer",
                    "description": "Number of files in the subtree."
                  },
                  "directoryCount": {
                    "type": "integer",
                    "description": "Number of directories in the subtree."
                  },
                  "childCount": {
                    "type": "integer",
                    "description": "Total direct children tracked in the rollup."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "up_to_date",
                      "pending",
                      "stale",
                      "invalid"
                    ],
                    "description": "Freshness indicator for the rollup snapshot."
                  },
                  "lastCalculatedAt": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "description": "Timestamp of the most recent rollup calculation."
                  }
                }
              },
              "download": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "mode",
                  "streamUrl",
                  "presignUrl",
                  "supportsRange",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "filename"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "stream",
                      "presign"
                    ],
                    "description": "Preferred download strategy for the file."
                  },
                  "streamUrl": {
                    "type": "string",
                    "description": "URL to stream the file through the filestore service."
                  },
                  "presignUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Link to request a presigned download if supported."
                  },
                  "supportsRange": {
                    "type": "boolean",
                    "description": "Indicates whether byte-range requests are supported."
                  },
                  "sizeBytes": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "Known size of the file when available."
                  },
                  "checksum": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Checksum recorded for the file content."
                  },
                  "contentHash": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Content hash recorded for the file content."
                  },
                  "filename": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Suggested filename for downloads."
                  }
                }
              }
            }
          },
          "children": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "backendMountId",
                "parentId",
                "path",
                "name",
                "depth",
                "kind",
                "sizeBytes",
                "checksum",
                "contentHash",
                "metadata",
                "state",
                "version",
                "isSymlink",
                "lastSeenAt",
                "lastModifiedAt",
                "consistencyState",
                "consistencyCheckedAt",
                "lastReconciledAt",
                "lastDriftDetectedAt",
                "createdAt",
                "updatedAt",
                "deletedAt",
                "rollup",
                "download"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the node."
                },
                "backendMountId": {
                  "type": "integer",
                  "description": "Identifier of the backend mount containing the node."
                },
                "parentId": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Identifier of the parent directory, if any."
                },
                "path": {
                  "type": "string",
                  "description": "Normalized absolute path for the node."
                },
                "name": {
                  "type": "string",
                  "description": "Basename of the node."
                },
                "depth": {
                  "type": "integer",
                  "description": "Directory depth starting from the backend root."
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                },
                "sizeBytes": {
                  "type": "integer",
                  "description": "Logical size recorded for the node, in bytes."
                },
                "checksum": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Checksum recorded for the node content."
                },
                "contentHash": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Content hash recorded for the node content."
                },
                "metadata": {
                  "type": "object",
                  "description": "Arbitrary metadata captured for the node.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "state": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ],
                  "description": "Lifecycle state tracked for the node."
                },
                "version": {
                  "type": "integer",
                  "description": "Monotonic version counter for optimistic concurrency."
                },
                "isSymlink": {
                  "type": "boolean",
                  "description": "Indicates if the node represents a symbolic link."
                },
                "lastSeenAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node was last observed in the backend."
                },
                "lastModifiedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Last modification timestamp reported by the backend."
                },
                "consistencyState": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing"
                  ],
                  "description": "Consistency status derived from reconciliation."
                },
                "consistencyCheckedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp of the most recent consistency check."
                },
                "lastReconciledAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp of the most recent reconciliation success."
                },
                "lastDriftDetectedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp when drift was last detected."
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was created."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the node record was last updated."
                },
                "deletedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp when the node was marked deleted."
                },
                "rollup": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "nodeId",
                    "sizeBytes",
                    "fileCount",
                    "directoryCount",
                    "childCount",
                    "state",
                    "lastCalculatedAt"
                  ],
                  "properties": {
                    "nodeId": {
                      "type": "integer",
                      "description": "Identifier of the node associated with this rollup."
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Total bytes attributed to the subtree."
                    },
                    "fileCount": {
                      "type": "integer",
                      "description": "Number of files in the subtree."
                    },
                    "directoryCount": {
                      "type": "integer",
                      "description": "Number of directories in the subtree."
                    },
                    "childCount": {
                      "type": "integer",
                      "description": "Total direct children tracked in the rollup."
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "up_to_date",
                        "pending",
                        "stale",
                        "invalid"
                      ],
                      "description": "Freshness indicator for the rollup snapshot."
                    },
                    "lastCalculatedAt": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "description": "Timestamp of the most recent rollup calculation."
                    }
                  }
                },
                "download": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "required": [
                    "mode",
                    "streamUrl",
                    "presignUrl",
                    "supportsRange",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "filename"
                  ],
                  "properties": {
                    "mode": {
                      "type": "string",
                      "enum": [
                        "stream",
                        "presign"
                      ],
                      "description": "Preferred download strategy for the file."
                    },
                    "streamUrl": {
                      "type": "string",
                      "description": "URL to stream the file through the filestore service."
                    },
                    "presignUrl": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Link to request a presigned download if supported."
                    },
                    "supportsRange": {
                      "type": "boolean",
                      "description": "Indicates whether byte-range requests are supported."
                    },
                    "sizeBytes": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Known size of the file when available."
                    },
                    "checksum": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Checksum recorded for the file content."
                    },
                    "contentHash": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Content hash recorded for the file content."
                    },
                    "filename": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Suggested filename for downloads."
                    }
                  }
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Next offset to request, if more data is available."
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "states",
              "kinds",
              "search",
              "driftOnly",
              "advanced"
            ],
            "properties": {
              "states": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "active",
                    "inconsistent",
                    "missing",
                    "deleted"
                  ]
                }
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "file",
                    "directory"
                  ]
                }
              },
              "search": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "driftOnly": {
                "type": "boolean"
              },
              "advanced": {
                "type": [
                  "object",
                  "null"
                ],
                "additionalProperties": false,
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Full-text search term applied to node names and metadata."
                  },
                  "metadata": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": false,
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Metadata key to match."
                        },
                        "value": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    },
                    "description": "Match nodes whose metadata entries equal the supplied values."
                  },
                  "size": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "min": {
                        "type": "integer",
                        "description": "Lower bound, inclusive."
                      },
                      "max": {
                        "type": "integer",
                        "description": "Upper bound, inclusive."
                      }
                    },
                    "description": "Range constraint applied to numeric values."
                  },
                  "lastSeenAt": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "after": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Lower inclusive bound."
                      },
                      "before": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Upper inclusive bound."
                      }
                    },
                    "description": "Range constraint applied to ISO-8601 timestamps."
                  },
                  "rollup": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "states": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ]
                        }
                      },
                      "minChildCount": {
                        "type": "integer"
                      },
                      "maxChildCount": {
                        "type": "integer"
                      },
                      "minFileCount": {
                        "type": "integer"
                      },
                      "maxFileCount": {
                        "type": "integer"
                      },
                      "minDirectoryCount": {
                        "type": "integer"
                      },
                      "maxDirectoryCount": {
                        "type": "integer"
                      },
                      "minSizeBytes": {
                        "type": "integer"
                      },
                      "maxSizeBytes": {
                        "type": "integer"
                      },
                      "lastCalculatedAfter": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastCalculatedBefore": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "description": "Advanced rollup constraints applied when filtering nodes."
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/NodeChildren.json"
      },
      "def-24": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "parent",
              "children",
              "pagination",
              "filters"
            ],
            "properties": {
              "parent": {
                "type": "object",
                "required": [
                  "id",
                  "backendMountId",
                  "parentId",
                  "path",
                  "name",
                  "depth",
                  "kind",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "metadata",
                  "state",
                  "version",
                  "isSymlink",
                  "lastSeenAt",
                  "lastModifiedAt",
                  "consistencyState",
                  "consistencyCheckedAt",
                  "lastReconciledAt",
                  "lastDriftDetectedAt",
                  "createdAt",
                  "updatedAt",
                  "deletedAt",
                  "rollup",
                  "download"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the node."
                  },
                  "backendMountId": {
                    "type": "integer",
                    "description": "Identifier of the backend mount containing the node."
                  },
                  "parentId": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Identifier of the parent directory, if any."
                  },
                  "path": {
                    "type": "string",
                    "description": "Normalized absolute path for the node."
                  },
                  "name": {
                    "type": "string",
                    "description": "Basename of the node."
                  },
                  "depth": {
                    "type": "integer",
                    "description": "Directory depth starting from the backend root."
                  },
                  "kind": {
                    "type": "string",
                    "enum": [
                      "file",
                      "directory"
                    ]
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Logical size recorded for the node, in bytes."
                  },
                  "checksum": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Checksum recorded for the node content."
                  },
                  "contentHash": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Content hash recorded for the node content."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Arbitrary metadata captured for the node.",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing",
                      "deleted"
                    ],
                    "description": "Lifecycle state tracked for the node."
                  },
                  "version": {
                    "type": "integer",
                    "description": "Monotonic version counter for optimistic concurrency."
                  },
                  "isSymlink": {
                    "type": "boolean",
                    "description": "Indicates if the node represents a symbolic link."
                  },
                  "lastSeenAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node was last observed in the backend."
                  },
                  "lastModifiedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Last modification timestamp reported by the backend."
                  },
                  "consistencyState": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing"
                    ],
                    "description": "Consistency status derived from reconciliation."
                  },
                  "consistencyCheckedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent consistency check."
                  },
                  "lastReconciledAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp of the most recent reconciliation success."
                  },
                  "lastDriftDetectedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp when drift was last detected."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was last updated."
                  },
                  "deletedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp when the node was marked deleted."
                  },
                  "rollup": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "required": [
                      "nodeId",
                      "sizeBytes",
                      "fileCount",
                      "directoryCount",
                      "childCount",
                      "state",
                      "lastCalculatedAt"
                    ],
                    "properties": {
                      "nodeId": {
                        "type": "integer",
                        "description": "Identifier of the node associated with this rollup."
                      },
                      "sizeBytes": {
                        "type": "integer",
                        "description": "Total bytes attributed to the subtree."
                      },
                      "fileCount": {
                        "type": "integer",
                        "description": "Number of files in the subtree."
                      },
                      "directoryCount": {
                        "type": "integer",
                        "description": "Number of directories in the subtree."
                      },
                      "childCount": {
                        "type": "integer",
                        "description": "Total direct children tracked in the rollup."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "up_to_date",
                          "pending",
                          "stale",
                          "invalid"
                        ],
                        "description": "Freshness indicator for the rollup snapshot."
                      },
                      "lastCalculatedAt": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "date-time",
                        "description": "Timestamp of the most recent rollup calculation."
                      }
                    }
                  },
                  "download": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "required": [
                      "mode",
                      "streamUrl",
                      "presignUrl",
                      "supportsRange",
                      "sizeBytes",
                      "checksum",
                      "contentHash",
                      "filename"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "enum": [
                          "stream",
                          "presign"
                        ],
                        "description": "Preferred download strategy for the file."
                      },
                      "streamUrl": {
                        "type": "string",
                        "description": "URL to stream the file through the filestore service."
                      },
                      "presignUrl": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Link to request a presigned download if supported."
                      },
                      "supportsRange": {
                        "type": "boolean",
                        "description": "Indicates whether byte-range requests are supported."
                      },
                      "sizeBytes": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "description": "Known size of the file when available."
                      },
                      "checksum": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Checksum recorded for the file content."
                      },
                      "contentHash": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Content hash recorded for the file content."
                      },
                      "filename": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Suggested filename for downloads."
                      }
                    }
                  }
                }
              },
              "children": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "backendMountId",
                    "parentId",
                    "path",
                    "name",
                    "depth",
                    "kind",
                    "sizeBytes",
                    "checksum",
                    "contentHash",
                    "metadata",
                    "state",
                    "version",
                    "isSymlink",
                    "lastSeenAt",
                    "lastModifiedAt",
                    "consistencyState",
                    "consistencyCheckedAt",
                    "lastReconciledAt",
                    "lastDriftDetectedAt",
                    "createdAt",
                    "updatedAt",
                    "deletedAt",
                    "rollup",
                    "download"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique identifier for the node."
                    },
                    "backendMountId": {
                      "type": "integer",
                      "description": "Identifier of the backend mount containing the node."
                    },
                    "parentId": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "description": "Identifier of the parent directory, if any."
                    },
                    "path": {
                      "type": "string",
                      "description": "Normalized absolute path for the node."
                    },
                    "name": {
                      "type": "string",
                      "description": "Basename of the node."
                    },
                    "depth": {
                      "type": "integer",
                      "description": "Directory depth starting from the backend root."
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    },
                    "sizeBytes": {
                      "type": "integer",
                      "description": "Logical size recorded for the node, in bytes."
                    },
                    "checksum": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Checksum recorded for the node content."
                    },
                    "contentHash": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "description": "Content hash recorded for the node content."
                    },
                    "metadata": {
                      "type": "object",
                      "description": "Arbitrary metadata captured for the node.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "state": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ],
                      "description": "Lifecycle state tracked for the node."
                    },
                    "version": {
                      "type": "integer",
                      "description": "Monotonic version counter for optimistic concurrency."
                    },
                    "isSymlink": {
                      "type": "boolean",
                      "description": "Indicates if the node represents a symbolic link."
                    },
                    "lastSeenAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node was last observed in the backend."
                    },
                    "lastModifiedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Last modification timestamp reported by the backend."
                    },
                    "consistencyState": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing"
                      ],
                      "description": "Consistency status derived from reconciliation."
                    },
                    "consistencyCheckedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp of the most recent consistency check."
                    },
                    "lastReconciledAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp of the most recent reconciliation success."
                    },
                    "lastDriftDetectedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp when drift was last detected."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was created."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the node record was last updated."
                    },
                    "deletedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp when the node was marked deleted."
                    },
                    "rollup": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "required": [
                        "nodeId",
                        "sizeBytes",
                        "fileCount",
                        "directoryCount",
                        "childCount",
                        "state",
                        "lastCalculatedAt"
                      ],
                      "properties": {
                        "nodeId": {
                          "type": "integer",
                          "description": "Identifier of the node associated with this rollup."
                        },
                        "sizeBytes": {
                          "type": "integer",
                          "description": "Total bytes attributed to the subtree."
                        },
                        "fileCount": {
                          "type": "integer",
                          "description": "Number of files in the subtree."
                        },
                        "directoryCount": {
                          "type": "integer",
                          "description": "Number of directories in the subtree."
                        },
                        "childCount": {
                          "type": "integer",
                          "description": "Total direct children tracked in the rollup."
                        },
                        "state": {
                          "type": "string",
                          "enum": [
                            "up_to_date",
                            "pending",
                            "stale",
                            "invalid"
                          ],
                          "description": "Freshness indicator for the rollup snapshot."
                        },
                        "lastCalculatedAt": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "format": "date-time",
                          "description": "Timestamp of the most recent rollup calculation."
                        }
                      }
                    },
                    "download": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "required": [
                        "mode",
                        "streamUrl",
                        "presignUrl",
                        "supportsRange",
                        "sizeBytes",
                        "checksum",
                        "contentHash",
                        "filename"
                      ],
                      "properties": {
                        "mode": {
                          "type": "string",
                          "enum": [
                            "stream",
                            "presign"
                          ],
                          "description": "Preferred download strategy for the file."
                        },
                        "streamUrl": {
                          "type": "string",
                          "description": "URL to stream the file through the filestore service."
                        },
                        "presignUrl": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Link to request a presigned download if supported."
                        },
                        "supportsRange": {
                          "type": "boolean",
                          "description": "Indicates whether byte-range requests are supported."
                        },
                        "sizeBytes": {
                          "type": [
                            "null",
                            "integer"
                          ],
                          "description": "Known size of the file when available."
                        },
                        "checksum": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Checksum recorded for the file content."
                        },
                        "contentHash": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Content hash recorded for the file content."
                        },
                        "filename": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "description": "Suggested filename for downloads."
                        }
                      }
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Next offset to request, if more data is available."
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "states",
                  "kinds",
                  "search",
                  "driftOnly",
                  "advanced"
                ],
                "properties": {
                  "states": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "active",
                        "inconsistent",
                        "missing",
                        "deleted"
                      ]
                    }
                  },
                  "kinds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "file",
                        "directory"
                      ]
                    }
                  },
                  "search": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "driftOnly": {
                    "type": "boolean"
                  },
                  "advanced": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "additionalProperties": false,
                    "properties": {
                      "query": {
                        "type": "string",
                        "description": "Full-text search term applied to node names and metadata."
                      },
                      "metadata": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "Metadata key to match."
                            },
                            "value": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        },
                        "description": "Match nodes whose metadata entries equal the supplied values."
                      },
                      "size": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "min": {
                            "type": "integer",
                            "description": "Lower bound, inclusive."
                          },
                          "max": {
                            "type": "integer",
                            "description": "Upper bound, inclusive."
                          }
                        },
                        "description": "Range constraint applied to numeric values."
                      },
                      "lastSeenAt": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "after": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Lower inclusive bound."
                          },
                          "before": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Upper inclusive bound."
                          }
                        },
                        "description": "Range constraint applied to ISO-8601 timestamps."
                      },
                      "rollup": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "states": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "up_to_date",
                                "pending",
                                "stale",
                                "invalid"
                              ]
                            }
                          },
                          "minChildCount": {
                            "type": "integer"
                          },
                          "maxChildCount": {
                            "type": "integer"
                          },
                          "minFileCount": {
                            "type": "integer"
                          },
                          "maxFileCount": {
                            "type": "integer"
                          },
                          "minDirectoryCount": {
                            "type": "integer"
                          },
                          "maxDirectoryCount": {
                            "type": "integer"
                          },
                          "minSizeBytes": {
                            "type": "integer"
                          },
                          "maxSizeBytes": {
                            "type": "integer"
                          },
                          "lastCalculatedAfter": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastCalculatedBefore": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "description": "Advanced rollup constraints applied when filtering nodes."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/NodeChildrenEnvelope.json"
      },
      "def-25": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "backendMountId",
              "parentId",
              "path",
              "name",
              "depth",
              "kind",
              "sizeBytes",
              "checksum",
              "contentHash",
              "metadata",
              "state",
              "version",
              "isSymlink",
              "lastSeenAt",
              "lastModifiedAt",
              "consistencyState",
              "consistencyCheckedAt",
              "lastReconciledAt",
              "lastDriftDetectedAt",
              "createdAt",
              "updatedAt",
              "deletedAt",
              "rollup",
              "download"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the node."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Identifier of the backend mount containing the node."
              },
              "parentId": {
                "type": [
                  "null",
                  "integer"
                ],
                "description": "Identifier of the parent directory, if any."
              },
              "path": {
                "type": "string",
                "description": "Normalized absolute path for the node."
              },
              "name": {
                "type": "string",
                "description": "Basename of the node."
              },
              "depth": {
                "type": "integer",
                "description": "Directory depth starting from the backend root."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ]
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Logical size recorded for the node, in bytes."
              },
              "checksum": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Checksum recorded for the node content."
              },
              "contentHash": {
                "type": [
                  "null",
                  "string"
                ],
                "description": "Content hash recorded for the node content."
              },
              "metadata": {
                "type": "object",
                "description": "Arbitrary metadata captured for the node.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing",
                  "deleted"
                ],
                "description": "Lifecycle state tracked for the node."
              },
              "version": {
                "type": "integer",
                "description": "Monotonic version counter for optimistic concurrency."
              },
              "isSymlink": {
                "type": "boolean",
                "description": "Indicates if the node represents a symbolic link."
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was last observed in the backend."
              },
              "lastModifiedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Last modification timestamp reported by the backend."
              },
              "consistencyState": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing"
                ],
                "description": "Consistency status derived from reconciliation."
              },
              "consistencyCheckedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent consistency check."
              },
              "lastReconciledAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Timestamp of the most recent reconciliation success."
              },
              "lastDriftDetectedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Timestamp when drift was last detected."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was last updated."
              },
              "deletedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Timestamp when the node was marked deleted."
              },
              "rollup": {
                "type": [
                  "null",
                  "object"
                ],
                "required": [
                  "nodeId",
                  "sizeBytes",
                  "fileCount",
                  "directoryCount",
                  "childCount",
                  "state",
                  "lastCalculatedAt"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer",
                    "description": "Identifier of the node associated with this rollup."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Total bytes attributed to the subtree."
                  },
                  "fileCount": {
                    "type": "integer",
                    "description": "Number of files in the subtree."
                  },
                  "directoryCount": {
                    "type": "integer",
                    "description": "Number of directories in the subtree."
                  },
                  "childCount": {
                    "type": "integer",
                    "description": "Total direct children tracked in the rollup."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "up_to_date",
                      "pending",
                      "stale",
                      "invalid"
                    ],
                    "description": "Freshness indicator for the rollup snapshot."
                  },
                  "lastCalculatedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp of the most recent rollup calculation."
                  }
                }
              },
              "download": {
                "type": [
                  "null",
                  "object"
                ],
                "required": [
                  "mode",
                  "streamUrl",
                  "presignUrl",
                  "supportsRange",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "filename"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "stream",
                      "presign"
                    ],
                    "description": "Preferred download strategy for the file."
                  },
                  "streamUrl": {
                    "type": "string",
                    "description": "URL to stream the file through the filestore service."
                  },
                  "presignUrl": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Link to request a presigned download if supported."
                  },
                  "supportsRange": {
                    "type": "boolean",
                    "description": "Indicates whether byte-range requests are supported."
                  },
                  "sizeBytes": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Known size of the file when available."
                  },
                  "checksum": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Checksum recorded for the file content."
                  },
                  "contentHash": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Content hash recorded for the file content."
                  },
                  "filename": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Suggested filename for downloads."
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/NodeEnvelope.json"
      },
      "def-26": {
        "type": "object",
        "required": [
          "idempotent",
          "journalEntryId",
          "node",
          "result"
        ],
        "properties": {
          "idempotent": {
            "type": "boolean",
            "description": "Indicates whether an idempotency key short-circuited the command."
          },
          "journalEntryId": {
            "type": "integer",
            "description": "Identifier of the journal entry generated for this command."
          },
          "node": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "id",
              "backendMountId",
              "parentId",
              "path",
              "name",
              "depth",
              "kind",
              "sizeBytes",
              "checksum",
              "contentHash",
              "metadata",
              "state",
              "version",
              "isSymlink",
              "lastSeenAt",
              "lastModifiedAt",
              "consistencyState",
              "consistencyCheckedAt",
              "lastReconciledAt",
              "lastDriftDetectedAt",
              "createdAt",
              "updatedAt",
              "deletedAt",
              "rollup",
              "download"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique identifier for the node."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Identifier of the backend mount containing the node."
              },
              "parentId": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Identifier of the parent directory, if any."
              },
              "path": {
                "type": "string",
                "description": "Normalized absolute path for the node."
              },
              "name": {
                "type": "string",
                "description": "Basename of the node."
              },
              "depth": {
                "type": "integer",
                "description": "Directory depth starting from the backend root."
              },
              "kind": {
                "type": "string",
                "enum": [
                  "file",
                  "directory"
                ]
              },
              "sizeBytes": {
                "type": "integer",
                "description": "Logical size recorded for the node, in bytes."
              },
              "checksum": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Checksum recorded for the node content."
              },
              "contentHash": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Content hash recorded for the node content."
              },
              "metadata": {
                "type": "object",
                "description": "Arbitrary metadata captured for the node.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "state": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing",
                  "deleted"
                ],
                "description": "Lifecycle state tracked for the node."
              },
              "version": {
                "type": "integer",
                "description": "Monotonic version counter for optimistic concurrency."
              },
              "isSymlink": {
                "type": "boolean",
                "description": "Indicates if the node represents a symbolic link."
              },
              "lastSeenAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node was last observed in the backend."
              },
              "lastModifiedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Last modification timestamp reported by the backend."
              },
              "consistencyState": {
                "type": "string",
                "enum": [
                  "active",
                  "inconsistent",
                  "missing"
                ],
                "description": "Consistency status derived from reconciliation."
              },
              "consistencyCheckedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp of the most recent consistency check."
              },
              "lastReconciledAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp of the most recent reconciliation success."
              },
              "lastDriftDetectedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp when drift was last detected."
              },
              "createdAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was created."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the node record was last updated."
              },
              "deletedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time",
                "description": "Timestamp when the node was marked deleted."
              },
              "rollup": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "nodeId",
                  "sizeBytes",
                  "fileCount",
                  "directoryCount",
                  "childCount",
                  "state",
                  "lastCalculatedAt"
                ],
                "properties": {
                  "nodeId": {
                    "type": "integer",
                    "description": "Identifier of the node associated with this rollup."
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Total bytes attributed to the subtree."
                  },
                  "fileCount": {
                    "type": "integer",
                    "description": "Number of files in the subtree."
                  },
                  "directoryCount": {
                    "type": "integer",
                    "description": "Number of directories in the subtree."
                  },
                  "childCount": {
                    "type": "integer",
                    "description": "Total direct children tracked in the rollup."
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "up_to_date",
                      "pending",
                      "stale",
                      "invalid"
                    ],
                    "description": "Freshness indicator for the rollup snapshot."
                  },
                  "lastCalculatedAt": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "description": "Timestamp of the most recent rollup calculation."
                  }
                }
              },
              "download": {
                "type": [
                  "object",
                  "null"
                ],
                "required": [
                  "mode",
                  "streamUrl",
                  "presignUrl",
                  "supportsRange",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "filename"
                ],
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": [
                      "stream",
                      "presign"
                    ],
                    "description": "Preferred download strategy for the file."
                  },
                  "streamUrl": {
                    "type": "string",
                    "description": "URL to stream the file through the filestore service."
                  },
                  "presignUrl": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Link to request a presigned download if supported."
                  },
                  "supportsRange": {
                    "type": "boolean",
                    "description": "Indicates whether byte-range requests are supported."
                  },
                  "sizeBytes": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "description": "Known size of the file when available."
                  },
                  "checksum": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Checksum recorded for the file content."
                  },
                  "contentHash": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Content hash recorded for the file content."
                  },
                  "filename": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Suggested filename for downloads."
                  }
                }
              }
            }
          },
          "result": {
            "type": "object",
            "description": "Command-specific payload describing the work performed.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          }
        },
        "title": "https://filestore.apphub/schemas/CommandOutcome.json"
      },
      "def-27": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "idempotent",
              "journalEntryId",
              "node",
              "result"
            ],
            "properties": {
              "idempotent": {
                "type": "boolean",
                "description": "Indicates whether an idempotency key short-circuited the command."
              },
              "journalEntryId": {
                "type": "integer",
                "description": "Identifier of the journal entry generated for this command."
              },
              "node": {
                "type": [
                  "null",
                  "object"
                ],
                "required": [
                  "id",
                  "backendMountId",
                  "parentId",
                  "path",
                  "name",
                  "depth",
                  "kind",
                  "sizeBytes",
                  "checksum",
                  "contentHash",
                  "metadata",
                  "state",
                  "version",
                  "isSymlink",
                  "lastSeenAt",
                  "lastModifiedAt",
                  "consistencyState",
                  "consistencyCheckedAt",
                  "lastReconciledAt",
                  "lastDriftDetectedAt",
                  "createdAt",
                  "updatedAt",
                  "deletedAt",
                  "rollup",
                  "download"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the node."
                  },
                  "backendMountId": {
                    "type": "integer",
                    "description": "Identifier of the backend mount containing the node."
                  },
                  "parentId": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Identifier of the parent directory, if any."
                  },
                  "path": {
                    "type": "string",
                    "description": "Normalized absolute path for the node."
                  },
                  "name": {
                    "type": "string",
                    "description": "Basename of the node."
                  },
                  "depth": {
                    "type": "integer",
                    "description": "Directory depth starting from the backend root."
                  },
                  "kind": {
                    "type": "string",
                    "enum": [
                      "file",
                      "directory"
                    ]
                  },
                  "sizeBytes": {
                    "type": "integer",
                    "description": "Logical size recorded for the node, in bytes."
                  },
                  "checksum": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Checksum recorded for the node content."
                  },
                  "contentHash": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Content hash recorded for the node content."
                  },
                  "metadata": {
                    "type": "object",
                    "description": "Arbitrary metadata captured for the node.",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing",
                      "deleted"
                    ],
                    "description": "Lifecycle state tracked for the node."
                  },
                  "version": {
                    "type": "integer",
                    "description": "Monotonic version counter for optimistic concurrency."
                  },
                  "isSymlink": {
                    "type": "boolean",
                    "description": "Indicates if the node represents a symbolic link."
                  },
                  "lastSeenAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node was last observed in the backend."
                  },
                  "lastModifiedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Last modification timestamp reported by the backend."
                  },
                  "consistencyState": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing"
                    ],
                    "description": "Consistency status derived from reconciliation."
                  },
                  "consistencyCheckedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp of the most recent consistency check."
                  },
                  "lastReconciledAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp of the most recent reconciliation success."
                  },
                  "lastDriftDetectedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp when drift was last detected."
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was created."
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Timestamp when the node record was last updated."
                  },
                  "deletedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time",
                    "description": "Timestamp when the node was marked deleted."
                  },
                  "rollup": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "required": [
                      "nodeId",
                      "sizeBytes",
                      "fileCount",
                      "directoryCount",
                      "childCount",
                      "state",
                      "lastCalculatedAt"
                    ],
                    "properties": {
                      "nodeId": {
                        "type": "integer",
                        "description": "Identifier of the node associated with this rollup."
                      },
                      "sizeBytes": {
                        "type": "integer",
                        "description": "Total bytes attributed to the subtree."
                      },
                      "fileCount": {
                        "type": "integer",
                        "description": "Number of files in the subtree."
                      },
                      "directoryCount": {
                        "type": "integer",
                        "description": "Number of directories in the subtree."
                      },
                      "childCount": {
                        "type": "integer",
                        "description": "Total direct children tracked in the rollup."
                      },
                      "state": {
                        "type": "string",
                        "enum": [
                          "up_to_date",
                          "pending",
                          "stale",
                          "invalid"
                        ],
                        "description": "Freshness indicator for the rollup snapshot."
                      },
                      "lastCalculatedAt": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "format": "date-time",
                        "description": "Timestamp of the most recent rollup calculation."
                      }
                    }
                  },
                  "download": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "required": [
                      "mode",
                      "streamUrl",
                      "presignUrl",
                      "supportsRange",
                      "sizeBytes",
                      "checksum",
                      "contentHash",
                      "filename"
                    ],
                    "properties": {
                      "mode": {
                        "type": "string",
                        "enum": [
                          "stream",
                          "presign"
                        ],
                        "description": "Preferred download strategy for the file."
                      },
                      "streamUrl": {
                        "type": "string",
                        "description": "URL to stream the file through the filestore service."
                      },
                      "presignUrl": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Link to request a presigned download if supported."
                      },
                      "supportsRange": {
                        "type": "boolean",
                        "description": "Indicates whether byte-range requests are supported."
                      },
                      "sizeBytes": {
                        "type": [
                          "null",
                          "integer"
                        ],
                        "description": "Known size of the file when available."
                      },
                      "checksum": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Checksum recorded for the file content."
                      },
                      "contentHash": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Content hash recorded for the file content."
                      },
                      "filename": {
                        "type": [
                          "null",
                          "string"
                        ],
                        "description": "Suggested filename for downloads."
                      }
                    }
                  }
                }
              },
              "result": {
                "type": "object",
                "description": "Command-specific payload describing the work performed.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/CommandOutcomeEnvelope.json"
      },
      "def-28": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount receiving the directory."
          },
          "path": {
            "type": "string",
            "description": "Directory path to create."
          },
          "metadata": {
            "type": "object",
            "description": "Optional metadata assigned to the directory.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key to reuse previous results."
          }
        },
        "title": "https://filestore.apphub/schemas/CreateDirectoryRequest.json"
      },
      "def-29": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the node."
          },
          "path": {
            "type": "string",
            "description": "Path of the node to delete."
          },
          "recursive": {
            "type": "boolean",
            "description": "When true, delete directories and their contents."
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        },
        "title": "https://filestore.apphub/schemas/DeleteNodeRequest.json"
      },
      "def-30": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path",
          "targetPath"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the source node."
          },
          "path": {
            "type": "string",
            "description": "Source node path."
          },
          "targetPath": {
            "type": "string",
            "description": "Destination path for the node."
          },
          "targetBackendMountId": {
            "type": "integer",
            "description": "Alternate backend mount for cross-mount moves."
          },
          "overwrite": {
            "type": "boolean",
            "description": "When true, replace an existing node at the destination."
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        },
        "title": "https://filestore.apphub/schemas/MoveNodeRequest.json"
      },
      "def-31": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path",
          "targetPath"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the source node."
          },
          "path": {
            "type": "string",
            "description": "Source node path."
          },
          "targetPath": {
            "type": "string",
            "description": "Destination path for the copy."
          },
          "targetBackendMountId": {
            "type": "integer",
            "description": "Alternate backend mount for cross-mount copies."
          },
          "overwrite": {
            "type": "boolean",
            "description": "When true, replace an existing node at the destination."
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        },
        "title": "https://filestore.apphub/schemas/CopyNodeRequest.json"
      },
      "def-32": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the node."
          },
          "set": {
            "type": [
              "object",
              "null"
            ],
            "description": "Metadata entries to overwrite.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "unset": {
            "type": "array",
            "description": "Metadata keys to remove from the node.",
            "items": {
              "type": "string"
            }
          },
          "idempotencyKey": {
            "type": "string",
            "description": "Optional idempotency key."
          }
        },
        "title": "https://filestore.apphub/schemas/UpdateMetadataRequest.json"
      },
      "def-33": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "backendMountId",
          "path"
        ],
        "properties": {
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount containing the node to reconcile."
          },
          "path": {
            "type": "string",
            "description": "Path of the node to reconcile."
          },
          "nodeId": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Identifier of the node to reconcile."
          },
          "reason": {
            "type": "string",
            "enum": [
              "drift",
              "audit",
              "manual"
            ],
            "description": "Reason the reconciliation was requested."
          },
          "detectChildren": {
            "type": "boolean",
            "description": "When true, enqueue reconciliation jobs for child nodes."
          },
          "requestedHash": {
            "type": "boolean",
            "description": "When true, force hash recomputation for the node."
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationRequest.json"
      },
      "def-34": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "enqueued"
            ],
            "properties": {
              "enqueued": {
                "type": "boolean",
                "enum": [
                  true
                ],
                "description": "Indicates the reconciliation job was queued."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationEnqueueResponse.json"
      },
      "def-35": {
        "type": "object",
        "required": [
          "id",
          "jobKey",
          "backendMountId",
          "nodeId",
          "path",
          "reason",
          "status",
          "detectChildren",
          "requestedHash",
          "attempt",
          "result",
          "error",
          "enqueuedAt",
          "startedAt",
          "completedAt",
          "durationMs",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Identifier of the reconciliation job."
          },
          "jobKey": {
            "type": "string",
            "description": "Deterministic key used for idempotent job scheduling."
          },
          "backendMountId": {
            "type": "integer",
            "description": "Backend mount identifier associated with the job."
          },
          "nodeId": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Identifier of the node under reconciliation."
          },
          "path": {
            "type": "string",
            "description": "Path of the node under reconciliation."
          },
          "reason": {
            "type": "string",
            "enum": [
              "drift",
              "audit",
              "manual"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "queued",
              "running",
              "succeeded",
              "failed",
              "skipped",
              "cancelled"
            ]
          },
          "detectChildren": {
            "type": "boolean",
            "description": "Whether child reconciliation jobs were requested."
          },
          "requestedHash": {
            "type": "boolean",
            "description": "Whether a hash recalculation was requested."
          },
          "attempt": {
            "type": "integer",
            "description": "Attempt counter for the job."
          },
          "result": {
            "type": [
              "object",
              "null"
            ],
            "description": "Map of string keys to arbitrary JSON values.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "error": {
            "type": [
              "object",
              "null"
            ],
            "description": "Map of string keys to arbitrary JSON values.",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          "enqueuedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the job was enqueued."
          },
          "startedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp when the job started processing."
          },
          "completedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time",
            "description": "Timestamp when the job finished processing."
          },
          "durationMs": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Duration in milliseconds, when available."
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the job record was last updated."
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationJob.json"
      },
      "def-36": {
        "type": "object",
        "required": [
          "backendMountId",
          "path",
          "status"
        ],
        "properties": {
          "backendMountId": {
            "type": [
              "integer",
              "null"
            ],
            "description": "Backend mount filter applied to the query."
          },
          "path": {
            "type": [
              "string",
              "null"
            ],
            "description": "Path filter applied to the job listing."
          },
          "status": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "queued",
                "running",
                "succeeded",
                "failed",
                "skipped",
                "cancelled"
              ]
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationJobListFilters.json"
      },
      "def-37": {
        "type": "object",
        "required": [
          "jobs",
          "pagination",
          "filters"
        ],
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "jobKey",
                "backendMountId",
                "nodeId",
                "path",
                "reason",
                "status",
                "detectChildren",
                "requestedHash",
                "attempt",
                "result",
                "error",
                "enqueuedAt",
                "startedAt",
                "completedAt",
                "durationMs",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Identifier of the reconciliation job."
                },
                "jobKey": {
                  "type": "string",
                  "description": "Deterministic key used for idempotent job scheduling."
                },
                "backendMountId": {
                  "type": "integer",
                  "description": "Backend mount identifier associated with the job."
                },
                "nodeId": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Identifier of the node under reconciliation."
                },
                "path": {
                  "type": "string",
                  "description": "Path of the node under reconciliation."
                },
                "reason": {
                  "type": "string",
                  "enum": [
                    "drift",
                    "audit",
                    "manual"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "running",
                    "succeeded",
                    "failed",
                    "skipped",
                    "cancelled"
                  ]
                },
                "detectChildren": {
                  "type": "boolean",
                  "description": "Whether child reconciliation jobs were requested."
                },
                "requestedHash": {
                  "type": "boolean",
                  "description": "Whether a hash recalculation was requested."
                },
                "attempt": {
                  "type": "integer",
                  "description": "Attempt counter for the job."
                },
                "result": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Map of string keys to arbitrary JSON values.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "error": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Map of string keys to arbitrary JSON values.",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                "enqueuedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the job was enqueued."
                },
                "startedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp when the job started processing."
                },
                "completedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time",
                  "description": "Timestamp when the job finished processing."
                },
                "durationMs": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "description": "Duration in milliseconds, when available."
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Timestamp when the job record was last updated."
                }
              }
            }
          },
          "pagination": {
            "type": "object",
            "required": [
              "total",
              "limit",
              "offset",
              "nextOffset"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "description": "Total matching records."
              },
              "limit": {
                "type": "integer",
                "description": "Requested page size."
              },
              "offset": {
                "type": "integer",
                "description": "Current offset within the collection."
              },
              "nextOffset": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Next offset to request, if more data is available."
              }
            }
          },
          "filters": {
            "type": "object",
            "required": [
              "backendMountId",
              "path",
              "status"
            ],
            "properties": {
              "backendMountId": {
                "type": [
                  "integer",
                  "null"
                ],
                "description": "Backend mount filter applied to the query."
              },
              "path": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Path filter applied to the job listing."
              },
              "status": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "queued",
                    "running",
                    "succeeded",
                    "failed",
                    "skipped",
                    "cancelled"
                  ]
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationJobList.json"
      },
      "def-38": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "jobs",
              "pagination",
              "filters"
            ],
            "properties": {
              "jobs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "jobKey",
                    "backendMountId",
                    "nodeId",
                    "path",
                    "reason",
                    "status",
                    "detectChildren",
                    "requestedHash",
                    "attempt",
                    "result",
                    "error",
                    "enqueuedAt",
                    "startedAt",
                    "completedAt",
                    "durationMs",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Identifier of the reconciliation job."
                    },
                    "jobKey": {
                      "type": "string",
                      "description": "Deterministic key used for idempotent job scheduling."
                    },
                    "backendMountId": {
                      "type": "integer",
                      "description": "Backend mount identifier associated with the job."
                    },
                    "nodeId": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "description": "Identifier of the node under reconciliation."
                    },
                    "path": {
                      "type": "string",
                      "description": "Path of the node under reconciliation."
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "drift",
                        "audit",
                        "manual"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "skipped",
                        "cancelled"
                      ]
                    },
                    "detectChildren": {
                      "type": "boolean",
                      "description": "Whether child reconciliation jobs were requested."
                    },
                    "requestedHash": {
                      "type": "boolean",
                      "description": "Whether a hash recalculation was requested."
                    },
                    "attempt": {
                      "type": "integer",
                      "description": "Attempt counter for the job."
                    },
                    "result": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "description": "Map of string keys to arbitrary JSON values.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "error": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "description": "Map of string keys to arbitrary JSON values.",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    "enqueuedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the job was enqueued."
                    },
                    "startedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp when the job started processing."
                    },
                    "completedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time",
                      "description": "Timestamp when the job finished processing."
                    },
                    "durationMs": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "description": "Duration in milliseconds, when available."
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Timestamp when the job record was last updated."
                    }
                  }
                }
              },
              "pagination": {
                "type": "object",
                "required": [
                  "total",
                  "limit",
                  "offset",
                  "nextOffset"
                ],
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total matching records."
                  },
                  "limit": {
                    "type": "integer",
                    "description": "Requested page size."
                  },
                  "offset": {
                    "type": "integer",
                    "description": "Current offset within the collection."
                  },
                  "nextOffset": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Next offset to request, if more data is available."
                  }
                }
              },
              "filters": {
                "type": "object",
                "required": [
                  "backendMountId",
                  "path",
                  "status"
                ],
                "properties": {
                  "backendMountId": {
                    "type": [
                      "null",
                      "integer"
                    ],
                    "description": "Backend mount filter applied to the query."
                  },
                  "path": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Path filter applied to the job listing."
                  },
                  "status": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "queued",
                        "running",
                        "succeeded",
                        "failed",
                        "skipped",
                        "cancelled"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationJobListEnvelope.json"
      },
      "def-39": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "jobKey",
              "backendMountId",
              "nodeId",
              "path",
              "reason",
              "status",
              "detectChildren",
              "requestedHash",
              "attempt",
              "result",
              "error",
              "enqueuedAt",
              "startedAt",
              "completedAt",
              "durationMs",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "integer",
                "description": "Identifier of the reconciliation job."
              },
              "jobKey": {
                "type": "string",
                "description": "Deterministic key used for idempotent job scheduling."
              },
              "backendMountId": {
                "type": "integer",
                "description": "Backend mount identifier associated with the job."
              },
              "nodeId": {
                "type": [
                  "null",
                  "integer"
                ],
                "description": "Identifier of the node under reconciliation."
              },
              "path": {
                "type": "string",
                "description": "Path of the node under reconciliation."
              },
              "reason": {
                "type": "string",
                "enum": [
                  "drift",
                  "audit",
                  "manual"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "queued",
                  "running",
                  "succeeded",
                  "failed",
                  "skipped",
                  "cancelled"
                ]
              },
              "detectChildren": {
                "type": "boolean",
                "description": "Whether child reconciliation jobs were requested."
              },
              "requestedHash": {
                "type": "boolean",
                "description": "Whether a hash recalculation was requested."
              },
              "attempt": {
                "type": "integer",
                "description": "Attempt counter for the job."
              },
              "result": {
                "type": [
                  "null",
                  "object"
                ],
                "description": "Map of string keys to arbitrary JSON values.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "error": {
                "type": [
                  "null",
                  "object"
                ],
                "description": "Map of string keys to arbitrary JSON values.",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              "enqueuedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the job was enqueued."
              },
              "startedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Timestamp when the job started processing."
              },
              "completedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time",
                "description": "Timestamp when the job finished processing."
              },
              "durationMs": {
                "type": [
                  "null",
                  "integer"
                ],
                "description": "Duration in milliseconds, when available."
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the job record was last updated."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/ReconciliationJobEnvelope.json"
      },
      "def-40": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "url",
              "expiresAt",
              "headers",
              "method"
            ],
            "properties": {
              "url": {
                "type": "string",
                "description": "Presigned URL to download the file directly from the backend."
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when the presigned URL expires."
              },
              "headers": {
                "type": "object",
                "description": "HTTP headers that must be supplied when invoking the presigned URL.",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "method": {
                "type": "string",
                "description": "HTTP method to use for the presigned request."
              }
            }
          }
        },
        "title": "https://filestore.apphub/schemas/PresignedDownloadEnvelope.json"
      }
    }
  },
  "paths": {
    "/openapi.json": {
      "get": {
        "summary": "OpenAPI specification",
        "tags": [
          "System"
        ],
        "description": "Returns the generated OpenAPI document for the filestore service.",
        "responses": {
          "200": {
            "description": "The generated OpenAPI document.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Legacy health probe",
        "tags": [
          "System"
        ],
        "description": "Returns basic service health including event subsystem status.",
        "responses": {
          "200": {
            "description": "Service is reachable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-5"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Service health",
        "tags": [
          "System"
        ],
        "description": "Reports high-level health information for the filestore service.",
        "responses": {
          "200": {
            "description": "Service is reachable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-5"
                }
              }
            }
          }
        }
      }
    },
    "/readyz": {
      "get": {
        "summary": "Readiness probe",
        "tags": [
          "System"
        ],
        "description": "Performs dependency checks to ensure the service can accept requests.",
        "responses": {
          "200": {
            "description": "All dependencies are available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-6"
                }
              }
            }
          },
          "503": {
            "description": "One or more dependencies are unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-7"
                }
              }
            }
          }
        }
      }
    },
    "/ready": {
      "get": {
        "summary": "Readiness probe",
        "tags": [
          "System"
        ],
        "description": "Performs dependency checks to ensure the service can accept requests.",
        "responses": {
          "200": {
            "description": "All dependencies are available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-6"
                }
              }
            }
          },
          "503": {
            "description": "One or more dependencies are unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-7"
                }
              }
            }
          }
        }
      }
    },
    "/v1/backend-mounts": {
      "get": {
        "summary": "List backend mounts",
        "tags": [
          "Backend Mounts"
        ],
        "description": "Returns paginated backend mount records with optional filtering.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of mounts to return."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "Number of mounts to skip before collecting results."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "local",
                      "s3"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited backend kinds."
                }
              ]
            },
            "in": "query",
            "name": "kinds",
            "required": false,
            "description": "Limit results to specific backend implementations."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inactive",
                      "offline",
                      "degraded",
                      "error",
                      "unknown"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited backend states."
                }
              ]
            },
            "in": "query",
            "name": "states",
            "required": false,
            "description": "Filter mounts by lifecycle state."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "rw",
                      "ro"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited access modes."
                }
              ]
            },
            "in": "query",
            "name": "accessModes",
            "required": false,
            "description": "Restrict mounts to specific access modes."
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "query",
            "name": "search",
            "required": false,
            "description": "Full-text search applied to key, name, and description."
          }
        ],
        "responses": {
          "200": {
            "description": "Backend mounts matching the supplied filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-12"
                }
              }
            }
          },
          "400": {
            "description": "The supplied filters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while listing backend mounts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create backend mount",
        "tags": [
          "Backend Mounts"
        ],
        "description": "Registers a new backend mount for storing filestore data.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-13"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Backend mount created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-9"
                }
              }
            }
          },
          "400": {
            "description": "The supplied payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "403": {
            "description": "The caller lacks permission to create backend mounts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "A conflicting backend mount already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while creating the backend mount.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/backend-mounts/{id}": {
      "get": {
        "summary": "Retrieve backend mount",
        "tags": [
          "Backend Mounts"
        ],
        "description": "Returns a single backend mount by identifier.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the backend mount."
          }
        ],
        "responses": {
          "200": {
            "description": "Backend mount details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-9"
                }
              }
            }
          },
          "400": {
            "description": "Invalid backend mount identifier supplied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "Backend mount was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error retrieving the backend mount.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update backend mount",
        "tags": [
          "Backend Mounts"
        ],
        "description": "Applies partial updates to an existing backend mount.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-14"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the backend mount."
          }
        ],
        "responses": {
          "200": {
            "description": "Backend mount updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-9"
                }
              }
            }
          },
          "400": {
            "description": "The update payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "403": {
            "description": "The caller lacks permission to update backend mounts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "Backend mount not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "Requested update conflicts with the current backend state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while updating the backend mount.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files": {
      "post": {
        "summary": "Upload or replace file content",
        "tags": [
          "Files"
        ],
        "description": "Uploads file content to the filestore, optionally replacing an existing file when overwrite is enabled.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file",
                  "backendMountId",
                  "path"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary",
                    "description": "Binary payload for the file to upload."
                  },
                  "backendMountId": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Identifier of the backend mount receiving the file."
                  },
                  "path": {
                    "type": "string",
                    "description": "Path where the file will be stored."
                  },
                  "metadata": {
                    "type": "string",
                    "description": "Optional JSON object string containing metadata to assign to the file."
                  },
                  "overwrite": {
                    "type": "boolean",
                    "description": "When true, replaces existing file content at the target path."
                  },
                  "idempotencyKey": {
                    "type": "string",
                    "description": "Optional idempotency key for safely retrying the upload."
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "File upload accepted (idempotent replay).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "201": {
            "description": "File uploaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "400": {
            "description": "The upload request was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "A conflicting node prevented the upload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "415": {
            "description": "Multipart form data was not supplied.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "422": {
            "description": "Checksum or content hash mismatched the provided value.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred during upload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{id}/content": {
      "get": {
        "summary": "Download file content",
        "tags": [
          "Files"
        ],
        "description": "Streams stored file content. Supports HTTP range requests when metadata allows.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the file node to download."
          }
        ],
        "responses": {
          "200": {
            "description": "Entire file content streamed to the client.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "206": {
            "description": "Partial file content returned in response to a range request.",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "description": "The supplied identifier or range header was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "The requested file could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The target node does not represent a downloadable file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "416": {
            "description": "The requested byte range is invalid for the file.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while reading from the backend.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/files/{id}/presign": {
      "get": {
        "summary": "Create presigned download",
        "tags": [
          "Files"
        ],
        "description": "Generates a presigned URL that allows direct download from the backing storage.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 3600
            },
            "in": "query",
            "name": "expiresIn",
            "required": false,
            "description": "Requested TTL for the presigned URL in seconds."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the file node."
          }
        ],
        "responses": {
          "200": {
            "description": "Presigned URL generated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-40"
                }
              }
            }
          },
          "400": {
            "description": "The request parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "The requested file could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The node is not eligible for presigned downloads.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while generating the presigned URL.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/directories": {
      "post": {
        "summary": "Create directory",
        "tags": [
          "Nodes"
        ],
        "description": "Creates a new directory node within the specified backend mount.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-28"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Directory already existed and the request was idempotent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "201": {
            "description": "Directory created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "400": {
            "description": "The directory request payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The directory could not be created due to conflicts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while creating the directory.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes": {
      "delete": {
        "summary": "Delete node",
        "tags": [
          "Nodes"
        ],
        "description": "Deletes a node at the specified path, optionally cascading to children.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-29"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deletion command accepted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "400": {
            "description": "The delete request payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The node could not be deleted due to a conflict.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while deleting the node.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "List nodes",
        "tags": [
          "Nodes"
        ],
        "description": "Returns paginated nodes within a backend, supporting path, state, and advanced filters.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "backendMountId",
            "required": true,
            "description": "Identifier of the backend mount to inspect."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of nodes to return."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "Number of nodes to skip before collecting results."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "path",
            "required": false,
            "description": "Optional path prefix filter."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "maximum": 10
            },
            "in": "query",
            "name": "depth",
            "required": false,
            "description": "Depth relative to the provided path to include in results."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false,
            "description": "Full-text search term across node names and metadata."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing",
                      "deleted"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited list of node states."
                }
              ]
            },
            "in": "query",
            "name": "states",
            "required": false,
            "description": "Filter results to nodes in the specified states."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "file",
                      "directory"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited list of node kinds."
                }
              ]
            },
            "in": "query",
            "name": "kinds",
            "required": false,
            "description": "Restrict results to files or directories."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "driftOnly",
            "required": false,
            "description": "When true, returns only nodes flagged for drift."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filters",
            "required": false,
            "description": "JSON encoded advanced filter payload."
          }
        ],
        "responses": {
          "200": {
            "description": "Nodes matching the supplied filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-22"
                }
              }
            }
          },
          "400": {
            "description": "The query parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while listing nodes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes/move": {
      "post": {
        "summary": "Move node",
        "tags": [
          "Nodes"
        ],
        "description": "Moves a node to a new path, optionally across backend mounts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-30"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Move command completed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "400": {
            "description": "The move request payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The node could not be moved due to a conflict at the destination.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while moving the node.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes/copy": {
      "post": {
        "summary": "Copy node",
        "tags": [
          "Nodes"
        ],
        "description": "Copies a node to a new path, optionally across backend mounts.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-31"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Copy command completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "400": {
            "description": "The copy request payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The node could not be copied due to conflicts at the destination.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while copying the node.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes/{id}/metadata": {
      "patch": {
        "summary": "Update node metadata",
        "tags": [
          "Nodes"
        ],
        "description": "Sets or unsets metadata fields on an existing node.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-32"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the node."
          }
        ],
        "responses": {
          "200": {
            "description": "Metadata updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-27"
                }
              }
            }
          },
          "400": {
            "description": "The metadata update payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "409": {
            "description": "The metadata could not be updated due to conflicts.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while updating metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes/{id}/children": {
      "get": {
        "summary": "List child nodes",
        "tags": [
          "Nodes"
        ],
        "description": "Returns the immediate children for a directory node.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of children to return."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "Number of children to skip before collecting results."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "search",
            "required": false,
            "description": "Full-text search applied to child nodes."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "active",
                      "inconsistent",
                      "missing",
                      "deleted"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited list of node states."
                }
              ]
            },
            "in": "query",
            "name": "states",
            "required": false,
            "description": "Filter children by state."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "file",
                      "directory"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited list of node kinds."
                }
              ]
            },
            "in": "query",
            "name": "kinds",
            "required": false,
            "description": "Restrict children to files or directories."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "driftOnly",
            "required": false,
            "description": "When true, returns only children flagged for drift."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "filters",
            "required": false,
            "description": "JSON encoded advanced filter payload."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the parent node."
          }
        ],
        "responses": {
          "200": {
            "description": "Children for the requested node.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-24"
                }
              }
            }
          },
          "400": {
            "description": "The supplied parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "The parent node could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while listing child nodes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes/{id}": {
      "get": {
        "summary": "Retrieve node by id",
        "tags": [
          "Nodes"
        ],
        "description": "Returns the full metadata record for a node identified by its numeric identifier.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the node to retrieve."
          }
        ],
        "responses": {
          "200": {
            "description": "Node details matching the supplied identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-25"
                }
              }
            }
          },
          "400": {
            "description": "The supplied identifier was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "The node could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while retrieving the node.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/nodes/by-path": {
      "get": {
        "summary": "Retrieve node by path",
        "tags": [
          "Nodes"
        ],
        "description": "Returns node metadata for the given backend mount and normalized path.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "backendMountId",
            "required": true,
            "description": "Identifier of the backend mount containing the node."
          },
          {
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "in": "query",
            "name": "path",
            "required": true,
            "description": "Absolute path to the node within the backend mount."
          }
        ],
        "responses": {
          "200": {
            "description": "Node details for the specified path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-25"
                }
              }
            }
          },
          "400": {
            "description": "The supplied parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "No node exists at the requested path.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while resolving the node.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reconciliation": {
      "post": {
        "summary": "Enqueue reconciliation job",
        "tags": [
          "Reconciliation"
        ],
        "description": "Schedules a reconciliation job for the specified path and backend mount.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-33"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Reconciliation job accepted for processing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-34"
                }
              }
            }
          },
          "400": {
            "description": "The reconciliation request payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while enqueuing the reconciliation job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reconciliation/jobs": {
      "get": {
        "summary": "List reconciliation jobs",
        "tags": [
          "Reconciliation"
        ],
        "description": "Returns historical reconciliation jobs for auditing and monitoring.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "backendMountId",
            "required": false,
            "description": "Filter jobs by backend mount identifier."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "path",
            "required": false,
            "description": "Filter jobs by path prefix."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "queued",
                      "running",
                      "succeeded",
                      "failed",
                      "skipped",
                      "cancelled"
                    ]
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited list of job statuses."
                }
              ]
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Restrict results to jobs in the specified states."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200
            },
            "in": "query",
            "name": "limit",
            "required": false,
            "description": "Maximum number of jobs to return."
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false,
            "description": "Number of jobs to skip before collecting results."
          }
        ],
        "responses": {
          "200": {
            "description": "Reconciliation jobs matching the supplied filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-38"
                }
              }
            }
          },
          "400": {
            "description": "The reconciliation job query parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "403": {
            "description": "The caller lacks permission to inspect reconciliation jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while listing reconciliation jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/reconciliation/jobs/{id}": {
      "get": {
        "summary": "Retrieve reconciliation job",
        "tags": [
          "Reconciliation"
        ],
        "description": "Fetches a single reconciliation job by identifier.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Identifier of the reconciliation job."
          }
        ],
        "responses": {
          "200": {
            "description": "Reconciliation job details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-39"
                }
              }
            }
          },
          "400": {
            "description": "The supplied identifier was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "403": {
            "description": "The caller lacks permission to read reconciliation jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "404": {
            "description": "Reconciliation job not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while retrieving the reconciliation job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    },
    "/v1/events/stream": {
      "get": {
        "summary": "Stream filestore events",
        "tags": [
          "Events"
        ],
        "description": "Provides a server-sent events stream for filestore domain events.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "backendMountId",
            "required": false,
            "description": "Filter events to a specific backend mount."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "pathPrefix",
            "required": false,
            "description": "Restrict events to nodes under the specified path prefix."
          },
          {
            "schema": {
              "oneOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "string",
                  "description": "Comma-delimited list of event types (filestore.*)."
                }
              ]
            },
            "in": "query",
            "name": "events",
            "required": false,
            "description": "Filter by specific event types."
          }
        ],
        "responses": {
          "200": {
            "description": "Event stream connection established.",
            "content": {
              "text/event-stream": {
                "schema": {
                  "type": "string",
                  "description": "SSE stream payload."
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error occurred while streaming events.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-3"
                }
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:4300",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "System",
      "description": "Service health, readiness, and OpenAPI discovery endpoints."
    },
    {
      "name": "Backend Mounts",
      "description": "Management of filestore backend mounts."
    },
    {
      "name": "Files",
      "description": "Upload, download, and presign operations for stored files."
    },
    {
      "name": "Nodes",
      "description": "Structured access to filestore nodes and directories."
    },
    {
      "name": "Reconciliation",
      "description": "Queue and inspect filestore reconciliation jobs."
    },
    {
      "name": "Events",
      "description": "Streaming access to filestore domain events."
    }
  ]
}
