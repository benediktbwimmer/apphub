{
  "openapi": "3.0.3",
  "info": {
    "title": "Apphub Catalog API",
    "version": "1.0.0",
    "description": "HTTP API for indexing repositories, registering runtime services, and orchestrating automated jobs and workflows."
  },
  "components": {
    "schemas": {
      "JsonValue": {
        "description": "Arbitrary JSON value.",
        "nullable": true,
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "number"
          },
          {
            "type": "integer"
          },
          {
            "type": "boolean"
          },
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/def-0"
            }
          },
          {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/def-0"
            }
          }
        ]
      },
      "RepositoryTag": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Tag key."
          },
          "value": {
            "type": "string",
            "description": "Tag value."
          }
        }
      },
      "LaunchEnvVar": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Environment variable name."
          },
          "value": {
            "type": "string",
            "description": "Environment variable value."
          }
        }
      },
      "Build": {
        "type": "object",
        "required": [
          "id",
          "repositoryId",
          "status",
          "imageTag",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique build identifier."
          },
          "repositoryId": {
            "type": "string",
            "description": "Identifier of the source repository."
          },
          "status": {
            "type": "string",
            "description": "Current build status.",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled"
            ]
          },
          "imageTag": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "commitSha": {
            "type": "string",
            "nullable": true
          },
          "gitBranch": {
            "type": "string",
            "nullable": true
          },
          "gitRef": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "nullable": true
          },
          "logsPreview": {
            "type": "string",
            "nullable": true
          },
          "logsTruncated": {
            "type": "boolean"
          },
          "hasLogs": {
            "type": "boolean"
          },
          "logsSize": {
            "type": "integer",
            "description": "Size of the captured logs in bytes."
          }
        }
      },
      "Launch": {
        "type": "object",
        "required": [
          "id",
          "status",
          "buildId",
          "repositoryId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "starting",
              "running",
              "stopping",
              "stopped",
              "failed"
            ]
          },
          "buildId": {
            "type": "string",
            "nullable": true
          },
          "repositoryId": {
            "type": "string"
          },
          "instanceUrl": {
            "type": "string",
            "nullable": true
          },
          "resourceProfile": {
            "type": "string",
            "nullable": true
          },
          "env": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Environment variable name."
                },
                "value": {
                  "type": "string",
                  "description": "Environment variable value."
                }
              }
            },
            "description": "Environment variables used when starting the launch."
          },
          "command": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stoppedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "nullable": true
          },
          "internalPort": {
            "type": "integer",
            "nullable": true
          },
          "containerIp": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RepositoryPreview": {
        "type": "object",
        "required": [
          "id",
          "kind",
          "title",
          "description",
          "src",
          "embedUrl",
          "posterUrl",
          "width",
          "height",
          "sortOrder",
          "source"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "src": {
            "type": "string",
            "nullable": true
          },
          "embedUrl": {
            "type": "string",
            "nullable": true
          },
          "posterUrl": {
            "type": "string",
            "nullable": true
          },
          "width": {
            "type": "integer",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "RepositoryRelevanceComponent": {
        "type": "object",
        "required": [
          "hits",
          "score",
          "weight"
        ],
        "properties": {
          "hits": {
            "type": "integer"
          },
          "score": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          }
        }
      },
      "RepositoryRelevance": {
        "type": "object",
        "required": [
          "score",
          "normalizedScore",
          "components"
        ],
        "properties": {
          "score": {
            "type": "number"
          },
          "normalizedScore": {
            "type": "number"
          },
          "components": {
            "type": "object",
            "required": [
              "name",
              "description",
              "tags"
            ],
            "properties": {
              "name": {
                "type": "object",
                "required": [
                  "hits",
                  "score",
                  "weight"
                ],
                "properties": {
                  "hits": {
                    "type": "integer"
                  },
                  "score": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              },
              "description": {
                "type": "object",
                "required": [
                  "hits",
                  "score",
                  "weight"
                ],
                "properties": {
                  "hits": {
                    "type": "integer"
                  },
                  "score": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              },
              "tags": {
                "type": "object",
                "required": [
                  "hits",
                  "score",
                  "weight"
                ],
                "properties": {
                  "hits": {
                    "type": "integer"
                  },
                  "score": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "Repository": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoUrl",
          "dockerfilePath",
          "updatedAt",
          "ingestStatus",
          "ingestAttempts",
          "tags",
          "previewTiles",
          "launchEnvTemplates"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Repository identifier."
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "repoUrl": {
            "type": "string",
            "description": "Git or HTTP URL where the repository is hosted."
          },
          "dockerfilePath": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ingestStatus": {
            "type": "string",
            "enum": [
              "seed",
              "pending",
              "processing",
              "ready",
              "failed"
            ]
          },
          "ingestError": {
            "type": "string",
            "nullable": true
          },
          "ingestAttempts": {
            "type": "integer"
          },
          "latestBuild": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/def-3"
              },
              {
                "type": "null"
              }
            ]
          },
          "latestLaunch": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/def-4"
              },
              {
                "type": "null"
              }
            ]
          },
          "previewTiles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "kind",
                "title",
                "description",
                "src",
                "embedUrl",
                "posterUrl",
                "width",
                "height",
                "sortOrder",
                "source"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "title": {
                  "type": "string",
                  "nullable": true
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "src": {
                  "type": "string",
                  "nullable": true
                },
                "embedUrl": {
                  "type": "string",
                  "nullable": true
                },
                "posterUrl": {
                  "type": "string",
                  "nullable": true
                },
                "width": {
                  "type": "integer",
                  "nullable": true
                },
                "height": {
                  "type": "integer",
                  "nullable": true
                },
                "sortOrder": {
                  "type": "integer"
                },
                "source": {
                  "type": "string"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Tag key."
                },
                "value": {
                  "type": "string",
                  "description": "Tag value."
                }
              }
            }
          },
          "launchEnvTemplates": {
            "type": "array",
            "description": "Template environment variables suggested when launching the app.",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Environment variable name."
                },
                "value": {
                  "type": "string",
                  "description": "Environment variable value."
                }
              }
            }
          },
          "relevance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/def-7"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "RepositoryListResponse": {
        "type": "object",
        "required": [
          "data",
          "facets",
          "total",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "repoUrl",
                "dockerfilePath",
                "updatedAt",
                "ingestStatus",
                "ingestAttempts",
                "tags",
                "previewTiles",
                "launchEnvTemplates"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Repository identifier."
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "repoUrl": {
                  "type": "string",
                  "description": "Git or HTTP URL where the repository is hosted."
                },
                "dockerfilePath": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "ingestStatus": {
                  "type": "string",
                  "enum": [
                    "seed",
                    "pending",
                    "processing",
                    "ready",
                    "failed"
                  ]
                },
                "ingestError": {
                  "type": "string",
                  "nullable": true
                },
                "ingestAttempts": {
                  "type": "integer"
                },
                "latestBuild": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/def-3"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "latestLaunch": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/def-4"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "previewTiles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "kind",
                      "title",
                      "description",
                      "src",
                      "embedUrl",
                      "posterUrl",
                      "width",
                      "height",
                      "sortOrder",
                      "source"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string",
                        "nullable": true
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "src": {
                        "type": "string",
                        "nullable": true
                      },
                      "embedUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "posterUrl": {
                        "type": "string",
                        "nullable": true
                      },
                      "width": {
                        "type": "integer",
                        "nullable": true
                      },
                      "height": {
                        "type": "integer",
                        "nullable": true
                      },
                      "sortOrder": {
                        "type": "integer"
                      },
                      "source": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Tag key."
                      },
                      "value": {
                        "type": "string",
                        "description": "Tag value."
                      }
                    }
                  }
                },
                "launchEnvTemplates": {
                  "type": "array",
                  "description": "Template environment variables suggested when launching the app.",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Environment variable name."
                      },
                      "value": {
                        "type": "string",
                        "description": "Environment variable value."
                      }
                    }
                  }
                },
                "relevance": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/def-7"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "facets": {
            "type": "object",
            "required": [
              "tags",
              "statuses",
              "owners",
              "frameworks"
            ],
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value",
                    "count"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              },
              "statuses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "status",
                    "count"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "seed",
                        "pending",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              },
              "owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value",
                    "count"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              },
              "frameworks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value",
                    "count"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "meta": {
            "type": "object",
            "required": [
              "tokens",
              "sort",
              "weights"
            ],
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "sort": {
                "type": "string",
                "enum": [
                  "relevance",
                  "updated",
                  "name"
                ]
              },
              "weights": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "tags"
                ],
                "properties": {
                  "name": {
                    "type": "number"
                  },
                  "description": {
                    "type": "number"
                  },
                  "tags": {
                    "type": "number"
                  }
                }
              }
            }
          }
        }
      },
      "RepositoryResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "name",
              "description",
              "repoUrl",
              "dockerfilePath",
              "updatedAt",
              "ingestStatus",
              "ingestAttempts",
              "tags",
              "previewTiles",
              "launchEnvTemplates"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Repository identifier."
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "repoUrl": {
                "type": "string",
                "description": "Git or HTTP URL where the repository is hosted."
              },
              "dockerfilePath": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "ingestStatus": {
                "type": "string",
                "enum": [
                  "seed",
                  "pending",
                  "processing",
                  "ready",
                  "failed"
                ]
              },
              "ingestError": {
                "type": "string",
                "nullable": true
              },
              "ingestAttempts": {
                "type": "integer"
              },
              "latestBuild": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-3"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "latestLaunch": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-4"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "previewTiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "kind",
                    "title",
                    "description",
                    "src",
                    "embedUrl",
                    "posterUrl",
                    "width",
                    "height",
                    "sortOrder",
                    "source"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "src": {
                      "type": "string",
                      "nullable": true
                    },
                    "embedUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "posterUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "width": {
                      "type": "integer",
                      "nullable": true
                    },
                    "height": {
                      "type": "integer",
                      "nullable": true
                    },
                    "sortOrder": {
                      "type": "integer"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Tag key."
                    },
                    "value": {
                      "type": "string",
                      "description": "Tag value."
                    }
                  }
                }
              },
              "launchEnvTemplates": {
                "type": "array",
                "description": "Template environment variables suggested when launching the app.",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Environment variable name."
                    },
                    "value": {
                      "type": "string",
                      "description": "Environment variable value."
                    }
                  }
                }
              },
              "relevance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-7"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        }
      },
      "SavedCatalogSearch": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "searchInput",
          "statusFilters",
          "sort",
          "category",
          "config",
          "visibility",
          "appliedCount",
          "sharedCount",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Saved search identifier."
          },
          "slug": {
            "type": "string",
            "description": "Shareable slug referencing the saved search."
          },
          "name": {
            "type": "string",
            "description": "Human friendly label for the saved query."
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "searchInput": {
            "type": "string",
            "description": "Raw catalog search input as entered by the operator."
          },
          "statusFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "seed",
                "pending",
                "processing",
                "ready",
                "failed"
              ]
            },
            "description": "Selected ingest status filters applied when executing the saved search."
          },
          "sort": {
            "type": "string",
            "enum": [
              "relevance",
              "updated",
              "name"
            ],
            "description": "Preferred sort mode."
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private"
            ],
            "description": "Visibility of the saved search. Currently limited to private entries."
          },
          "appliedCount": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of times the saved search has been applied."
          },
          "sharedCount": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of share actions recorded for the saved search."
          },
          "lastAppliedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSharedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SavedCatalogSearchResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "searchInput",
              "statusFilters",
              "sort",
              "category",
              "config",
              "visibility",
              "appliedCount",
              "sharedCount",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Saved search identifier."
              },
              "slug": {
                "type": "string",
                "description": "Shareable slug referencing the saved search."
              },
              "name": {
                "type": "string",
                "description": "Human friendly label for the saved query."
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "searchInput": {
                "type": "string",
                "description": "Raw catalog search input as entered by the operator."
              },
              "statusFilters": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "seed",
                    "pending",
                    "processing",
                    "ready",
                    "failed"
                  ]
                },
                "description": "Selected ingest status filters applied when executing the saved search."
              },
              "sort": {
                "type": "string",
                "enum": [
                  "relevance",
                  "updated",
                  "name"
                ],
                "description": "Preferred sort mode."
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "private"
                ],
                "description": "Visibility of the saved search. Currently limited to private entries."
              },
              "appliedCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of times the saved search has been applied."
              },
              "sharedCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of share actions recorded for the saved search."
              },
              "lastAppliedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastSharedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "SavedCatalogSearchListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "searchInput",
                "statusFilters",
                "sort",
                "category",
                "config",
                "visibility",
                "appliedCount",
                "sharedCount",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Saved search identifier."
                },
                "slug": {
                  "type": "string",
                  "description": "Shareable slug referencing the saved search."
                },
                "name": {
                  "type": "string",
                  "description": "Human friendly label for the saved query."
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "searchInput": {
                  "type": "string",
                  "description": "Raw catalog search input as entered by the operator."
                },
                "statusFilters": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "seed",
                      "pending",
                      "processing",
                      "ready",
                      "failed"
                    ]
                  },
                  "description": "Selected ingest status filters applied when executing the saved search."
                },
                "sort": {
                  "type": "string",
                  "enum": [
                    "relevance",
                    "updated",
                    "name"
                  ],
                  "description": "Preferred sort mode."
                },
                "visibility": {
                  "type": "string",
                  "enum": [
                    "private"
                  ],
                  "description": "Visibility of the saved search. Currently limited to private entries."
                },
                "appliedCount": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of times the saved search has been applied."
                },
                "sharedCount": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of share actions recorded for the saved search."
                },
                "lastAppliedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastSharedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "SavedCatalogSearchCreateRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "searchInput": {
            "type": "string",
            "maxLength": 500
          },
          "statusFilters": {
            "type": "array",
            "maxItems": 50,
            "items": {
              "type": "string"
            },
            "description": "Selected status filters applied when executing the saved search."
          },
          "sort": {
            "type": "string",
            "maxLength": 100,
            "description": "Preferred sort mode for rendering results."
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "description": "Logical grouping for the saved search (e.g. catalog, runs)."
          },
          "config": {
            "type": "object",
            "additionalProperties": true,
            "description": "Structured configuration used to rehydrate saved filters."
          }
        }
      },
      "SavedCatalogSearchUpdateRequest": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 100
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "searchInput": {
                "type": "string",
                "maxLength": 500
              },
              "statusFilters": {
                "type": "array",
                "maxItems": 50,
                "items": {
                  "type": "string"
                },
                "description": "Selected status filters applied when executing the saved search."
              },
              "sort": {
                "type": "string",
                "maxLength": 100,
                "description": "Preferred sort mode for rendering results."
              },
              "category": {
                "type": "string",
                "maxLength": 100,
                "description": "Logical grouping for the saved search (e.g. catalog, runs)."
              },
              "config": {
                "type": "object",
                "additionalProperties": true,
                "description": "Structured configuration used to rehydrate saved filters."
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "EventSavedViewFilters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "maxLength": 200
          },
          "source": {
            "type": "string",
            "maxLength": 200
          },
          "correlationId": {
            "type": "string",
            "maxLength": 200
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "jsonPath": {
            "type": "string",
            "maxLength": 500
          },
          "severity": {
            "type": "array",
            "maxItems": 5,
            "items": {
              "type": "string",
              "enum": [
                "critical",
                "error",
                "warning",
                "info",
                "debug"
              ]
            }
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200
          }
        }
      },
      "EventSavedViewAnalytics": {
        "type": "object",
        "required": [
          "windowSeconds",
          "totalEvents",
          "errorEvents",
          "eventRatePerMinute",
          "errorRatio",
          "generatedAt",
          "sampledCount",
          "sampleLimit",
          "truncated"
        ],
        "properties": {
          "windowSeconds": {
            "type": "integer",
            "minimum": 60
          },
          "totalEvents": {
            "type": "integer",
            "minimum": 0
          },
          "errorEvents": {
            "type": "integer",
            "minimum": 0
          },
          "eventRatePerMinute": {
            "type": "number",
            "minimum": 0
          },
          "errorRatio": {
            "type": "number",
            "minimum": 0
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sampledCount": {
            "type": "integer",
            "minimum": 0
          },
          "sampleLimit": {
            "type": "integer",
            "minimum": 1
          },
          "truncated": {
            "type": "boolean"
          }
        }
      },
      "EventSavedView": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "filters",
          "visibility",
          "appliedCount",
          "sharedCount",
          "createdAt",
          "updatedAt",
          "owner"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Saved view identifier."
          },
          "slug": {
            "type": "string",
            "description": "Slug used to reference the saved view."
          },
          "name": {
            "type": "string",
            "description": "Display name for the saved view."
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "maxLength": 200
              },
              "source": {
                "type": "string",
                "maxLength": 200
              },
              "correlationId": {
                "type": "string",
                "maxLength": 200
              },
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "jsonPath": {
                "type": "string",
                "maxLength": 500
              },
              "severity": {
                "type": "array",
                "maxItems": 5,
                "items": {
                  "type": "string",
                  "enum": [
                    "critical",
                    "error",
                    "warning",
                    "info",
                    "debug"
                  ]
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 200
              }
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "shared"
            ]
          },
          "appliedCount": {
            "type": "integer",
            "minimum": 0
          },
          "sharedCount": {
            "type": "integer",
            "minimum": 0
          },
          "lastAppliedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastSharedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "type": "object",
            "required": [
              "key",
              "subject",
              "kind"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "user",
                  "service"
                ]
              },
              "userId": {
                "type": "string",
                "nullable": true
              }
            }
          },
          "analytics": {
            "type": "object",
            "required": [
              "windowSeconds",
              "totalEvents",
              "errorEvents",
              "eventRatePerMinute",
              "errorRatio",
              "generatedAt",
              "sampledCount",
              "sampleLimit",
              "truncated"
            ],
            "properties": {
              "windowSeconds": {
                "type": "integer",
                "minimum": 60
              },
              "totalEvents": {
                "type": "integer",
                "minimum": 0
              },
              "errorEvents": {
                "type": "integer",
                "minimum": 0
              },
              "eventRatePerMinute": {
                "type": "number",
                "minimum": 0
              },
              "errorRatio": {
                "type": "number",
                "minimum": 0
              },
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "sampledCount": {
                "type": "integer",
                "minimum": 0
              },
              "sampleLimit": {
                "type": "integer",
                "minimum": 1
              },
              "truncated": {
                "type": "boolean"
              }
            },
            "nullable": true
          }
        }
      },
      "EventSavedViewResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "filters",
              "visibility",
              "appliedCount",
              "sharedCount",
              "createdAt",
              "updatedAt",
              "owner"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Saved view identifier."
              },
              "slug": {
                "type": "string",
                "description": "Slug used to reference the saved view."
              },
              "name": {
                "type": "string",
                "description": "Display name for the saved view."
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "filters": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "source": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "correlationId": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "from": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "jsonPath": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "severity": {
                    "type": "array",
                    "maxItems": 5,
                    "items": {
                      "type": "string",
                      "enum": [
                        "critical",
                        "error",
                        "warning",
                        "info",
                        "debug"
                      ]
                    }
                  },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 200
                  }
                }
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "private",
                  "shared"
                ]
              },
              "appliedCount": {
                "type": "integer",
                "minimum": 0
              },
              "sharedCount": {
                "type": "integer",
                "minimum": 0
              },
              "lastAppliedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "lastSharedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "owner": {
                "type": "object",
                "required": [
                  "key",
                  "subject",
                  "kind"
                ],
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string",
                    "enum": [
                      "user",
                      "service"
                    ]
                  },
                  "userId": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "analytics": {
                "type": "object",
                "required": [
                  "windowSeconds",
                  "totalEvents",
                  "errorEvents",
                  "eventRatePerMinute",
                  "errorRatio",
                  "generatedAt",
                  "sampledCount",
                  "sampleLimit",
                  "truncated"
                ],
                "properties": {
                  "windowSeconds": {
                    "type": "integer",
                    "minimum": 60
                  },
                  "totalEvents": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "errorEvents": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "eventRatePerMinute": {
                    "type": "number",
                    "minimum": 0
                  },
                  "errorRatio": {
                    "type": "number",
                    "minimum": 0
                  },
                  "generatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "sampledCount": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "sampleLimit": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "truncated": {
                    "type": "boolean"
                  }
                },
                "nullable": true
              }
            }
          }
        }
      },
      "EventSavedViewListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "filters",
                "visibility",
                "appliedCount",
                "sharedCount",
                "createdAt",
                "updatedAt",
                "owner"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Saved view identifier."
                },
                "slug": {
                  "type": "string",
                  "description": "Slug used to reference the saved view."
                },
                "name": {
                  "type": "string",
                  "description": "Display name for the saved view."
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "filters": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "source": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "correlationId": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "jsonPath": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "severity": {
                      "type": "array",
                      "maxItems": 5,
                      "items": {
                        "type": "string",
                        "enum": [
                          "critical",
                          "error",
                          "warning",
                          "info",
                          "debug"
                        ]
                      }
                    },
                    "limit": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 200
                    }
                  }
                },
                "visibility": {
                  "type": "string",
                  "enum": [
                    "private",
                    "shared"
                  ]
                },
                "appliedCount": {
                  "type": "integer",
                  "minimum": 0
                },
                "sharedCount": {
                  "type": "integer",
                  "minimum": 0
                },
                "lastAppliedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "lastSharedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "owner": {
                  "type": "object",
                  "required": [
                    "key",
                    "subject",
                    "kind"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "user",
                        "service"
                      ]
                    },
                    "userId": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                "analytics": {
                  "type": "object",
                  "required": [
                    "windowSeconds",
                    "totalEvents",
                    "errorEvents",
                    "eventRatePerMinute",
                    "errorRatio",
                    "generatedAt",
                    "sampledCount",
                    "sampleLimit",
                    "truncated"
                  ],
                  "properties": {
                    "windowSeconds": {
                      "type": "integer",
                      "minimum": 60
                    },
                    "totalEvents": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "errorEvents": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "eventRatePerMinute": {
                      "type": "number",
                      "minimum": 0
                    },
                    "errorRatio": {
                      "type": "number",
                      "minimum": 0
                    },
                    "generatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sampledCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "sampleLimit": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "truncated": {
                      "type": "boolean"
                    }
                  },
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "EventSavedViewCreateRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "maxLength": 200
              },
              "source": {
                "type": "string",
                "maxLength": 200
              },
              "correlationId": {
                "type": "string",
                "maxLength": 200
              },
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "jsonPath": {
                "type": "string",
                "maxLength": 500
              },
              "severity": {
                "type": "array",
                "maxItems": 5,
                "items": {
                  "type": "string",
                  "enum": [
                    "critical",
                    "error",
                    "warning",
                    "info",
                    "debug"
                  ]
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 200
              }
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "shared"
            ]
          }
        },
        "additionalProperties": false
      },
      "EventSavedViewUpdateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "maxLength": 200
              },
              "source": {
                "type": "string",
                "maxLength": 200
              },
              "correlationId": {
                "type": "string",
                "maxLength": 200
              },
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "jsonPath": {
                "type": "string",
                "maxLength": 500
              },
              "severity": {
                "type": "array",
                "maxItems": 5,
                "items": {
                  "type": "string",
                  "enum": [
                    "critical",
                    "error",
                    "warning",
                    "info",
                    "debug"
                  ]
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 200
              }
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "shared"
            ]
          }
        },
        "additionalProperties": false
      },
      "OperatorIdentity": {
        "type": "object",
        "required": [
          "subject",
          "kind",
          "scopes"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "description": "Identifier for the authenticated principal (user email, service name, or token subject)."
          },
          "kind": {
            "type": "string",
            "description": "Identity classification.",
            "enum": [
              "user",
              "service"
            ]
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Granted operator scopes."
          },
          "userId": {
            "type": "string",
            "nullable": true
          },
          "sessionId": {
            "type": "string",
            "nullable": true
          },
          "apiKeyId": {
            "type": "string",
            "nullable": true
          },
          "authDisabled": {
            "type": "boolean",
            "description": "Indicates that the server is running with authentication disabled for local development."
          },
          "displayName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Role slugs assigned to the identity."
          }
        }
      },
      "IdentityResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/def-23"
          }
        }
      },
      "RepositoryCreateRequest": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoUrl",
          "dockerfilePath"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Lowercase identifier for the app (letters, numbers, and dashes).",
            "pattern": "^[a-z][a-z0-9-]{2,63}$",
            "minLength": 3,
            "maxLength": 64
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the app."
          },
          "description": {
            "type": "string",
            "description": "Short description that appears in the catalog."
          },
          "repoUrl": {
            "type": "string",
            "description": "Location of the repository. Supports git, HTTP(S), and absolute filesystem paths."
          },
          "dockerfilePath": {
            "type": "string",
            "description": "Repository-relative path to the Dockerfile (e.g. services/api/Dockerfile).",
            "pattern": "Dockerfile(.[^/]+)?$"
          },
          "tags": {
            "type": "array",
            "description": "Optional tags to associate with the repository.",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Tag key."
                },
                "value": {
                  "type": "string",
                  "description": "Tag value."
                }
              }
            },
            "default": []
          }
        }
      },
      "TagFacet": {
        "type": "object",
        "required": [
          "key",
          "value",
          "count"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "StatusFacet": {
        "type": "object",
        "required": [
          "status",
          "count"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "seed",
              "pending",
              "processing",
              "ready",
              "failed"
            ]
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        }
      },
      "ServiceManifestMetadata": {
        "type": "object",
        "description": "Metadata sourced from service manifests and configuration files.",
        "properties": {
          "source": {
            "type": "string",
            "nullable": true,
            "description": "Location of the manifest entry that populated this service."
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All manifest files that contributed to this service definition."
          },
          "baseUrlSource": {
            "type": "string",
            "enum": [
              "manifest",
              "runtime",
              "config"
            ],
            "nullable": true,
            "description": "Whether the manifest, runtime state, or config file selected the effective base URL."
          },
          "openapiPath": {
            "type": "string",
            "nullable": true
          },
          "healthEndpoint": {
            "type": "string",
            "nullable": true
          },
          "workingDir": {
            "type": "string",
            "nullable": true
          },
          "devCommand": {
            "type": "string",
            "nullable": true
          },
          "env": {
            "description": "Environment variables declared for the service in manifests, including placeholder metadata.",
            "nullable": true,
            "allOf": [
              {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              }
            ]
          },
          "apps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IDs of apps that are linked to this service through service networks.",
            "nullable": true
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when this manifest version was applied."
          }
        },
        "additionalProperties": false
      },
      "ServiceRuntimeMetadata": {
        "type": "object",
        "description": "Runtime details gathered from the containerized app connected to the service.",
        "properties": {
          "repositoryId": {
            "type": "string",
            "description": "Repository ID providing the runtime implementation."
          },
          "launchId": {
            "type": "string",
            "nullable": true
          },
          "instanceUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "baseUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "previewUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "host": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "nullable": true
          },
          "containerIp": {
            "type": "string",
            "nullable": true
          },
          "containerPort": {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535,
            "nullable": true
          },
          "containerBaseUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true,
            "description": "Origin of the runtime snapshot (for example, service-network synchronizer)."
          },
          "status": {
            "type": "string",
            "enum": [
              "running",
              "stopped"
            ],
            "nullable": true
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ServiceMetadata": {
        "type": "object",
        "description": "Structured metadata describing how a service is sourced, linked, and executed.",
        "properties": {
          "resourceType": {
            "type": "string",
            "enum": [
              "service"
            ],
            "description": "Discriminator indicating this metadata payload represents a service resource."
          },
          "manifest": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/def-28"
              }
            ]
          },
          "config": {
            "nullable": true,
            "allOf": [
              {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              }
            ],
            "description": "Raw metadata block forwarded from manifests or config files."
          },
          "runtime": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/def-29"
              }
            ]
          },
          "linkedApps": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Explicit list of app IDs linked to this service beyond manifest hints."
          },
          "notes": {
            "type": "string",
            "maxLength": 2000,
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Service": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "displayName",
          "kind",
          "baseUrl",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": [
              "unknown",
              "healthy",
              "degraded",
              "unreachable"
            ]
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "capabilities": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "metadata": {
            "type": "object",
            "description": "Structured metadata describing how a service is sourced, linked, and executed.",
            "properties": {
              "resourceType": {
                "type": "string",
                "enum": [
                  "service"
                ],
                "description": "Discriminator indicating this metadata payload represents a service resource."
              },
              "manifest": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/def-28"
                  }
                ]
              },
              "config": {
                "nullable": true,
                "allOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  }
                ],
                "description": "Raw metadata block forwarded from manifests or config files."
              },
              "runtime": {
                "nullable": true,
                "allOf": [
                  {
                    "$ref": "#/components/schemas/def-29"
                  }
                ]
              },
              "linkedApps": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true,
                "description": "Explicit list of app IDs linked to this service beyond manifest hints."
              },
              "notes": {
                "type": "string",
                "maxLength": 2000,
                "nullable": true
              }
            },
            "additionalProperties": false,
            "nullable": true
          },
          "openapi": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "lastHealthyAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "health": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "unknown",
                  "healthy",
                  "degraded",
                  "unreachable"
                ]
              },
              "statusMessage": {
                "type": "string",
                "nullable": true
              },
              "checkedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "latencyMs": {
                "type": "integer",
                "nullable": true
              },
              "statusCode": {
                "type": "integer",
                "nullable": true
              },
              "baseUrl": {
                "type": "string",
                "nullable": true
              },
              "healthEndpoint": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          }
        }
      },
      "ServiceListResponse": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "displayName",
                "kind",
                "baseUrl",
                "status",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "baseUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "unknown",
                    "healthy",
                    "degraded",
                    "unreachable"
                  ]
                },
                "statusMessage": {
                  "type": "string",
                  "nullable": true
                },
                "capabilities": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "metadata": {
                  "type": "object",
                  "description": "Structured metadata describing how a service is sourced, linked, and executed.",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "service"
                      ],
                      "description": "Discriminator indicating this metadata payload represents a service resource."
                    },
                    "manifest": {
                      "nullable": true,
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/def-28"
                        }
                      ]
                    },
                    "config": {
                      "nullable": true,
                      "allOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        }
                      ],
                      "description": "Raw metadata block forwarded from manifests or config files."
                    },
                    "runtime": {
                      "nullable": true,
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/def-29"
                        }
                      ]
                    },
                    "linkedApps": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "nullable": true,
                      "description": "Explicit list of app IDs linked to this service beyond manifest hints."
                    },
                    "notes": {
                      "type": "string",
                      "maxLength": 2000,
                      "nullable": true
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                },
                "openapi": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "lastHealthyAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "health": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "unknown",
                        "healthy",
                        "degraded",
                        "unreachable"
                      ]
                    },
                    "statusMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "checkedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "latencyMs": {
                      "type": "integer",
                      "nullable": true
                    },
                    "statusCode": {
                      "type": "integer",
                      "nullable": true
                    },
                    "baseUrl": {
                      "type": "string",
                      "nullable": true
                    },
                    "healthEndpoint": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "nullable": true
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "total",
              "healthyCount",
              "unhealthyCount"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "minimum": 0
              },
              "healthyCount": {
                "type": "integer",
                "minimum": 0
              },
              "unhealthyCount": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        }
      },
      "ServiceResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "displayName",
              "kind",
              "baseUrl",
              "status",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              },
              "baseUrl": {
                "type": "string",
                "format": "uri"
              },
              "status": {
                "type": "string",
                "enum": [
                  "unknown",
                  "healthy",
                  "degraded",
                  "unreachable"
                ]
              },
              "statusMessage": {
                "type": "string",
                "nullable": true
              },
              "capabilities": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "metadata": {
                "type": "object",
                "description": "Structured metadata describing how a service is sourced, linked, and executed.",
                "properties": {
                  "resourceType": {
                    "type": "string",
                    "enum": [
                      "service"
                    ],
                    "description": "Discriminator indicating this metadata payload represents a service resource."
                  },
                  "manifest": {
                    "nullable": true,
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/def-28"
                      }
                    ]
                  },
                  "config": {
                    "nullable": true,
                    "allOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      }
                    ],
                    "description": "Raw metadata block forwarded from manifests or config files."
                  },
                  "runtime": {
                    "nullable": true,
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/def-29"
                      }
                    ]
                  },
                  "linkedApps": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true,
                    "description": "Explicit list of app IDs linked to this service beyond manifest hints."
                  },
                  "notes": {
                    "type": "string",
                    "maxLength": 2000,
                    "nullable": true
                  }
                },
                "additionalProperties": false,
                "nullable": true
              },
              "openapi": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "lastHealthyAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "health": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "unknown",
                      "healthy",
                      "degraded",
                      "unreachable"
                    ]
                  },
                  "statusMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "checkedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "latencyMs": {
                    "type": "integer",
                    "nullable": true
                  },
                  "statusCode": {
                    "type": "integer",
                    "nullable": true
                  },
                  "baseUrl": {
                    "type": "string",
                    "nullable": true
                  },
                  "healthEndpoint": {
                    "type": "string",
                    "nullable": true
                  }
                },
                "nullable": true
              }
            }
          }
        }
      },
      "ServiceRegistrationRequest": {
        "type": "object",
        "required": [
          "slug",
          "displayName",
          "kind",
          "baseUrl"
        ],
        "properties": {
          "slug": {
            "type": "string",
            "description": "Unique identifier for the service."
          },
          "displayName": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "description": "Service kind or integration type."
          },
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": [
              "unknown",
              "healthy",
              "degraded",
              "unreachable"
            ]
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "capabilities": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "metadata": {
            "nullable": true,
            "allOf": [
              {
                "$ref": "#/components/schemas/def-30"
              }
            ],
            "description": "Optional metadata describing manifest provenance, linked apps, and runtime expectations."
          }
        }
      },
      "JobRetryPolicy": {
        "type": "object",
        "properties": {
          "maxAttempts": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "strategy": {
            "type": "string",
            "enum": [
              "none",
              "fixed",
              "exponential"
            ]
          },
          "initialDelayMs": {
            "type": "integer",
            "minimum": 0,
            "maximum": 86400000
          },
          "maxDelayMs": {
            "type": "integer",
            "minimum": 0,
            "maximum": 86400000
          },
          "jitter": {
            "type": "string",
            "enum": [
              "none",
              "full",
              "equal"
            ]
          }
        }
      },
      "JobDefinition": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "version",
          "type",
          "runtime",
          "entryPoint",
          "parametersSchema",
          "defaultParameters",
          "outputSchema",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "batch",
              "service-triggered",
              "manual"
            ]
          },
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ]
          },
          "entryPoint": {
            "type": "string"
          },
          "parametersSchema": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "defaultParameters": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "outputSchema": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "timeoutMs": {
            "type": "integer",
            "nullable": true
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            },
            "nullable": true
          },
          "metadata": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JobDefinitionCreateRequest": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "type",
          "entryPoint"
        ],
        "properties": {
          "slug": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$",
            "minLength": 1,
            "maxLength": 100
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "batch",
              "service-triggered",
              "manual"
            ]
          },
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ],
            "default": "node"
          },
          "entryPoint": {
            "type": "string"
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "parametersSchema": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "defaultParameters": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "outputSchema": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "metadata": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "JobDefinitionUpdateRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "batch",
              "service-triggered",
              "manual"
            ]
          },
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ]
          },
          "entryPoint": {
            "type": "string"
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "parametersSchema": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "defaultParameters": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "outputSchema": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "metadata": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "JobDefinitionResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "version",
              "type",
              "runtime",
              "entryPoint",
              "parametersSchema",
              "defaultParameters",
              "outputSchema",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "string",
                "enum": [
                  "batch",
                  "service-triggered",
                  "manual"
                ]
              },
              "runtime": {
                "type": "string",
                "enum": [
                  "node",
                  "python",
                  "docker"
                ]
              },
              "entryPoint": {
                "type": "string"
              },
              "parametersSchema": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "defaultParameters": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "outputSchema": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "timeoutMs": {
                "type": "integer",
                "nullable": true
              },
              "retryPolicy": {
                "type": "object",
                "properties": {
                  "maxAttempts": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "none",
                      "fixed",
                      "exponential"
                    ]
                  },
                  "initialDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "maxDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "jitter": {
                    "type": "string",
                    "enum": [
                      "none",
                      "full",
                      "equal"
                    ]
                  }
                },
                "nullable": true
              },
              "metadata": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "JobDefinitionListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "version",
                "type",
                "runtime",
                "entryPoint",
                "parametersSchema",
                "defaultParameters",
                "outputSchema",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "integer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "batch",
                    "service-triggered",
                    "manual"
                  ]
                },
                "runtime": {
                  "type": "string",
                  "enum": [
                    "node",
                    "python",
                    "docker"
                  ]
                },
                "entryPoint": {
                  "type": "string"
                },
                "parametersSchema": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "defaultParameters": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "outputSchema": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "timeoutMs": {
                  "type": "integer",
                  "nullable": true
                },
                "retryPolicy": {
                  "type": "object",
                  "properties": {
                    "maxAttempts": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10
                    },
                    "strategy": {
                      "type": "string",
                      "enum": [
                        "none",
                        "fixed",
                        "exponential"
                      ]
                    },
                    "initialDelayMs": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 86400000
                    },
                    "maxDelayMs": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 86400000
                    },
                    "jitter": {
                      "type": "string",
                      "enum": [
                        "none",
                        "full",
                        "equal"
                      ]
                    }
                  },
                  "nullable": true
                },
                "metadata": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "JobRun": {
        "type": "object",
        "required": [
          "id",
          "jobDefinitionId",
          "status",
          "parameters",
          "result",
          "context",
          "metrics",
          "attempt",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "jobDefinitionId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled",
              "expired"
            ]
          },
          "parameters": {
            "$ref": "#/components/schemas/def-0"
          },
          "result": {
            "$ref": "#/components/schemas/def-0"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "logsUrl": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "metrics": {
            "$ref": "#/components/schemas/def-0"
          },
          "context": {
            "$ref": "#/components/schemas/def-0"
          },
          "timeoutMs": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "attempt": {
            "type": "integer",
            "minimum": 1
          },
          "maxAttempts": {
            "type": "integer",
            "nullable": true,
            "minimum": 1
          },
          "durationMs": {
            "type": "integer",
            "nullable": true,
            "minimum": 0
          },
          "scheduledAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "JobRunWithDefinition": {
        "type": "object",
        "required": [
          "run",
          "job"
        ],
        "properties": {
          "run": {
            "type": "object",
            "required": [
              "id",
              "jobDefinitionId",
              "status",
              "parameters",
              "result",
              "context",
              "metrics",
              "attempt",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "jobDefinitionId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "running",
                  "succeeded",
                  "failed",
                  "canceled",
                  "expired"
                ]
              },
              "parameters": {
                "$ref": "#/components/schemas/def-0"
              },
              "result": {
                "$ref": "#/components/schemas/def-0"
              },
              "errorMessage": {
                "type": "string",
                "nullable": true
              },
              "logsUrl": {
                "type": "string",
                "format": "uri",
                "nullable": true
              },
              "metrics": {
                "$ref": "#/components/schemas/def-0"
              },
              "context": {
                "$ref": "#/components/schemas/def-0"
              },
              "timeoutMs": {
                "type": "integer",
                "nullable": true,
                "minimum": 0
              },
              "attempt": {
                "type": "integer",
                "minimum": 1
              },
              "maxAttempts": {
                "type": "integer",
                "nullable": true,
                "minimum": 1
              },
              "durationMs": {
                "type": "integer",
                "nullable": true,
                "minimum": 0
              },
              "scheduledAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "startedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "completedAt": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "job": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "version",
              "type",
              "runtime"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "integer",
                "minimum": 1
              },
              "type": {
                "type": "string",
                "enum": [
                  "batch",
                  "service-triggered",
                  "manual"
                ]
              },
              "runtime": {
                "type": "string",
                "enum": [
                  "node",
                  "python",
                  "docker"
                ]
              }
            }
          }
        }
      },
      "JobRunListResponse": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "run",
                "job"
              ],
              "properties": {
                "run": {
                  "type": "object",
                  "required": [
                    "id",
                    "jobDefinitionId",
                    "status",
                    "parameters",
                    "result",
                    "context",
                    "metrics",
                    "attempt",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jobDefinitionId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "succeeded",
                        "failed",
                        "canceled",
                        "expired"
                      ]
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "result": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "logsUrl": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true
                    },
                    "metrics": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "context": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "timeoutMs": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 0
                    },
                    "attempt": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "maxAttempts": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 1
                    },
                    "durationMs": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 0
                    },
                    "scheduledAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "job": {
                  "type": "object",
                  "required": [
                    "id",
                    "slug",
                    "name",
                    "version",
                    "type",
                    "runtime"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "batch",
                        "service-triggered",
                        "manual"
                      ]
                    },
                    "runtime": {
                      "type": "string",
                      "enum": [
                        "node",
                        "python",
                        "docker"
                      ]
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "limit",
              "offset",
              "hasMore",
              "nextOffset"
            ],
            "properties": {
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              },
              "hasMore": {
                "type": "boolean"
              },
              "nextOffset": {
                "type": "integer",
                "nullable": true,
                "minimum": 0
              }
            }
          }
        }
      },
      "JobDetailResponse": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "job",
              "runs"
            ],
            "properties": {
              "job": {
                "type": "object",
                "required": [
                  "id",
                  "slug",
                  "name",
                  "version",
                  "type",
                  "runtime",
                  "entryPoint",
                  "parametersSchema",
                  "defaultParameters",
                  "outputSchema",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "batch",
                      "service-triggered",
                      "manual"
                    ]
                  },
                  "runtime": {
                    "type": "string",
                    "enum": [
                      "node",
                      "python",
                      "docker"
                    ]
                  },
                  "entryPoint": {
                    "type": "string"
                  },
                  "parametersSchema": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "defaultParameters": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "outputSchema": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": "integer",
                    "nullable": true
                  },
                  "retryPolicy": {
                    "type": "object",
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "runs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "jobDefinitionId",
                    "status",
                    "parameters",
                    "result",
                    "context",
                    "metrics",
                    "attempt",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jobDefinitionId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "succeeded",
                        "failed",
                        "canceled",
                        "expired"
                      ]
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "result": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "errorMessage": {
                      "type": "string",
                      "nullable": true
                    },
                    "logsUrl": {
                      "type": "string",
                      "format": "uri",
                      "nullable": true
                    },
                    "metrics": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "context": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "timeoutMs": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 0
                    },
                    "attempt": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "maxAttempts": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 1
                    },
                    "durationMs": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 0
                    },
                    "scheduledAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "startedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "completedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "limit",
              "offset"
            ],
            "properties": {
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        }
      },
      "RuntimeReadiness": {
        "type": "object",
        "required": [
          "runtime",
          "ready",
          "reason",
          "checkedAt",
          "details"
        ],
        "properties": {
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ]
          },
          "ready": {
            "type": "boolean"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "checkedAt": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "$ref": "#/components/schemas/def-0"
          }
        }
      },
      "RuntimeReadinessListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "runtime",
                "ready",
                "reason",
                "checkedAt",
                "details"
              ],
              "properties": {
                "runtime": {
                  "type": "string",
                  "enum": [
                    "node",
                    "python",
                    "docker"
                  ]
                },
                "ready": {
                  "type": "boolean"
                },
                "reason": {
                  "type": "string",
                  "nullable": true
                },
                "checkedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "details": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            }
          }
        }
      },
      "JobSchemaPreview": {
        "type": "object",
        "required": [
          "parametersSchema",
          "outputSchema",
          "parametersSource",
          "outputSource"
        ],
        "properties": {
          "parametersSchema": {
            "$ref": "#/components/schemas/def-0"
          },
          "outputSchema": {
            "$ref": "#/components/schemas/def-0"
          },
          "parametersSource": {
            "type": "string",
            "nullable": true
          },
          "outputSource": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "JobSchemaPreviewResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "parametersSchema",
              "outputSchema",
              "parametersSource",
              "outputSource"
            ],
            "properties": {
              "parametersSchema": {
                "$ref": "#/components/schemas/def-0"
              },
              "outputSchema": {
                "$ref": "#/components/schemas/def-0"
              },
              "parametersSource": {
                "type": "string",
                "nullable": true
              },
              "outputSource": {
                "type": "string",
                "nullable": true
              }
            }
          }
        }
      },
      "JobBundleFile": {
        "type": "object",
        "required": [
          "path",
          "contents"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Relative path of the file inside the bundle."
          },
          "contents": {
            "type": "string",
            "description": "File contents encoded as UTF-8 text or base64."
          },
          "encoding": {
            "type": "string",
            "enum": [
              "utf8",
              "base64"
            ],
            "description": "Encoding of the contents value. Defaults to utf8 when omitted."
          },
          "executable": {
            "type": "boolean",
            "description": "Whether the file should be marked as executable in the generated bundle."
          }
        }
      },
      "JobBundleVersion": {
        "type": "object",
        "required": [
          "id",
          "bundleId",
          "slug",
          "version",
          "checksum",
          "capabilityFlags",
          "immutable",
          "status",
          "artifact",
          "metadata",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "bundleId": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "checksum": {
            "type": "string",
            "description": "SHA-256 checksum of the stored artifact."
          },
          "capabilityFlags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Capability flags declared by the bundle."
          },
          "immutable": {
            "type": "boolean",
            "description": "Indicates whether further edits to this version are allowed."
          },
          "status": {
            "type": "string",
            "description": "Lifecycle status of the bundle version."
          },
          "artifact": {
            "type": "object",
            "required": [
              "storage",
              "contentType",
              "size"
            ],
            "properties": {
              "storage": {
                "type": "string",
                "description": "Where the bundle artifact is stored."
              },
              "contentType": {
                "type": "string",
                "description": "MIME type reported for the bundle artifact."
              },
              "size": {
                "type": "integer",
                "description": "Size of the bundle artifact in bytes."
              }
            }
          },
          "manifest": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "metadata": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "publishedBy": {
            "type": "object",
            "required": [
              "subject",
              "kind",
              "tokenHash"
            ],
            "properties": {
              "subject": {
                "type": "string",
                "nullable": true
              },
              "kind": {
                "type": "string",
                "nullable": true
              },
              "tokenHash": {
                "type": "string",
                "nullable": true
              }
            },
            "nullable": true
          },
          "publishedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deprecatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "replacedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "replacedBy": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "download": {
            "type": "object",
            "required": [
              "url",
              "expiresAt",
              "storage",
              "kind"
            ],
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              },
              "storage": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            }
          }
        }
      },
      "BundleEditorResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "job",
              "binding",
              "bundle",
              "editor",
              "aiBuilder",
              "history",
              "suggestionSource",
              "availableVersions"
            ],
            "properties": {
              "job": {
                "$ref": "#/components/schemas/def-36"
              },
              "binding": {
                "type": "object",
                "required": [
                  "slug",
                  "version"
                ],
                "properties": {
                  "slug": {
                    "type": "string",
                    "description": "Slug of the bundle bound to the job."
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the bundle referenced by the job entry point."
                  },
                  "exportName": {
                    "type": "string",
                    "description": "Optional export name used when requiring the bundle entry point.",
                    "nullable": true
                  }
                }
              },
              "bundle": {
                "type": "object",
                "required": [
                  "id",
                  "bundleId",
                  "slug",
                  "version",
                  "checksum",
                  "capabilityFlags",
                  "immutable",
                  "status",
                  "artifact",
                  "metadata",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "bundleId": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "checksum": {
                    "type": "string",
                    "description": "SHA-256 checksum of the stored artifact."
                  },
                  "capabilityFlags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Capability flags declared by the bundle."
                  },
                  "immutable": {
                    "type": "boolean",
                    "description": "Indicates whether further edits to this version are allowed."
                  },
                  "status": {
                    "type": "string",
                    "description": "Lifecycle status of the bundle version."
                  },
                  "artifact": {
                    "type": "object",
                    "required": [
                      "storage",
                      "contentType",
                      "size"
                    ],
                    "properties": {
                      "storage": {
                        "type": "string",
                        "description": "Where the bundle artifact is stored."
                      },
                      "contentType": {
                        "type": "string",
                        "description": "MIME type reported for the bundle artifact."
                      },
                      "size": {
                        "type": "integer",
                        "description": "Size of the bundle artifact in bytes."
                      }
                    }
                  },
                  "manifest": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "metadata": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "publishedBy": {
                    "type": "object",
                    "required": [
                      "subject",
                      "kind",
                      "tokenHash"
                    ],
                    "properties": {
                      "subject": {
                        "type": "string",
                        "nullable": true
                      },
                      "kind": {
                        "type": "string",
                        "nullable": true
                      },
                      "tokenHash": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "nullable": true
                  },
                  "publishedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "deprecatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "replacedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "replacedBy": {
                    "type": "string",
                    "nullable": true
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "download": {
                    "type": "object",
                    "required": [
                      "url",
                      "expiresAt",
                      "storage",
                      "kind"
                    ],
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "storage": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "editor": {
                "type": "object",
                "required": [
                  "entryPoint",
                  "manifestPath",
                  "manifest",
                  "files"
                ],
                "properties": {
                  "entryPoint": {
                    "type": "string",
                    "description": "Relative path of the bundle entry point file."
                  },
                  "manifestPath": {
                    "type": "string",
                    "description": "Path to the manifest file within the bundle."
                  },
                  "manifest": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "contents"
                      ],
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Relative path of the file inside the bundle."
                        },
                        "contents": {
                          "type": "string",
                          "description": "File contents encoded as UTF-8 text or base64."
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "base64"
                          ],
                          "description": "Encoding of the contents value. Defaults to utf8 when omitted."
                        },
                        "executable": {
                          "type": "boolean",
                          "description": "Whether the file should be marked as executable in the generated bundle."
                        }
                      }
                    }
                  }
                }
              },
              "aiBuilder": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "history": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "slug",
                    "version"
                  ],
                  "properties": {
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "checksum": {
                      "type": "string",
                      "description": "Checksum of the generated artifact."
                    },
                    "regeneratedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "description": "History of AI generated bundle versions associated with this job."
              },
              "suggestionSource": {
                "type": "string",
                "enum": [
                  "metadata",
                  "artifact"
                ],
                "description": "Source used to build the current editor suggestion."
              },
              "availableVersions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "bundleId",
                    "slug",
                    "version",
                    "checksum",
                    "capabilityFlags",
                    "immutable",
                    "status",
                    "artifact",
                    "metadata",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "bundleId": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "checksum": {
                      "type": "string",
                      "description": "SHA-256 checksum of the stored artifact."
                    },
                    "capabilityFlags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Capability flags declared by the bundle."
                    },
                    "immutable": {
                      "type": "boolean",
                      "description": "Indicates whether further edits to this version are allowed."
                    },
                    "status": {
                      "type": "string",
                      "description": "Lifecycle status of the bundle version."
                    },
                    "artifact": {
                      "type": "object",
                      "required": [
                        "storage",
                        "contentType",
                        "size"
                      ],
                      "properties": {
                        "storage": {
                          "type": "string",
                          "description": "Where the bundle artifact is stored."
                        },
                        "contentType": {
                          "type": "string",
                          "description": "MIME type reported for the bundle artifact."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Size of the bundle artifact in bytes."
                        }
                      }
                    },
                    "manifest": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "metadata": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "publishedBy": {
                      "type": "object",
                      "required": [
                        "subject",
                        "kind",
                        "tokenHash"
                      ],
                      "properties": {
                        "subject": {
                          "type": "string",
                          "nullable": true
                        },
                        "kind": {
                          "type": "string",
                          "nullable": true
                        },
                        "tokenHash": {
                          "type": "string",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "publishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "deprecatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "replacedAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "replacedBy": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "download": {
                      "type": "object",
                      "required": [
                        "url",
                        "expiresAt",
                        "storage",
                        "kind"
                      ],
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "storage": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Previously published bundle versions available for selection."
              }
            }
          }
        }
      },
      "AiBundleEditRequest": {
        "type": "object",
        "required": [
          "prompt"
        ],
        "properties": {
          "prompt": {
            "type": "string",
            "maxLength": 10000,
            "description": "Instruction describing the desired edits to apply to the job bundle."
          },
          "provider": {
            "type": "string",
            "enum": [
              "codex",
              "openai",
              "openrouter"
            ],
            "description": "Model provider responsible for generating the bundle edits."
          },
          "providerOptions": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "openAiApiKey": {
                    "type": "string",
                    "description": "API key to authorize calls to OpenAI models."
                  },
                  "openAiBaseUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Override for the OpenAI API base URL when routing requests through a proxy."
                  },
                  "openAiMaxOutputTokens": {
                    "type": "integer",
                    "minimum": 256,
                    "maximum": 32000,
                    "description": "Maximum number of tokens the OpenAI provider may generate in a single response."
                  },
                  "openRouterApiKey": {
                    "type": "string",
                    "description": "API key used when the OpenRouter provider is selected."
                  },
                  "openRouterReferer": {
                    "type": "string",
                    "format": "uri",
                    "description": "Referer value to include when calling OpenRouter."
                  },
                  "openRouterTitle": {
                    "type": "string",
                    "description": "Human readable title supplied to OpenRouter when making a request."
                  }
                }
              }
            ],
            "description": "Provider-specific configuration such as API keys or maximum output tokens."
          }
        }
      },
      "BundleRegenerateRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "entryPoint",
          "manifestPath",
          "files"
        ],
        "properties": {
          "entryPoint": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "manifestPath": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512
          },
          "manifest": {
            "$ref": "#/components/schemas/def-0"
          },
          "files": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "path",
                "contents"
              ],
              "properties": {
                "path": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 512
                },
                "contents": {
                  "type": "string"
                },
                "encoding": {
                  "type": "string",
                  "enum": [
                    "utf8",
                    "base64"
                  ]
                },
                "executable": {
                  "type": "boolean"
                }
              }
            }
          },
          "capabilityFlags": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/def-0"
          },
          "description": {
            "type": "string",
            "maxLength": 512,
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "version": {
            "type": "string",
            "maxLength": 100
          }
        }
      },
      "JobRunRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/def-0"
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000
          },
          "maxAttempts": {
            "type": "integer",
            "minimum": 1
          },
          "context": {
            "$ref": "#/components/schemas/def-0"
          }
        }
      },
      "WorkflowTrigger": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "options": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "WorkflowJobStep": {
        "type": "object",
        "required": [
          "id",
          "name",
          "jobSlug"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "job"
            ]
          },
          "jobSlug": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 25
          },
          "parameters": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000,
            "nullable": true
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            },
            "nullable": true
          },
          "storeResultAs": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkflowServiceStep": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "serviceSlug",
          "request"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "service"
            ]
          },
          "serviceSlug": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 25
          },
          "parameters": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000,
            "nullable": true
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            },
            "nullable": true
          },
          "requireHealthy": {
            "type": "boolean"
          },
          "allowDegraded": {
            "type": "boolean"
          },
          "captureResponse": {
            "type": "boolean"
          },
          "storeResponseAs": {
            "type": "string"
          },
          "request": {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string",
                "enum": [
                  "GET",
                  "POST",
                  "PUT",
                  "PATCH",
                  "DELETE",
                  "HEAD"
                ]
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "required": [
                        "secret"
                      ],
                      "properties": {
                        "secret": {
                          "type": "object",
                          "required": [
                            "source",
                            "key"
                          ],
                          "properties": {
                            "source": {
                              "type": "string",
                              "enum": [
                                "env",
                                "store"
                              ]
                            },
                            "key": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        },
                        "prefix": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              },
              "query": {
                "type": "object",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "body": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "WorkflowFanOutStep": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "collection",
          "template"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "fanout"
            ]
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 25
          },
          "collection": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "template": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "jobSlug"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "job"
                    ]
                  },
                  "jobSlug": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "dependsOn": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 25
                  },
                  "parameters": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 86400000,
                    "nullable": true
                  },
                  "retryPolicy": {
                    "type": "object",
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    },
                    "nullable": true
                  },
                  "storeResultAs": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "type",
                  "serviceSlug",
                  "request"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "service"
                    ]
                  },
                  "serviceSlug": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "dependsOn": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 25
                  },
                  "parameters": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 86400000,
                    "nullable": true
                  },
                  "retryPolicy": {
                    "type": "object",
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    },
                    "nullable": true
                  },
                  "requireHealthy": {
                    "type": "boolean"
                  },
                  "allowDegraded": {
                    "type": "boolean"
                  },
                  "captureResponse": {
                    "type": "boolean"
                  },
                  "storeResponseAs": {
                    "type": "string"
                  },
                  "request": {
                    "type": "object",
                    "required": [
                      "path"
                    ],
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST",
                          "PUT",
                          "PATCH",
                          "DELETE",
                          "HEAD"
                        ]
                      },
                      "headers": {
                        "type": "object",
                        "additionalProperties": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "required": [
                                "secret"
                              ],
                              "properties": {
                                "secret": {
                                  "type": "object",
                                  "required": [
                                    "source",
                                    "key"
                                  ],
                                  "properties": {
                                    "source": {
                                      "type": "string",
                                      "enum": [
                                        "env",
                                        "store"
                                      ]
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "query": {
                        "type": "object",
                        "additionalProperties": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "body": {
                        "description": "Arbitrary JSON value.",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "maxItems": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10000,
            "nullable": true
          },
          "maxConcurrency": {
            "type": "integer",
            "minimum": 1,
            "maximum": 1000,
            "nullable": true
          },
          "storeResultsAs": {
            "type": "string"
          }
        }
      },
      "WorkflowStep": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "jobSlug"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "job"
                ]
              },
              "jobSlug": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "dependsOn": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 25
              },
              "parameters": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "timeoutMs": {
                "type": "integer",
                "minimum": 1000,
                "maximum": 86400000,
                "nullable": true
              },
              "retryPolicy": {
                "type": "object",
                "properties": {
                  "maxAttempts": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "none",
                      "fixed",
                      "exponential"
                    ]
                  },
                  "initialDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "maxDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "jitter": {
                    "type": "string",
                    "enum": [
                      "none",
                      "full",
                      "equal"
                    ]
                  }
                },
                "nullable": true
              },
              "storeResultAs": {
                "type": "string",
                "nullable": true
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "type",
              "serviceSlug",
              "request"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "service"
                ]
              },
              "serviceSlug": {
                "type": "string"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "dependsOn": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 25
              },
              "parameters": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "timeoutMs": {
                "type": "integer",
                "minimum": 1000,
                "maximum": 86400000,
                "nullable": true
              },
              "retryPolicy": {
                "type": "object",
                "properties": {
                  "maxAttempts": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "none",
                      "fixed",
                      "exponential"
                    ]
                  },
                  "initialDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "maxDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "jitter": {
                    "type": "string",
                    "enum": [
                      "none",
                      "full",
                      "equal"
                    ]
                  }
                },
                "nullable": true
              },
              "requireHealthy": {
                "type": "boolean"
              },
              "allowDegraded": {
                "type": "boolean"
              },
              "captureResponse": {
                "type": "boolean"
              },
              "storeResponseAs": {
                "type": "string"
              },
              "request": {
                "type": "object",
                "required": [
                  "path"
                ],
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "PATCH",
                      "DELETE",
                      "HEAD"
                    ]
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "required": [
                            "secret"
                          ],
                          "properties": {
                            "secret": {
                              "type": "object",
                              "required": [
                                "source",
                                "key"
                              ],
                              "properties": {
                                "source": {
                                  "type": "string",
                                  "enum": [
                                    "env",
                                    "store"
                                  ]
                                },
                                "key": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "query": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    }
                  },
                  "body": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "type",
              "collection",
              "template"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "fanout"
                ]
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "dependsOn": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 25
              },
              "collection": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "template": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "jobSlug"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "job"
                        ]
                      },
                      "jobSlug": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "dependsOn": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 25
                      },
                      "parameters": {
                        "description": "Arbitrary JSON value.",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      "timeoutMs": {
                        "type": "integer",
                        "minimum": 1000,
                        "maximum": 86400000,
                        "nullable": true
                      },
                      "retryPolicy": {
                        "type": "object",
                        "properties": {
                          "maxAttempts": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 10
                          },
                          "strategy": {
                            "type": "string",
                            "enum": [
                              "none",
                              "fixed",
                              "exponential"
                            ]
                          },
                          "initialDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "maxDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "jitter": {
                            "type": "string",
                            "enum": [
                              "none",
                              "full",
                              "equal"
                            ]
                          }
                        },
                        "nullable": true
                      },
                      "storeResultAs": {
                        "type": "string",
                        "nullable": true
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "type",
                      "serviceSlug",
                      "request"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "service"
                        ]
                      },
                      "serviceSlug": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string",
                        "nullable": true
                      },
                      "dependsOn": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 25
                      },
                      "parameters": {
                        "description": "Arbitrary JSON value.",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      "timeoutMs": {
                        "type": "integer",
                        "minimum": 1000,
                        "maximum": 86400000,
                        "nullable": true
                      },
                      "retryPolicy": {
                        "type": "object",
                        "properties": {
                          "maxAttempts": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 10
                          },
                          "strategy": {
                            "type": "string",
                            "enum": [
                              "none",
                              "fixed",
                              "exponential"
                            ]
                          },
                          "initialDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "maxDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "jitter": {
                            "type": "string",
                            "enum": [
                              "none",
                              "full",
                              "equal"
                            ]
                          }
                        },
                        "nullable": true
                      },
                      "requireHealthy": {
                        "type": "boolean"
                      },
                      "allowDegraded": {
                        "type": "boolean"
                      },
                      "captureResponse": {
                        "type": "boolean"
                      },
                      "storeResponseAs": {
                        "type": "string"
                      },
                      "request": {
                        "type": "object",
                        "required": [
                          "path"
                        ],
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "HEAD"
                            ]
                          },
                          "headers": {
                            "type": "object",
                            "additionalProperties": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "secret"
                                  ],
                                  "properties": {
                                    "secret": {
                                      "type": "object",
                                      "required": [
                                        "source",
                                        "key"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": "string",
                                          "enum": [
                                            "env",
                                            "store"
                                          ]
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "version": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "query": {
                            "type": "object",
                            "additionalProperties": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          },
                          "body": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "maxItems": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10000,
                "nullable": true
              },
              "maxConcurrency": {
                "type": "integer",
                "minimum": 1,
                "maximum": 1000,
                "nullable": true
              },
              "storeResultsAs": {
                "type": "string"
              }
            }
          }
        ]
      },
      "WorkflowDefinition": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "version",
          "steps",
          "triggers",
          "parametersSchema",
          "defaultParameters",
          "outputSchema",
          "dag",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "steps": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "jobSlug"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "job"
                      ]
                    },
                    "jobSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": "integer",
                      "minimum": 1000,
                      "maximum": 86400000,
                      "nullable": true
                    },
                    "retryPolicy": {
                      "type": "object",
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      },
                      "nullable": true
                    },
                    "storeResultAs": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "serviceSlug",
                    "request"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "service"
                      ]
                    },
                    "serviceSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": "integer",
                      "minimum": 1000,
                      "maximum": 86400000,
                      "nullable": true
                    },
                    "retryPolicy": {
                      "type": "object",
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      },
                      "nullable": true
                    },
                    "requireHealthy": {
                      "type": "boolean"
                    },
                    "allowDegraded": {
                      "type": "boolean"
                    },
                    "captureResponse": {
                      "type": "boolean"
                    },
                    "storeResponseAs": {
                      "type": "string"
                    },
                    "request": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "HEAD"
                          ]
                        },
                        "headers": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "required": [
                                  "secret"
                                ],
                                "properties": {
                                  "secret": {
                                    "type": "object",
                                    "required": [
                                      "source",
                                      "key"
                                    ],
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "enum": [
                                          "env",
                                          "store"
                                        ]
                                      },
                                      "key": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "prefix": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "query": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        },
                        "body": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "collection",
                    "template"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "fanout"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "collection": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "template": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "jobSlug"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "job"
                              ]
                            },
                            "jobSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": "integer",
                              "minimum": 1000,
                              "maximum": 86400000,
                              "nullable": true
                            },
                            "retryPolicy": {
                              "type": "object",
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              },
                              "nullable": true
                            },
                            "storeResultAs": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "type",
                            "serviceSlug",
                            "request"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "service"
                              ]
                            },
                            "serviceSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": "integer",
                              "minimum": 1000,
                              "maximum": 86400000,
                              "nullable": true
                            },
                            "retryPolicy": {
                              "type": "object",
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              },
                              "nullable": true
                            },
                            "requireHealthy": {
                              "type": "boolean"
                            },
                            "allowDegraded": {
                              "type": "boolean"
                            },
                            "captureResponse": {
                              "type": "boolean"
                            },
                            "storeResponseAs": {
                              "type": "string"
                            },
                            "request": {
                              "type": "object",
                              "required": [
                                "path"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "HEAD"
                                  ]
                                },
                                "headers": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "secret"
                                        ],
                                        "properties": {
                                          "secret": {
                                            "type": "object",
                                            "required": [
                                              "source",
                                              "key"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": "string",
                                                "enum": [
                                                  "env",
                                                  "store"
                                                ]
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "version": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "prefix": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "query": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "body": {
                                  "description": "Arbitrary JSON value.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "maxItems": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10000,
                      "nullable": true
                    },
                    "maxConcurrency": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 1000,
                      "nullable": true
                    },
                    "storeResultsAs": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "minItems": 1,
            "maxItems": 100
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string"
                },
                "options": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                }
              }
            }
          },
          "parametersSchema": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "defaultParameters": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "outputSchema": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "metadata": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "dag": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WorkflowDefinitionCreateRequest": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "steps"
        ],
        "properties": {
          "slug": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$",
            "minLength": 1,
            "maxLength": 100
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "description": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "jobSlug"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "job"
                      ]
                    },
                    "jobSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": "integer",
                      "minimum": 1000,
                      "maximum": 86400000,
                      "nullable": true
                    },
                    "retryPolicy": {
                      "type": "object",
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      },
                      "nullable": true
                    },
                    "storeResultAs": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "serviceSlug",
                    "request"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "service"
                      ]
                    },
                    "serviceSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": "integer",
                      "minimum": 1000,
                      "maximum": 86400000,
                      "nullable": true
                    },
                    "retryPolicy": {
                      "type": "object",
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      },
                      "nullable": true
                    },
                    "requireHealthy": {
                      "type": "boolean"
                    },
                    "allowDegraded": {
                      "type": "boolean"
                    },
                    "captureResponse": {
                      "type": "boolean"
                    },
                    "storeResponseAs": {
                      "type": "string"
                    },
                    "request": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "HEAD"
                          ]
                        },
                        "headers": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "required": [
                                  "secret"
                                ],
                                "properties": {
                                  "secret": {
                                    "type": "object",
                                    "required": [
                                      "source",
                                      "key"
                                    ],
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "enum": [
                                          "env",
                                          "store"
                                        ]
                                      },
                                      "key": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "prefix": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "query": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        },
                        "body": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "collection",
                    "template"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "fanout"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "collection": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "template": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "jobSlug"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "job"
                              ]
                            },
                            "jobSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": "integer",
                              "minimum": 1000,
                              "maximum": 86400000,
                              "nullable": true
                            },
                            "retryPolicy": {
                              "type": "object",
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              },
                              "nullable": true
                            },
                            "storeResultAs": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "type",
                            "serviceSlug",
                            "request"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "service"
                              ]
                            },
                            "serviceSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": "integer",
                              "minimum": 1000,
                              "maximum": 86400000,
                              "nullable": true
                            },
                            "retryPolicy": {
                              "type": "object",
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              },
                              "nullable": true
                            },
                            "requireHealthy": {
                              "type": "boolean"
                            },
                            "allowDegraded": {
                              "type": "boolean"
                            },
                            "captureResponse": {
                              "type": "boolean"
                            },
                            "storeResponseAs": {
                              "type": "string"
                            },
                            "request": {
                              "type": "object",
                              "required": [
                                "path"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "HEAD"
                                  ]
                                },
                                "headers": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "secret"
                                        ],
                                        "properties": {
                                          "secret": {
                                            "type": "object",
                                            "required": [
                                              "source",
                                              "key"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": "string",
                                                "enum": [
                                                  "env",
                                                  "store"
                                                ]
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "version": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "prefix": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "query": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "body": {
                                  "description": "Arbitrary JSON value.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "maxItems": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10000,
                      "nullable": true
                    },
                    "maxConcurrency": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 1000,
                      "nullable": true
                    },
                    "storeResultsAs": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "minItems": 1,
            "maxItems": 100
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string"
                },
                "options": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                }
              }
            }
          },
          "parametersSchema": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "defaultParameters": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "outputSchema": {
            "type": "object",
            "additionalProperties": {
              "description": "Arbitrary JSON value.",
              "nullable": true,
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/def-0"
                  }
                },
                {
                  "type": "object",
                  "additionalProperties": {
                    "$ref": "#/components/schemas/def-0"
                  }
                }
              ]
            }
          },
          "metadata": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "WorkflowDefinitionResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "version",
              "steps",
              "triggers",
              "parametersSchema",
              "defaultParameters",
              "outputSchema",
              "dag",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              },
              "description": {
                "type": "string",
                "nullable": true
              },
              "steps": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "jobSlug"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "job"
                          ]
                        },
                        "jobSlug": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 25
                        },
                        "parameters": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "timeoutMs": {
                          "type": "integer",
                          "minimum": 1000,
                          "maximum": 86400000,
                          "nullable": true
                        },
                        "retryPolicy": {
                          "type": "object",
                          "properties": {
                            "maxAttempts": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            },
                            "strategy": {
                              "type": "string",
                              "enum": [
                                "none",
                                "fixed",
                                "exponential"
                              ]
                            },
                            "initialDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "maxDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "jitter": {
                              "type": "string",
                              "enum": [
                                "none",
                                "full",
                                "equal"
                              ]
                            }
                          },
                          "nullable": true
                        },
                        "storeResultAs": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "type",
                        "serviceSlug",
                        "request"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "service"
                          ]
                        },
                        "serviceSlug": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 25
                        },
                        "parameters": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "timeoutMs": {
                          "type": "integer",
                          "minimum": 1000,
                          "maximum": 86400000,
                          "nullable": true
                        },
                        "retryPolicy": {
                          "type": "object",
                          "properties": {
                            "maxAttempts": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            },
                            "strategy": {
                              "type": "string",
                              "enum": [
                                "none",
                                "fixed",
                                "exponential"
                              ]
                            },
                            "initialDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "maxDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "jitter": {
                              "type": "string",
                              "enum": [
                                "none",
                                "full",
                                "equal"
                              ]
                            }
                          },
                          "nullable": true
                        },
                        "requireHealthy": {
                          "type": "boolean"
                        },
                        "allowDegraded": {
                          "type": "boolean"
                        },
                        "captureResponse": {
                          "type": "boolean"
                        },
                        "storeResponseAs": {
                          "type": "string"
                        },
                        "request": {
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "path": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "PATCH",
                                "DELETE",
                                "HEAD"
                              ]
                            },
                            "headers": {
                              "type": "object",
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "secret"
                                    ],
                                    "properties": {
                                      "secret": {
                                        "type": "object",
                                        "required": [
                                          "source",
                                          "key"
                                        ],
                                        "properties": {
                                          "source": {
                                            "type": "string",
                                            "enum": [
                                              "env",
                                              "store"
                                            ]
                                          },
                                          "key": {
                                            "type": "string"
                                          },
                                          "version": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "prefix": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "query": {
                              "type": "object",
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            },
                            "body": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "type",
                        "collection",
                        "template"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fanout"
                          ]
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 25
                        },
                        "collection": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "template": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "jobSlug"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "job"
                                  ]
                                },
                                "jobSlug": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "dependsOn": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 25
                                },
                                "parameters": {
                                  "description": "Arbitrary JSON value.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                "timeoutMs": {
                                  "type": "integer",
                                  "minimum": 1000,
                                  "maximum": 86400000,
                                  "nullable": true
                                },
                                "retryPolicy": {
                                  "type": "object",
                                  "properties": {
                                    "maxAttempts": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 10
                                    },
                                    "strategy": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "fixed",
                                        "exponential"
                                      ]
                                    },
                                    "initialDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "maxDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "full",
                                        "equal"
                                      ]
                                    }
                                  },
                                  "nullable": true
                                },
                                "storeResultAs": {
                                  "type": "string",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "type",
                                "serviceSlug",
                                "request"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "service"
                                  ]
                                },
                                "serviceSlug": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "dependsOn": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 25
                                },
                                "parameters": {
                                  "description": "Arbitrary JSON value.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                "timeoutMs": {
                                  "type": "integer",
                                  "minimum": 1000,
                                  "maximum": 86400000,
                                  "nullable": true
                                },
                                "retryPolicy": {
                                  "type": "object",
                                  "properties": {
                                    "maxAttempts": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 10
                                    },
                                    "strategy": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "fixed",
                                        "exponential"
                                      ]
                                    },
                                    "initialDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "maxDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "full",
                                        "equal"
                                      ]
                                    }
                                  },
                                  "nullable": true
                                },
                                "requireHealthy": {
                                  "type": "boolean"
                                },
                                "allowDegraded": {
                                  "type": "boolean"
                                },
                                "captureResponse": {
                                  "type": "boolean"
                                },
                                "storeResponseAs": {
                                  "type": "string"
                                },
                                "request": {
                                  "type": "object",
                                  "required": [
                                    "path"
                                  ],
                                  "properties": {
                                    "path": {
                                      "type": "string"
                                    },
                                    "method": {
                                      "type": "string",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "HEAD"
                                      ]
                                    },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "secret"
                                            ],
                                            "properties": {
                                              "secret": {
                                                "type": "object",
                                                "required": [
                                                  "source",
                                                  "key"
                                                ],
                                                "properties": {
                                                  "source": {
                                                    "type": "string",
                                                    "enum": [
                                                      "env",
                                                      "store"
                                                    ]
                                                  },
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "version": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "prefix": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "query": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "boolean"
                                          }
                                        ]
                                      }
                                    },
                                    "body": {
                                      "description": "Arbitrary JSON value.",
                                      "nullable": true,
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "maxItems": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10000,
                          "nullable": true
                        },
                        "maxConcurrency": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 1000,
                          "nullable": true
                        },
                        "storeResultsAs": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "minItems": 1,
                "maxItems": 100
              },
              "triggers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "options": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "parametersSchema": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "defaultParameters": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "outputSchema": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "metadata": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "dag": {
                "description": "Arbitrary JSON value.",
                "nullable": true,
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      },
      "WorkflowDefinitionListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "version",
                "steps",
                "triggers",
                "parametersSchema",
                "defaultParameters",
                "outputSchema",
                "dag",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "integer"
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "jobSlug"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "job"
                            ]
                          },
                          "jobSlug": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "dependsOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 25
                          },
                          "parameters": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "timeoutMs": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 86400000,
                            "nullable": true
                          },
                          "retryPolicy": {
                            "type": "object",
                            "properties": {
                              "maxAttempts": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10
                              },
                              "strategy": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "fixed",
                                  "exponential"
                                ]
                              },
                              "initialDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "maxDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "jitter": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "full",
                                  "equal"
                                ]
                              }
                            },
                            "nullable": true
                          },
                          "storeResultAs": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "type",
                          "serviceSlug",
                          "request"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "service"
                            ]
                          },
                          "serviceSlug": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "dependsOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 25
                          },
                          "parameters": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "timeoutMs": {
                            "type": "integer",
                            "minimum": 1000,
                            "maximum": 86400000,
                            "nullable": true
                          },
                          "retryPolicy": {
                            "type": "object",
                            "properties": {
                              "maxAttempts": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10
                              },
                              "strategy": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "fixed",
                                  "exponential"
                                ]
                              },
                              "initialDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "maxDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "jitter": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "full",
                                  "equal"
                                ]
                              }
                            },
                            "nullable": true
                          },
                          "requireHealthy": {
                            "type": "boolean"
                          },
                          "allowDegraded": {
                            "type": "boolean"
                          },
                          "captureResponse": {
                            "type": "boolean"
                          },
                          "storeResponseAs": {
                            "type": "string"
                          },
                          "request": {
                            "type": "object",
                            "required": [
                              "path"
                            ],
                            "properties": {
                              "path": {
                                "type": "string"
                              },
                              "method": {
                                "type": "string",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "HEAD"
                                ]
                              },
                              "headers": {
                                "type": "object",
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "secret"
                                      ],
                                      "properties": {
                                        "secret": {
                                          "type": "object",
                                          "required": [
                                            "source",
                                            "key"
                                          ],
                                          "properties": {
                                            "source": {
                                              "type": "string",
                                              "enum": [
                                                "env",
                                                "store"
                                              ]
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "version": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "prefix": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "query": {
                                "type": "object",
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              },
                              "body": {
                                "description": "Arbitrary JSON value.",
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "type",
                          "collection",
                          "template"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "fanout"
                            ]
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "dependsOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 25
                          },
                          "collection": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "template": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "jobSlug"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "job"
                                    ]
                                  },
                                  "jobSlug": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "dependsOn": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "maxItems": 25
                                  },
                                  "parameters": {
                                    "description": "Arbitrary JSON value.",
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      }
                                    ]
                                  },
                                  "timeoutMs": {
                                    "type": "integer",
                                    "minimum": 1000,
                                    "maximum": 86400000,
                                    "nullable": true
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "maxAttempts": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "fixed",
                                          "exponential"
                                        ]
                                      },
                                      "initialDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "maxDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "jitter": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "full",
                                          "equal"
                                        ]
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "storeResultAs": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "serviceSlug",
                                  "request"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "service"
                                    ]
                                  },
                                  "serviceSlug": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  },
                                  "dependsOn": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "maxItems": 25
                                  },
                                  "parameters": {
                                    "description": "Arbitrary JSON value.",
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      }
                                    ]
                                  },
                                  "timeoutMs": {
                                    "type": "integer",
                                    "minimum": 1000,
                                    "maximum": 86400000,
                                    "nullable": true
                                  },
                                  "retryPolicy": {
                                    "type": "object",
                                    "properties": {
                                      "maxAttempts": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "fixed",
                                          "exponential"
                                        ]
                                      },
                                      "initialDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "maxDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "jitter": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "full",
                                          "equal"
                                        ]
                                      }
                                    },
                                    "nullable": true
                                  },
                                  "requireHealthy": {
                                    "type": "boolean"
                                  },
                                  "allowDegraded": {
                                    "type": "boolean"
                                  },
                                  "captureResponse": {
                                    "type": "boolean"
                                  },
                                  "storeResponseAs": {
                                    "type": "string"
                                  },
                                  "request": {
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "path": {
                                        "type": "string"
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "HEAD"
                                        ]
                                      },
                                      "headers": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "secret"
                                              ],
                                              "properties": {
                                                "secret": {
                                                  "type": "object",
                                                  "required": [
                                                    "source",
                                                    "key"
                                                  ],
                                                  "properties": {
                                                    "source": {
                                                      "type": "string",
                                                      "enum": [
                                                        "env",
                                                        "store"
                                                      ]
                                                    },
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "version": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "prefix": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "query": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        }
                                      },
                                      "body": {
                                        "description": "Arbitrary JSON value.",
                                        "nullable": true,
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "boolean"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "maxItems": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 10000,
                            "nullable": true
                          },
                          "maxConcurrency": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 1000,
                            "nullable": true
                          },
                          "storeResultsAs": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 100
                },
                "triggers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "options": {
                        "description": "Arbitrary JSON value.",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      }
                    }
                  }
                },
                "parametersSchema": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "defaultParameters": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "outputSchema": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "metadata": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "dag": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "WorkflowRun": {
        "type": "object",
        "required": [
          "id",
          "workflowDefinitionId",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "workflowDefinitionId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled"
            ]
          },
          "parameters": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "context": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "output": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "currentStepId": {
            "type": "string",
            "nullable": true
          },
          "currentStepIndex": {
            "type": "integer",
            "nullable": true
          },
          "metrics": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "triggeredBy": {
            "type": "string",
            "nullable": true
          },
          "trigger": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "partitionKey": {
            "type": "string",
            "nullable": true
          },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "completedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "durationMs": {
            "type": "integer",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "WorkflowAutoMaterializeInFlight": {
        "type": "object",
        "required": [
          "reason",
          "requestedAt",
          "claimedAt",
          "claimOwner"
        ],
        "properties": {
          "workflowRunId": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string"
          },
          "assetId": {
            "type": "string",
            "nullable": true
          },
          "partitionKey": {
            "type": "string",
            "nullable": true
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimedAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimOwner": {
            "type": "string"
          },
          "context": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "WorkflowAutoMaterializeCooldown": {
        "type": "object",
        "required": [
          "failures"
        ],
        "properties": {
          "failures": {
            "type": "integer",
            "minimum": 0
          },
          "nextEligibleAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "WorkflowAutoMaterializeOpsResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "runs",
              "inFlight",
              "cooldown",
              "updatedAt"
            ],
            "properties": {
              "runs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-64"
                }
              },
              "inFlight": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-65"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "cooldown": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-66"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "workflow": {
                "type": "object",
                "required": [
                  "id",
                  "slug",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        }
      },
      "ApiKey": {
        "type": "object",
        "required": [
          "id",
          "prefix",
          "scopes",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "prefix": {
            "type": "string",
            "description": "Stable API key prefix used for support diagnostics."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scopes granted to the API key."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "revokedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "ApiKeyListResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "keys"
            ],
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-68"
                }
              }
            }
          }
        }
      },
      "ApiKeyCreateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "key",
              "token"
            ],
            "properties": {
              "key": {
                "$ref": "#/components/schemas/def-68"
              },
              "token": {
                "type": "string",
                "description": "Full API key token. This value is only returned once at creation time."
              }
            }
          }
        }
      },
      "PythonSnippetPreview": {
        "type": "object",
        "required": [
          "handlerName",
          "handlerIsAsync",
          "inputModel",
          "outputModel"
        ],
        "properties": {
          "handlerName": {
            "type": "string"
          },
          "handlerIsAsync": {
            "type": "boolean"
          },
          "inputModel": {
            "type": "object",
            "required": [
              "name",
              "schema"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "schema": {
                "$ref": "#/components/schemas/def-0"
              }
            }
          },
          "outputModel": {
            "type": "object",
            "required": [
              "name",
              "schema"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "schema": {
                "$ref": "#/components/schemas/def-0"
              }
            }
          }
        }
      },
      "PythonSnippetCreateResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "job",
              "analysis",
              "bundle"
            ],
            "properties": {
              "job": {
                "type": "object",
                "required": [
                  "id",
                  "slug",
                  "name",
                  "version",
                  "type",
                  "runtime",
                  "entryPoint",
                  "parametersSchema",
                  "defaultParameters",
                  "outputSchema",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "batch",
                      "service-triggered",
                      "manual"
                    ]
                  },
                  "runtime": {
                    "type": "string",
                    "enum": [
                      "node",
                      "python",
                      "docker"
                    ]
                  },
                  "entryPoint": {
                    "type": "string"
                  },
                  "parametersSchema": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "defaultParameters": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "outputSchema": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": "integer",
                    "nullable": true
                  },
                  "retryPolicy": {
                    "type": "object",
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    },
                    "nullable": true
                  },
                  "metadata": {
                    "description": "Arbitrary JSON value.",
                    "nullable": true,
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "analysis": {
                "type": "object",
                "required": [
                  "handlerName",
                  "handlerIsAsync",
                  "inputModel",
                  "outputModel"
                ],
                "properties": {
                  "handlerName": {
                    "type": "string"
                  },
                  "handlerIsAsync": {
                    "type": "boolean"
                  },
                  "inputModel": {
                    "type": "object",
                    "required": [
                      "name",
                      "schema"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  },
                  "outputModel": {
                    "type": "object",
                    "required": [
                      "name",
                      "schema"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  }
                }
              },
              "bundle": {
                "type": "object",
                "required": [
                  "slug",
                  "version"
                ],
                "properties": {
                  "slug": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "AssetGraphProducer": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "stepId",
          "stepName",
          "stepType",
          "partitioning",
          "autoMaterialize",
          "freshness"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          },
          "partitioning": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "autoMaterialize": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "freshness": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "AssetGraphConsumer": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "stepId",
          "stepName",
          "stepType"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          }
        }
      },
      "AssetGraphMaterialization": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "runId",
          "stepId",
          "stepName",
          "stepType",
          "runStatus",
          "stepStatus",
          "producedAt",
          "partitionKey",
          "freshness",
          "runStartedAt",
          "runCompletedAt"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "runId": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          },
          "runStatus": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled"
            ]
          },
          "stepStatus": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "skipped"
            ]
          },
          "producedAt": {
            "type": "string",
            "format": "date-time"
          },
          "partitionKey": {
            "type": "string",
            "nullable": true
          },
          "freshness": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          "runStartedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "runCompletedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "AssetGraphStalePartition": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "partitionKey",
          "requestedAt",
          "requestedBy",
          "note"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "partitionKey": {
            "type": "string",
            "nullable": true
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "requestedBy": {
            "type": "string",
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AssetGraphNode": {
        "type": "object",
        "required": [
          "assetId",
          "normalizedAssetId",
          "producers",
          "consumers",
          "latestMaterializations",
          "stalePartitions",
          "hasStalePartitions",
          "hasOutdatedUpstreams",
          "outdatedUpstreamAssetIds"
        ],
        "properties": {
          "assetId": {
            "type": "string"
          },
          "normalizedAssetId": {
            "type": "string"
          },
          "producers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "stepId",
                "stepName",
                "stepType",
                "partitioning",
                "autoMaterialize",
                "freshness"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "stepId": {
                  "type": "string"
                },
                "stepName": {
                  "type": "string"
                },
                "stepType": {
                  "type": "string",
                  "enum": [
                    "job",
                    "service",
                    "fanout"
                  ]
                },
                "partitioning": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "autoMaterialize": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "freshness": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                }
              }
            }
          },
          "consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "stepId",
                "stepName",
                "stepType"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "stepId": {
                  "type": "string"
                },
                "stepName": {
                  "type": "string"
                },
                "stepType": {
                  "type": "string",
                  "enum": [
                    "job",
                    "service",
                    "fanout"
                  ]
                }
              }
            }
          },
          "latestMaterializations": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "runId",
                "stepId",
                "stepName",
                "stepType",
                "runStatus",
                "stepStatus",
                "producedAt",
                "partitionKey",
                "freshness",
                "runStartedAt",
                "runCompletedAt"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "runId": {
                  "type": "string"
                },
                "stepId": {
                  "type": "string"
                },
                "stepName": {
                  "type": "string"
                },
                "stepType": {
                  "type": "string",
                  "enum": [
                    "job",
                    "service",
                    "fanout"
                  ]
                },
                "runStatus": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "running",
                    "succeeded",
                    "failed",
                    "canceled"
                  ]
                },
                "stepStatus": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "running",
                    "succeeded",
                    "failed",
                    "skipped"
                  ]
                },
                "producedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "partitionKey": {
                  "type": "string",
                  "nullable": true
                },
                "freshness": {
                  "description": "Arbitrary JSON value.",
                  "nullable": true,
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                "runStartedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                },
                "runCompletedAt": {
                  "type": "string",
                  "format": "date-time",
                  "nullable": true
                }
              }
            }
          },
          "stalePartitions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "partitionKey",
                "requestedAt",
                "requestedBy",
                "note"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "partitionKey": {
                  "type": "string",
                  "nullable": true
                },
                "requestedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "requestedBy": {
                  "type": "string",
                  "nullable": true
                },
                "note": {
                  "type": "string",
                  "nullable": true
                }
              }
            }
          },
          "hasStalePartitions": {
            "type": "boolean"
          },
          "hasOutdatedUpstreams": {
            "type": "boolean"
          },
          "outdatedUpstreamAssetIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "AssetGraphEdge": {
        "type": "object",
        "required": [
          "fromAssetId",
          "fromAssetNormalizedId",
          "toAssetId",
          "toAssetNormalizedId",
          "workflowId",
          "workflowSlug",
          "workflowName",
          "stepId",
          "stepName",
          "stepType"
        ],
        "properties": {
          "fromAssetId": {
            "type": "string"
          },
          "fromAssetNormalizedId": {
            "type": "string"
          },
          "toAssetId": {
            "type": "string"
          },
          "toAssetNormalizedId": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          }
        }
      },
      "AssetGraphResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "assets",
              "edges"
            ],
            "properties": {
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "assetId",
                    "normalizedAssetId",
                    "producers",
                    "consumers",
                    "latestMaterializations",
                    "stalePartitions",
                    "hasStalePartitions",
                    "hasOutdatedUpstreams",
                    "outdatedUpstreamAssetIds"
                  ],
                  "properties": {
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "producers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "stepId",
                          "stepName",
                          "stepType",
                          "partitioning",
                          "autoMaterialize",
                          "freshness"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "stepId": {
                            "type": "string"
                          },
                          "stepName": {
                            "type": "string"
                          },
                          "stepType": {
                            "type": "string",
                            "enum": [
                              "job",
                              "service",
                              "fanout"
                            ]
                          },
                          "partitioning": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "autoMaterialize": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "freshness": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          }
                        }
                      }
                    },
                    "consumers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "stepId",
                          "stepName",
                          "stepType"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "stepId": {
                            "type": "string"
                          },
                          "stepName": {
                            "type": "string"
                          },
                          "stepType": {
                            "type": "string",
                            "enum": [
                              "job",
                              "service",
                              "fanout"
                            ]
                          }
                        }
                      }
                    },
                    "latestMaterializations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "runId",
                          "stepId",
                          "stepName",
                          "stepType",
                          "runStatus",
                          "stepStatus",
                          "producedAt",
                          "partitionKey",
                          "freshness",
                          "runStartedAt",
                          "runCompletedAt"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "runId": {
                            "type": "string"
                          },
                          "stepId": {
                            "type": "string"
                          },
                          "stepName": {
                            "type": "string"
                          },
                          "stepType": {
                            "type": "string",
                            "enum": [
                              "job",
                              "service",
                              "fanout"
                            ]
                          },
                          "runStatus": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "running",
                              "succeeded",
                              "failed",
                              "canceled"
                            ]
                          },
                          "stepStatus": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "running",
                              "succeeded",
                              "failed",
                              "skipped"
                            ]
                          },
                          "producedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "partitionKey": {
                            "type": "string",
                            "nullable": true
                          },
                          "freshness": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "runStartedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "runCompletedAt": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "stalePartitions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "partitionKey",
                          "requestedAt",
                          "requestedBy",
                          "note"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "partitionKey": {
                            "type": "string",
                            "nullable": true
                          },
                          "requestedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "requestedBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "note": {
                            "type": "string",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "hasStalePartitions": {
                      "type": "boolean"
                    },
                    "hasOutdatedUpstreams": {
                      "type": "boolean"
                    },
                    "outdatedUpstreamAssetIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "edges": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "fromAssetId",
                    "fromAssetNormalizedId",
                    "toAssetId",
                    "toAssetNormalizedId",
                    "workflowId",
                    "workflowSlug",
                    "workflowName",
                    "stepId",
                    "stepName",
                    "stepType"
                  ],
                  "properties": {
                    "fromAssetId": {
                      "type": "string"
                    },
                    "fromAssetNormalizedId": {
                      "type": "string"
                    },
                    "toAssetId": {
                      "type": "string"
                    },
                    "toAssetNormalizedId": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "workflowSlug": {
                      "type": "string"
                    },
                    "workflowName": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string"
                    },
                    "stepName": {
                      "type": "string"
                    },
                    "stepType": {
                      "type": "string",
                      "enum": [
                        "job",
                        "service",
                        "fanout"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AssetMarkStaleRequest": {
        "type": "object",
        "properties": {
          "partitionKey": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          }
        },
        "additionalProperties": false
      },
      "WorkflowTopologyGraph": {
        "type": "object",
        "required": [
          "version",
          "generatedAt",
          "nodes",
          "edges"
        ],
        "properties": {
          "version": {
            "type": "string",
            "enum": [
              "v1",
              "v2"
            ]
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "type": "object",
            "required": [
              "workflows",
              "steps",
              "triggers",
              "schedules",
              "assets",
              "eventSources"
            ],
            "properties": {
              "workflows": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "slug",
                    "name",
                    "version",
                    "createdAt",
                    "updatedAt",
                    "annotations"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object",
                      "additionalProperties": {
                        "description": "Arbitrary JSON value.",
                        "nullable": true,
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      "nullable": true
                    },
                    "annotations": {
                      "type": "object",
                      "required": [
                        "tags"
                      ],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "Annotation tags that can be used for filtering and grouping.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ownerName": {
                          "type": "string",
                          "nullable": true
                        },
                        "ownerContact": {
                          "type": "string",
                          "nullable": true
                        },
                        "team": {
                          "type": "string",
                          "nullable": true
                        },
                        "domain": {
                          "type": "string",
                          "nullable": true
                        },
                        "environment": {
                          "type": "string",
                          "nullable": true
                        },
                        "slo": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "workflowId",
                    "name",
                    "type",
                    "dependsOn",
                    "dependents",
                    "runtime"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "job",
                        "service",
                        "fanout"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dependents": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtime": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "jobSlug"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "job"
                              ]
                            },
                            "jobSlug": {
                              "type": "string"
                            },
                            "bundleStrategy": {
                              "type": "string",
                              "enum": [
                                "latest",
                                "pinned"
                              ],
                              "nullable": true
                            },
                            "bundleSlug": {
                              "type": "string",
                              "nullable": true
                            },
                            "bundleVersion": {
                              "type": "string",
                              "nullable": true
                            },
                            "exportName": {
                              "type": "string",
                              "nullable": true
                            },
                            "timeoutMs": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "serviceSlug"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "service"
                              ]
                            },
                            "serviceSlug": {
                              "type": "string"
                            },
                            "timeoutMs": {
                              "type": "integer",
                              "nullable": true
                            },
                            "requireHealthy": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "allowDegraded": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "captureResponse": {
                              "type": "boolean",
                              "nullable": true
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "collection",
                            "template"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "fanout"
                              ]
                            },
                            "collection": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "maxItems": {
                              "type": "integer",
                              "nullable": true
                            },
                            "maxConcurrency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "storeResultsAs": {
                              "type": "string",
                              "nullable": true
                            },
                            "template": {
                              "type": "object",
                              "required": [
                                "id",
                                "runtime"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "runtime": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "jobSlug"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "job"
                                          ]
                                        },
                                        "jobSlug": {
                                          "type": "string"
                                        },
                                        "bundleStrategy": {
                                          "type": "string",
                                          "enum": [
                                            "latest",
                                            "pinned"
                                          ],
                                          "nullable": true
                                        },
                                        "bundleSlug": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "bundleVersion": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "exportName": {
                                          "type": "string",
                                          "nullable": true
                                        },
                                        "timeoutMs": {
                                          "type": "integer",
                                          "nullable": true
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "serviceSlug"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "service"
                                          ]
                                        },
                                        "serviceSlug": {
                                          "type": "string"
                                        },
                                        "timeoutMs": {
                                          "type": "integer",
                                          "nullable": true
                                        },
                                        "requireHealthy": {
                                          "type": "boolean",
                                          "nullable": true
                                        },
                                        "allowDegraded": {
                                          "type": "boolean",
                                          "nullable": true
                                        },
                                        "captureResponse": {
                                          "type": "boolean",
                                          "nullable": true
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "triggers": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "kind",
                        "triggerType"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "definition"
                          ]
                        },
                        "triggerType": {
                          "type": "string"
                        },
                        "options": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "schedule": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "cron"
                              ],
                              "properties": {
                                "cron": {
                                  "type": "string"
                                },
                                "timezone": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "startWindow": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "endWindow": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "catchUp": {
                                  "type": "boolean",
                                  "nullable": true
                                }
                              }
                            }
                          ],
                          "nullable": true
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "kind",
                        "status",
                        "eventType",
                        "predicates",
                        "parameterTemplate",
                        "runKeyTemplate",
                        "throttleWindowMs",
                        "throttleCount",
                        "maxConcurrency",
                        "idempotencyKeyExpression",
                        "metadata",
                        "createdAt",
                        "updatedAt"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "event"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "disabled"
                          ]
                        },
                        "eventType": {
                          "type": "string"
                        },
                        "eventSource": {
                          "type": "string",
                          "nullable": true
                        },
                        "predicates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "path",
                              "operator"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "jsonPath"
                                ]
                              },
                              "path": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              },
                              "value": {
                                "description": "Arbitrary JSON value.",
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "description": "Arbitrary JSON value.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                }
                              },
                              "caseSensitive": {
                                "type": "boolean"
                              },
                              "flags": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          }
                        },
                        "parameterTemplate": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "runKeyTemplate": {
                          "type": "string",
                          "nullable": true
                        },
                        "throttleWindowMs": {
                          "type": "integer",
                          "nullable": true
                        },
                        "throttleCount": {
                          "type": "integer",
                          "nullable": true
                        },
                        "maxConcurrency": {
                          "type": "integer",
                          "nullable": true
                        },
                        "idempotencyKeyExpression": {
                          "type": "string",
                          "nullable": true
                        },
                        "metadata": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "createdBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "updatedBy": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  ]
                }
              },
              "schedules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "workflowId",
                    "cron",
                    "timezone",
                    "parameters",
                    "startWindow",
                    "endWindow",
                    "catchUp",
                    "nextRunAt",
                    "isActive",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "nullable": true
                    },
                    "cron": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": "string",
                      "nullable": true
                    },
                    "parameters": {
                      "description": "Arbitrary JSON value.",
                      "nullable": true,
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    "startWindow": {
                      "type": "string",
                      "nullable": true
                    },
                    "endWindow": {
                      "type": "string",
                      "nullable": true
                    },
                    "catchUp": {
                      "type": "boolean"
                    },
                    "nextRunAt": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "assetId",
                    "normalizedAssetId",
                    "annotations"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "annotations": {
                      "type": "object",
                      "required": [
                        "tags"
                      ],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "Annotation tags that can be used for filtering and grouping.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ownerName": {
                          "type": "string",
                          "nullable": true
                        },
                        "ownerContact": {
                          "type": "string",
                          "nullable": true
                        },
                        "team": {
                          "type": "string",
                          "nullable": true
                        },
                        "domain": {
                          "type": "string",
                          "nullable": true
                        },
                        "environment": {
                          "type": "string",
                          "nullable": true
                        },
                        "slo": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              },
              "eventSources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "eventType"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string"
                    },
                    "eventSource": {
                      "type": "string",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "edges": {
            "type": "object",
            "required": [
              "triggerToWorkflow",
              "workflowToStep",
              "stepToAsset",
              "assetToWorkflow",
              "eventSourceToTrigger",
              "stepToEventSource"
            ],
            "properties": {
              "triggerToWorkflow": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "kind",
                        "triggerId",
                        "workflowId"
                      ],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": [
                            "event-trigger",
                            "definition-trigger"
                          ]
                        },
                        "triggerId": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "kind",
                        "scheduleId",
                        "workflowId"
                      ],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": [
                            "schedule"
                          ]
                        },
                        "scheduleId": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              },
              "workflowToStep": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "workflowId",
                    "toStepId"
                  ],
                  "properties": {
                    "workflowId": {
                      "type": "string"
                    },
                    "fromStepId": {
                      "type": "string",
                      "nullable": true
                    },
                    "toStepId": {
                      "type": "string"
                    }
                  }
                }
              },
              "stepToAsset": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "workflowId",
                    "stepId",
                    "assetId",
                    "normalizedAssetId",
                    "direction"
                  ],
                  "properties": {
                    "workflowId": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "produces",
                        "consumes"
                      ]
                    },
                    "freshness": {
                      "type": "object",
                      "properties": {
                        "maxAgeMs": {
                          "type": "integer",
                          "nullable": true
                        },
                        "ttlMs": {
                          "type": "integer",
                          "nullable": true
                        },
                        "cadenceMs": {
                          "type": "integer",
                          "nullable": true
                        }
                      },
                      "nullable": true
                    },
                    "partitioning": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "granularity"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "timeWindow"
                              ]
                            },
                            "granularity": {
                              "type": "string",
                              "enum": [
                                "minute",
                                "hour",
                                "day",
                                "week",
                                "month"
                              ]
                            },
                            "timezone": {
                              "type": "string",
                              "nullable": true
                            },
                            "format": {
                              "type": "string",
                              "nullable": true
                            },
                            "lookbackWindows": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "keys"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "static"
                              ]
                            },
                            "keys": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "dynamic"
                              ]
                            },
                            "maxKeys": {
                              "type": "integer",
                              "nullable": true
                            },
                            "retentionDays": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        }
                      ],
                      "nullable": true
                    },
                    "autoMaterialize": {
                      "type": "object",
                      "properties": {
                        "onUpstreamUpdate": {
                          "type": "boolean"
                        },
                        "priority": {
                          "type": "integer",
                          "nullable": true
                        },
                        "parameterDefaults": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        }
                      },
                      "nullable": true
                    }
                  }
                }
              },
              "assetToWorkflow": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "assetId",
                    "normalizedAssetId",
                    "workflowId",
                    "reason"
                  ],
                  "properties": {
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string",
                      "nullable": true
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "auto-materialize"
                      ]
                    },
                    "priority": {
                      "type": "integer",
                      "nullable": true
                    }
                  }
                }
              },
              "eventSourceToTrigger": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "sourceId",
                    "triggerId"
                  ],
                  "properties": {
                    "sourceId": {
                      "type": "string"
                    },
                    "triggerId": {
                      "type": "string"
                    }
                  }
                }
              },
              "stepToEventSource": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "workflowId",
                    "stepId",
                    "sourceId",
                    "kind",
                    "confidence"
                  ],
                  "properties": {
                    "workflowId": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string"
                    },
                    "sourceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "inferred"
                      ]
                    },
                    "confidence": {
                      "type": "object",
                      "required": [
                        "sampleCount",
                        "lastSeenAt"
                      ],
                      "properties": {
                        "sampleCount": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "lastSeenAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "WorkflowGraphCacheMeta": {
        "type": "object",
        "required": [
          "hit",
          "stats"
        ],
        "properties": {
          "hit": {
            "type": "boolean"
          },
          "cachedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ageMs": {
            "type": "integer",
            "nullable": true
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "stats": {
            "type": "object",
            "required": [
              "hits",
              "misses",
              "invalidations"
            ],
            "properties": {
              "hits": {
                "type": "integer"
              },
              "misses": {
                "type": "integer"
              },
              "invalidations": {
                "type": "integer"
              }
            }
          },
          "lastInvalidatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastInvalidationReason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WorkflowGraphCacheStats": {
        "type": "object",
        "required": [
          "hits",
          "misses",
          "invalidations"
        ],
        "properties": {
          "hits": {
            "type": "integer"
          },
          "misses": {
            "type": "integer"
          },
          "invalidations": {
            "type": "integer"
          }
        }
      },
      "WorkflowGraphResponse": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "version",
              "generatedAt",
              "nodes",
              "edges"
            ],
            "properties": {
              "version": {
                "type": "string",
                "enum": [
                  "v1",
                  "v2"
                ]
              },
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "nodes": {
                "type": "object",
                "required": [
                  "workflows",
                  "steps",
                  "triggers",
                  "schedules",
                  "assets",
                  "eventSources"
                ],
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "slug",
                        "name",
                        "version",
                        "createdAt",
                        "updatedAt",
                        "annotations"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "version": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "metadata": {
                          "type": "object",
                          "additionalProperties": {
                            "description": "Arbitrary JSON value.",
                            "nullable": true,
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          "nullable": true
                        },
                        "annotations": {
                          "type": "object",
                          "required": [
                            "tags"
                          ],
                          "properties": {
                            "tags": {
                              "type": "array",
                              "description": "Annotation tags that can be used for filtering and grouping.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ownerName": {
                              "type": "string",
                              "nullable": true
                            },
                            "ownerContact": {
                              "type": "string",
                              "nullable": true
                            },
                            "team": {
                              "type": "string",
                              "nullable": true
                            },
                            "domain": {
                              "type": "string",
                              "nullable": true
                            },
                            "environment": {
                              "type": "string",
                              "nullable": true
                            },
                            "slo": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "name",
                        "type",
                        "dependsOn",
                        "dependents",
                        "runtime"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "job",
                            "service",
                            "fanout"
                          ]
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dependents": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "runtime": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "jobSlug"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "job"
                                  ]
                                },
                                "jobSlug": {
                                  "type": "string"
                                },
                                "bundleStrategy": {
                                  "type": "string",
                                  "enum": [
                                    "latest",
                                    "pinned"
                                  ],
                                  "nullable": true
                                },
                                "bundleSlug": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "bundleVersion": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "exportName": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "timeoutMs": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "serviceSlug"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "service"
                                  ]
                                },
                                "serviceSlug": {
                                  "type": "string"
                                },
                                "timeoutMs": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "requireHealthy": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "allowDegraded": {
                                  "type": "boolean",
                                  "nullable": true
                                },
                                "captureResponse": {
                                  "type": "boolean",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "collection",
                                "template"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fanout"
                                  ]
                                },
                                "collection": {
                                  "description": "Arbitrary JSON value.",
                                  "nullable": true,
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                "maxItems": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "maxConcurrency": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "storeResultsAs": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "template": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "runtime"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "runtime": {
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "jobSlug"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "job"
                                              ]
                                            },
                                            "jobSlug": {
                                              "type": "string"
                                            },
                                            "bundleStrategy": {
                                              "type": "string",
                                              "enum": [
                                                "latest",
                                                "pinned"
                                              ],
                                              "nullable": true
                                            },
                                            "bundleSlug": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "bundleVersion": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "exportName": {
                                              "type": "string",
                                              "nullable": true
                                            },
                                            "timeoutMs": {
                                              "type": "integer",
                                              "nullable": true
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "serviceSlug"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "service"
                                              ]
                                            },
                                            "serviceSlug": {
                                              "type": "string"
                                            },
                                            "timeoutMs": {
                                              "type": "integer",
                                              "nullable": true
                                            },
                                            "requireHealthy": {
                                              "type": "boolean",
                                              "nullable": true
                                            },
                                            "allowDegraded": {
                                              "type": "boolean",
                                              "nullable": true
                                            },
                                            "captureResponse": {
                                              "type": "boolean",
                                              "nullable": true
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "triggers": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "workflowId",
                            "kind",
                            "triggerType"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "definition"
                              ]
                            },
                            "triggerType": {
                              "type": "string"
                            },
                            "options": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "schedule": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "cron"
                                  ],
                                  "properties": {
                                    "cron": {
                                      "type": "string"
                                    },
                                    "timezone": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "startWindow": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "endWindow": {
                                      "type": "string",
                                      "nullable": true
                                    },
                                    "catchUp": {
                                      "type": "boolean",
                                      "nullable": true
                                    }
                                  }
                                }
                              ],
                              "nullable": true
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "workflowId",
                            "kind",
                            "status",
                            "eventType",
                            "predicates",
                            "parameterTemplate",
                            "runKeyTemplate",
                            "throttleWindowMs",
                            "throttleCount",
                            "maxConcurrency",
                            "idempotencyKeyExpression",
                            "metadata",
                            "createdAt",
                            "updatedAt"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "event"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "nullable": true
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "disabled"
                              ]
                            },
                            "eventType": {
                              "type": "string"
                            },
                            "eventSource": {
                              "type": "string",
                              "nullable": true
                            },
                            "predicates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "path",
                                  "operator"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "jsonPath"
                                    ]
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Arbitrary JSON value.",
                                    "nullable": true,
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      }
                                    ]
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "description": "Arbitrary JSON value.",
                                      "nullable": true,
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "caseSensitive": {
                                    "type": "boolean"
                                  },
                                  "flags": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                }
                              }
                            },
                            "parameterTemplate": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "runKeyTemplate": {
                              "type": "string",
                              "nullable": true
                            },
                            "throttleWindowMs": {
                              "type": "integer",
                              "nullable": true
                            },
                            "throttleCount": {
                              "type": "integer",
                              "nullable": true
                            },
                            "maxConcurrency": {
                              "type": "integer",
                              "nullable": true
                            },
                            "idempotencyKeyExpression": {
                              "type": "string",
                              "nullable": true
                            },
                            "metadata": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "createdBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "updatedBy": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      ]
                    }
                  },
                  "schedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "cron",
                        "timezone",
                        "parameters",
                        "startWindow",
                        "endWindow",
                        "catchUp",
                        "nextRunAt",
                        "isActive",
                        "createdAt",
                        "updatedAt"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        },
                        "cron": {
                          "type": "string"
                        },
                        "timezone": {
                          "type": "string",
                          "nullable": true
                        },
                        "parameters": {
                          "description": "Arbitrary JSON value.",
                          "nullable": true,
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        "startWindow": {
                          "type": "string",
                          "nullable": true
                        },
                        "endWindow": {
                          "type": "string",
                          "nullable": true
                        },
                        "catchUp": {
                          "type": "boolean"
                        },
                        "nextRunAt": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "isActive": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "assetId",
                        "normalizedAssetId",
                        "annotations"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string"
                        },
                        "normalizedAssetId": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "object",
                          "required": [
                            "tags"
                          ],
                          "properties": {
                            "tags": {
                              "type": "array",
                              "description": "Annotation tags that can be used for filtering and grouping.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ownerName": {
                              "type": "string",
                              "nullable": true
                            },
                            "ownerContact": {
                              "type": "string",
                              "nullable": true
                            },
                            "team": {
                              "type": "string",
                              "nullable": true
                            },
                            "domain": {
                              "type": "string",
                              "nullable": true
                            },
                            "environment": {
                              "type": "string",
                              "nullable": true
                            },
                            "slo": {
                              "type": "string",
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "eventSources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "eventType"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "eventType": {
                          "type": "string"
                        },
                        "eventSource": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              },
              "edges": {
                "type": "object",
                "required": [
                  "triggerToWorkflow",
                  "workflowToStep",
                  "stepToAsset",
                  "assetToWorkflow",
                  "eventSourceToTrigger",
                  "stepToEventSource"
                ],
                "properties": {
                  "triggerToWorkflow": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "kind",
                            "triggerId",
                            "workflowId"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "event-trigger",
                                "definition-trigger"
                              ]
                            },
                            "triggerId": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "kind",
                            "scheduleId",
                            "workflowId"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "schedule"
                              ]
                            },
                            "scheduleId": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "workflowToStep": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "workflowId",
                        "toStepId"
                      ],
                      "properties": {
                        "workflowId": {
                          "type": "string"
                        },
                        "fromStepId": {
                          "type": "string",
                          "nullable": true
                        },
                        "toStepId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "stepToAsset": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "workflowId",
                        "stepId",
                        "assetId",
                        "normalizedAssetId",
                        "direction"
                      ],
                      "properties": {
                        "workflowId": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string"
                        },
                        "normalizedAssetId": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "produces",
                            "consumes"
                          ]
                        },
                        "freshness": {
                          "type": "object",
                          "properties": {
                            "maxAgeMs": {
                              "type": "integer",
                              "nullable": true
                            },
                            "ttlMs": {
                              "type": "integer",
                              "nullable": true
                            },
                            "cadenceMs": {
                              "type": "integer",
                              "nullable": true
                            }
                          },
                          "nullable": true
                        },
                        "partitioning": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "granularity"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "timeWindow"
                                  ]
                                },
                                "granularity": {
                                  "type": "string",
                                  "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                  ]
                                },
                                "timezone": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "format": {
                                  "type": "string",
                                  "nullable": true
                                },
                                "lookbackWindows": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "keys"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "static"
                                  ]
                                },
                                "keys": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "dynamic"
                                  ]
                                },
                                "maxKeys": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "retentionDays": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            }
                          ],
                          "nullable": true
                        },
                        "autoMaterialize": {
                          "type": "object",
                          "properties": {
                            "onUpstreamUpdate": {
                              "type": "boolean"
                            },
                            "priority": {
                              "type": "integer",
                              "nullable": true
                            },
                            "parameterDefaults": {
                              "description": "Arbitrary JSON value.",
                              "nullable": true,
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            }
                          },
                          "nullable": true
                        }
                      }
                    }
                  },
                  "assetToWorkflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "assetId",
                        "normalizedAssetId",
                        "workflowId",
                        "reason"
                      ],
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "normalizedAssetId": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string",
                          "nullable": true
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "auto-materialize"
                          ]
                        },
                        "priority": {
                          "type": "integer",
                          "nullable": true
                        }
                      }
                    }
                  },
                  "eventSourceToTrigger": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "sourceId",
                        "triggerId"
                      ],
                      "properties": {
                        "sourceId": {
                          "type": "string"
                        },
                        "triggerId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "stepToEventSource": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "workflowId",
                        "stepId",
                        "sourceId",
                        "kind",
                        "confidence"
                      ],
                      "properties": {
                        "workflowId": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string"
                        },
                        "sourceId": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "inferred"
                          ]
                        },
                        "confidence": {
                          "type": "object",
                          "required": [
                            "sampleCount",
                            "lastSeenAt"
                          ],
                          "properties": {
                            "sampleCount": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "lastSeenAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "cache"
            ],
            "properties": {
              "cache": {
                "type": "object",
                "required": [
                  "hit",
                  "stats"
                ],
                "properties": {
                  "hit": {
                    "type": "boolean"
                  },
                  "cachedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "ageMs": {
                    "type": "integer",
                    "nullable": true
                  },
                  "expiresAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "stats": {
                    "type": "object",
                    "required": [
                      "hits",
                      "misses",
                      "invalidations"
                    ],
                    "properties": {
                      "hits": {
                        "type": "integer"
                      },
                      "misses": {
                        "type": "integer"
                      },
                      "invalidations": {
                        "type": "integer"
                      }
                    }
                  },
                  "lastInvalidatedAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "lastInvalidationReason": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "description": "Arbitrary JSON value.",
            "nullable": true,
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          }
        }
      },
      "def-0": {
        "anyOf": [
          {
            "description": "Arbitrary JSON value.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "integer"
              },
              {
                "type": "boolean"
              },
              {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-0"
                }
              },
              {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            ]
          },
          {
            "type": "null"
          }
        ],
        "title": "https://catalog.apphub/schemas/JsonValue.json"
      },
      "def-1": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Tag key."
          },
          "value": {
            "type": "string",
            "description": "Tag value."
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryTag.json"
      },
      "def-2": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Environment variable name."
          },
          "value": {
            "type": "string",
            "description": "Environment variable value."
          }
        },
        "title": "https://catalog.apphub/schemas/LaunchEnvVar.json"
      },
      "def-3": {
        "type": "object",
        "required": [
          "id",
          "repositoryId",
          "status",
          "imageTag",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique build identifier."
          },
          "repositoryId": {
            "type": "string",
            "description": "Identifier of the source repository."
          },
          "status": {
            "type": "string",
            "description": "Current build status.",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled"
            ]
          },
          "imageTag": {
            "type": [
              "string",
              "null"
            ]
          },
          "errorMessage": {
            "type": [
              "string",
              "null"
            ]
          },
          "commitSha": {
            "type": [
              "string",
              "null"
            ]
          },
          "gitBranch": {
            "type": [
              "string",
              "null"
            ]
          },
          "gitRef": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "completedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "durationMs": {
            "type": [
              "integer",
              "null"
            ]
          },
          "logsPreview": {
            "type": [
              "string",
              "null"
            ]
          },
          "logsTruncated": {
            "type": "boolean"
          },
          "hasLogs": {
            "type": "boolean"
          },
          "logsSize": {
            "type": "integer",
            "description": "Size of the captured logs in bytes."
          }
        },
        "title": "https://catalog.apphub/schemas/Build.json"
      },
      "def-4": {
        "type": "object",
        "required": [
          "id",
          "status",
          "buildId",
          "repositoryId",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "starting",
              "running",
              "stopping",
              "stopped",
              "failed"
            ]
          },
          "buildId": {
            "type": [
              "string",
              "null"
            ]
          },
          "repositoryId": {
            "type": "string"
          },
          "instanceUrl": {
            "type": [
              "string",
              "null"
            ]
          },
          "resourceProfile": {
            "type": [
              "string",
              "null"
            ]
          },
          "env": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Environment variable name."
                },
                "value": {
                  "type": "string",
                  "description": "Environment variable value."
                }
              }
            },
            "description": "Environment variables used when starting the launch."
          },
          "command": {
            "type": [
              "string",
              "null"
            ]
          },
          "errorMessage": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "startedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "stoppedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "expiresAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "port": {
            "type": [
              "integer",
              "null"
            ]
          },
          "internalPort": {
            "type": [
              "integer",
              "null"
            ]
          },
          "containerIp": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/Launch.json"
      },
      "def-5": {
        "type": "object",
        "required": [
          "id",
          "kind",
          "title",
          "description",
          "src",
          "embedUrl",
          "posterUrl",
          "width",
          "height",
          "sortOrder",
          "source"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "title": {
            "type": [
              "string",
              "null"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "src": {
            "type": [
              "string",
              "null"
            ]
          },
          "embedUrl": {
            "type": [
              "string",
              "null"
            ]
          },
          "posterUrl": {
            "type": [
              "string",
              "null"
            ]
          },
          "width": {
            "type": [
              "integer",
              "null"
            ]
          },
          "height": {
            "type": [
              "integer",
              "null"
            ]
          },
          "sortOrder": {
            "type": "integer"
          },
          "source": {
            "type": "string"
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryPreview.json"
      },
      "def-6": {
        "type": "object",
        "required": [
          "hits",
          "score",
          "weight"
        ],
        "properties": {
          "hits": {
            "type": "integer"
          },
          "score": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryRelevanceComponent.json"
      },
      "def-7": {
        "type": "object",
        "required": [
          "score",
          "normalizedScore",
          "components"
        ],
        "properties": {
          "score": {
            "type": "number"
          },
          "normalizedScore": {
            "type": "number"
          },
          "components": {
            "type": "object",
            "required": [
              "name",
              "description",
              "tags"
            ],
            "properties": {
              "name": {
                "type": "object",
                "required": [
                  "hits",
                  "score",
                  "weight"
                ],
                "properties": {
                  "hits": {
                    "type": "integer"
                  },
                  "score": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              },
              "description": {
                "type": "object",
                "required": [
                  "hits",
                  "score",
                  "weight"
                ],
                "properties": {
                  "hits": {
                    "type": "integer"
                  },
                  "score": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              },
              "tags": {
                "type": "object",
                "required": [
                  "hits",
                  "score",
                  "weight"
                ],
                "properties": {
                  "hits": {
                    "type": "integer"
                  },
                  "score": {
                    "type": "number"
                  },
                  "weight": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryRelevance.json"
      },
      "def-8": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoUrl",
          "dockerfilePath",
          "updatedAt",
          "ingestStatus",
          "ingestAttempts",
          "tags",
          "previewTiles",
          "launchEnvTemplates"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Repository identifier."
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "repoUrl": {
            "type": "string",
            "description": "Git or HTTP URL where the repository is hosted."
          },
          "dockerfilePath": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "ingestStatus": {
            "type": "string",
            "enum": [
              "seed",
              "pending",
              "processing",
              "ready",
              "failed"
            ]
          },
          "ingestError": {
            "type": [
              "string",
              "null"
            ]
          },
          "ingestAttempts": {
            "type": "integer"
          },
          "latestBuild": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/def-3"
              },
              {
                "type": "null"
              }
            ]
          },
          "latestLaunch": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/def-4"
              },
              {
                "type": "null"
              }
            ]
          },
          "previewTiles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "kind",
                "title",
                "description",
                "src",
                "embedUrl",
                "posterUrl",
                "width",
                "height",
                "sortOrder",
                "source"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "title": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "src": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "embedUrl": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "posterUrl": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "width": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "height": {
                  "type": [
                    "integer",
                    "null"
                  ]
                },
                "sortOrder": {
                  "type": "integer"
                },
                "source": {
                  "type": "string"
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Tag key."
                },
                "value": {
                  "type": "string",
                  "description": "Tag value."
                }
              }
            }
          },
          "launchEnvTemplates": {
            "type": "array",
            "description": "Template environment variables suggested when launching the app.",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Environment variable name."
                },
                "value": {
                  "type": "string",
                  "description": "Environment variable value."
                }
              }
            }
          },
          "relevance": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/def-7"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/Repository.json"
      },
      "def-9": {
        "type": "object",
        "required": [
          "data",
          "facets",
          "total",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "name",
                "description",
                "repoUrl",
                "dockerfilePath",
                "updatedAt",
                "ingestStatus",
                "ingestAttempts",
                "tags",
                "previewTiles",
                "launchEnvTemplates"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Repository identifier."
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "repoUrl": {
                  "type": "string",
                  "description": "Git or HTTP URL where the repository is hosted."
                },
                "dockerfilePath": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "ingestStatus": {
                  "type": "string",
                  "enum": [
                    "seed",
                    "pending",
                    "processing",
                    "ready",
                    "failed"
                  ]
                },
                "ingestError": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "ingestAttempts": {
                  "type": "integer"
                },
                "latestBuild": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/def-3"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "latestLaunch": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/def-4"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "previewTiles": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "kind",
                      "title",
                      "description",
                      "src",
                      "embedUrl",
                      "posterUrl",
                      "width",
                      "height",
                      "sortOrder",
                      "source"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "title": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "description": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "src": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "embedUrl": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "posterUrl": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "width": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "height": {
                        "type": [
                          "null",
                          "integer"
                        ]
                      },
                      "sortOrder": {
                        "type": "integer"
                      },
                      "source": {
                        "type": "string"
                      }
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Tag key."
                      },
                      "value": {
                        "type": "string",
                        "description": "Tag value."
                      }
                    }
                  }
                },
                "launchEnvTemplates": {
                  "type": "array",
                  "description": "Template environment variables suggested when launching the app.",
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "value"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "description": "Environment variable name."
                      },
                      "value": {
                        "type": "string",
                        "description": "Environment variable value."
                      }
                    }
                  }
                },
                "relevance": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/def-7"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "facets": {
            "type": "object",
            "required": [
              "tags",
              "statuses",
              "owners",
              "frameworks"
            ],
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value",
                    "count"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              },
              "statuses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "status",
                    "count"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "seed",
                        "pending",
                        "processing",
                        "ready",
                        "failed"
                      ]
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              },
              "owners": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value",
                    "count"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              },
              "frameworks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value",
                    "count"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "count": {
                      "type": "integer",
                      "minimum": 0
                    }
                  }
                }
              }
            }
          },
          "total": {
            "type": "integer",
            "minimum": 0
          },
          "meta": {
            "type": "object",
            "required": [
              "tokens",
              "sort",
              "weights"
            ],
            "properties": {
              "tokens": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "sort": {
                "type": "string",
                "enum": [
                  "relevance",
                  "updated",
                  "name"
                ]
              },
              "weights": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "tags"
                ],
                "properties": {
                  "name": {
                    "type": "number"
                  },
                  "description": {
                    "type": "number"
                  },
                  "tags": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryListResponse.json"
      },
      "def-10": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "name",
              "description",
              "repoUrl",
              "dockerfilePath",
              "updatedAt",
              "ingestStatus",
              "ingestAttempts",
              "tags",
              "previewTiles",
              "launchEnvTemplates"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Repository identifier."
              },
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "repoUrl": {
                "type": "string",
                "description": "Git or HTTP URL where the repository is hosted."
              },
              "dockerfilePath": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "ingestStatus": {
                "type": "string",
                "enum": [
                  "seed",
                  "pending",
                  "processing",
                  "ready",
                  "failed"
                ]
              },
              "ingestError": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "ingestAttempts": {
                "type": "integer"
              },
              "latestBuild": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-3"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "latestLaunch": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-4"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "previewTiles": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "kind",
                    "title",
                    "description",
                    "src",
                    "embedUrl",
                    "posterUrl",
                    "width",
                    "height",
                    "sortOrder",
                    "source"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "title": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "description": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "src": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "embedUrl": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "posterUrl": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "width": {
                      "type": [
                        "null",
                        "integer"
                      ]
                    },
                    "height": {
                      "type": [
                        "null",
                        "integer"
                      ]
                    },
                    "sortOrder": {
                      "type": "integer"
                    },
                    "source": {
                      "type": "string"
                    }
                  }
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Tag key."
                    },
                    "value": {
                      "type": "string",
                      "description": "Tag value."
                    }
                  }
                }
              },
              "launchEnvTemplates": {
                "type": "array",
                "description": "Template environment variables suggested when launching the app.",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Environment variable name."
                    },
                    "value": {
                      "type": "string",
                      "description": "Environment variable value."
                    }
                  }
                }
              },
              "relevance": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-7"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryResponse.json"
      },
      "def-11": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "searchInput",
          "statusFilters",
          "sort",
          "category",
          "config",
          "visibility",
          "appliedCount",
          "sharedCount",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Saved search identifier."
          },
          "slug": {
            "type": "string",
            "description": "Shareable slug referencing the saved search."
          },
          "name": {
            "type": "string",
            "description": "Human friendly label for the saved query."
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "searchInput": {
            "type": "string",
            "description": "Raw catalog search input as entered by the operator."
          },
          "statusFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "seed",
                "pending",
                "processing",
                "ready",
                "failed"
              ]
            },
            "description": "Selected ingest status filters applied when executing the saved search."
          },
          "sort": {
            "type": "string",
            "enum": [
              "relevance",
              "updated",
              "name"
            ],
            "description": "Preferred sort mode."
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private"
            ],
            "description": "Visibility of the saved search. Currently limited to private entries."
          },
          "appliedCount": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of times the saved search has been applied."
          },
          "sharedCount": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of share actions recorded for the saved search."
          },
          "lastAppliedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "lastSharedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/SavedCatalogSearch.json"
      },
      "def-12": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "searchInput",
              "statusFilters",
              "sort",
              "category",
              "config",
              "visibility",
              "appliedCount",
              "sharedCount",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Saved search identifier."
              },
              "slug": {
                "type": "string",
                "description": "Shareable slug referencing the saved search."
              },
              "name": {
                "type": "string",
                "description": "Human friendly label for the saved query."
              },
              "description": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "searchInput": {
                "type": "string",
                "description": "Raw catalog search input as entered by the operator."
              },
              "statusFilters": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "seed",
                    "pending",
                    "processing",
                    "ready",
                    "failed"
                  ]
                },
                "description": "Selected ingest status filters applied when executing the saved search."
              },
              "sort": {
                "type": "string",
                "enum": [
                  "relevance",
                  "updated",
                  "name"
                ],
                "description": "Preferred sort mode."
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "private"
                ],
                "description": "Visibility of the saved search. Currently limited to private entries."
              },
              "appliedCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of times the saved search has been applied."
              },
              "sharedCount": {
                "type": "integer",
                "minimum": 0,
                "description": "Number of share actions recorded for the saved search."
              },
              "lastAppliedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time"
              },
              "lastSharedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/SavedCatalogSearchResponse.json"
      },
      "def-13": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "searchInput",
                "statusFilters",
                "sort",
                "category",
                "config",
                "visibility",
                "appliedCount",
                "sharedCount",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Saved search identifier."
                },
                "slug": {
                  "type": "string",
                  "description": "Shareable slug referencing the saved search."
                },
                "name": {
                  "type": "string",
                  "description": "Human friendly label for the saved query."
                },
                "description": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "searchInput": {
                  "type": "string",
                  "description": "Raw catalog search input as entered by the operator."
                },
                "statusFilters": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "seed",
                      "pending",
                      "processing",
                      "ready",
                      "failed"
                    ]
                  },
                  "description": "Selected ingest status filters applied when executing the saved search."
                },
                "sort": {
                  "type": "string",
                  "enum": [
                    "relevance",
                    "updated",
                    "name"
                  ],
                  "description": "Preferred sort mode."
                },
                "visibility": {
                  "type": "string",
                  "enum": [
                    "private"
                  ],
                  "description": "Visibility of the saved search. Currently limited to private entries."
                },
                "appliedCount": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of times the saved search has been applied."
                },
                "sharedCount": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of share actions recorded for the saved search."
                },
                "lastAppliedAt": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "lastSharedAt": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/SavedCatalogSearchListResponse.json"
      },
      "def-14": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 100
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "searchInput": {
            "type": "string",
            "maxLength": 500
          },
          "statusFilters": {
            "type": "array",
            "maxItems": 50,
            "items": {
              "type": "string"
            },
            "description": "Selected status filters applied when executing the saved search."
          },
          "sort": {
            "type": "string",
            "maxLength": 100,
            "description": "Preferred sort mode for rendering results."
          },
          "category": {
            "type": "string",
            "maxLength": 100,
            "description": "Logical grouping for the saved search (e.g. catalog, runs)."
          },
          "config": {
            "type": "object",
            "additionalProperties": true,
            "description": "Structured configuration used to rehydrate saved filters."
          }
        },
        "title": "https://catalog.apphub/schemas/SavedCatalogSearchCreateRequest.json"
      },
      "def-15": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "maxLength": 100
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "searchInput": {
                "type": "string",
                "maxLength": 500
              },
              "statusFilters": {
                "type": "array",
                "maxItems": 50,
                "items": {
                  "type": "string"
                },
                "description": "Selected status filters applied when executing the saved search."
              },
              "sort": {
                "type": "string",
                "maxLength": 100,
                "description": "Preferred sort mode for rendering results."
              },
              "category": {
                "type": "string",
                "maxLength": 100,
                "description": "Logical grouping for the saved search (e.g. catalog, runs)."
              },
              "config": {
                "type": "object",
                "additionalProperties": true,
                "description": "Structured configuration used to rehydrate saved filters."
              }
            },
            "additionalProperties": false
          }
        ],
        "title": "https://catalog.apphub/schemas/SavedCatalogSearchUpdateRequest.json"
      },
      "def-16": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string",
            "maxLength": 200
          },
          "source": {
            "type": "string",
            "maxLength": 200
          },
          "correlationId": {
            "type": "string",
            "maxLength": 200
          },
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          },
          "jsonPath": {
            "type": "string",
            "maxLength": 500
          },
          "severity": {
            "type": "array",
            "maxItems": 5,
            "items": {
              "type": "string",
              "enum": [
                "critical",
                "error",
                "warning",
                "info",
                "debug"
              ]
            }
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 200
          }
        },
        "title": "https://catalog.apphub/schemas/EventSavedViewFilters.json"
      },
      "def-17": {
        "type": "object",
        "required": [
          "windowSeconds",
          "totalEvents",
          "errorEvents",
          "eventRatePerMinute",
          "errorRatio",
          "generatedAt",
          "sampledCount",
          "sampleLimit",
          "truncated"
        ],
        "properties": {
          "windowSeconds": {
            "type": "integer",
            "minimum": 60
          },
          "totalEvents": {
            "type": "integer",
            "minimum": 0
          },
          "errorEvents": {
            "type": "integer",
            "minimum": 0
          },
          "eventRatePerMinute": {
            "type": "number",
            "minimum": 0
          },
          "errorRatio": {
            "type": "number",
            "minimum": 0
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sampledCount": {
            "type": "integer",
            "minimum": 0
          },
          "sampleLimit": {
            "type": "integer",
            "minimum": 1
          },
          "truncated": {
            "type": "boolean"
          }
        },
        "title": "https://catalog.apphub/schemas/EventSavedViewAnalytics.json"
      },
      "def-18": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "filters",
          "visibility",
          "appliedCount",
          "sharedCount",
          "createdAt",
          "updatedAt",
          "owner"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Saved view identifier."
          },
          "slug": {
            "type": "string",
            "description": "Slug used to reference the saved view."
          },
          "name": {
            "type": "string",
            "description": "Display name for the saved view."
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "filters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "maxLength": 200
              },
              "source": {
                "type": "string",
                "maxLength": 200
              },
              "correlationId": {
                "type": "string",
                "maxLength": 200
              },
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "jsonPath": {
                "type": "string",
                "maxLength": 500
              },
              "severity": {
                "type": "array",
                "maxItems": 5,
                "items": {
                  "type": "string",
                  "enum": [
                    "critical",
                    "error",
                    "warning",
                    "info",
                    "debug"
                  ]
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 200
              }
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "shared"
            ]
          },
          "appliedCount": {
            "type": "integer",
            "minimum": 0
          },
          "sharedCount": {
            "type": "integer",
            "minimum": 0
          },
          "lastAppliedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "lastSharedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "owner": {
            "type": "object",
            "required": [
              "key",
              "subject",
              "kind"
            ],
            "properties": {
              "key": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "user",
                  "service"
                ]
              },
              "userId": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "analytics": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "windowSeconds",
              "totalEvents",
              "errorEvents",
              "eventRatePerMinute",
              "errorRatio",
              "generatedAt",
              "sampledCount",
              "sampleLimit",
              "truncated"
            ],
            "properties": {
              "windowSeconds": {
                "type": "integer",
                "minimum": 60
              },
              "totalEvents": {
                "type": "integer",
                "minimum": 0
              },
              "errorEvents": {
                "type": "integer",
                "minimum": 0
              },
              "eventRatePerMinute": {
                "type": "number",
                "minimum": 0
              },
              "errorRatio": {
                "type": "number",
                "minimum": 0
              },
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "sampledCount": {
                "type": "integer",
                "minimum": 0
              },
              "sampleLimit": {
                "type": "integer",
                "minimum": 1
              },
              "truncated": {
                "type": "boolean"
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/EventSavedView.json"
      },
      "def-19": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "filters",
              "visibility",
              "appliedCount",
              "sharedCount",
              "createdAt",
              "updatedAt",
              "owner"
            ],
            "properties": {
              "id": {
                "type": "string",
                "description": "Saved view identifier."
              },
              "slug": {
                "type": "string",
                "description": "Slug used to reference the saved view."
              },
              "name": {
                "type": "string",
                "description": "Display name for the saved view."
              },
              "description": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "filters": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "source": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "correlationId": {
                    "type": "string",
                    "maxLength": 200
                  },
                  "from": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "to": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "jsonPath": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "severity": {
                    "type": "array",
                    "maxItems": 5,
                    "items": {
                      "type": "string",
                      "enum": [
                        "critical",
                        "error",
                        "warning",
                        "info",
                        "debug"
                      ]
                    }
                  },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 200
                  }
                }
              },
              "visibility": {
                "type": "string",
                "enum": [
                  "private",
                  "shared"
                ]
              },
              "appliedCount": {
                "type": "integer",
                "minimum": 0
              },
              "sharedCount": {
                "type": "integer",
                "minimum": 0
              },
              "lastAppliedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time"
              },
              "lastSharedAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "owner": {
                "type": "object",
                "required": [
                  "key",
                  "subject",
                  "kind"
                ],
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "subject": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string",
                    "enum": [
                      "user",
                      "service"
                    ]
                  },
                  "userId": {
                    "type": [
                      "null",
                      "string"
                    ]
                  }
                }
              },
              "analytics": {
                "type": [
                  "null",
                  "object"
                ],
                "required": [
                  "windowSeconds",
                  "totalEvents",
                  "errorEvents",
                  "eventRatePerMinute",
                  "errorRatio",
                  "generatedAt",
                  "sampledCount",
                  "sampleLimit",
                  "truncated"
                ],
                "properties": {
                  "windowSeconds": {
                    "type": "integer",
                    "minimum": 60
                  },
                  "totalEvents": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "errorEvents": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "eventRatePerMinute": {
                    "type": "number",
                    "minimum": 0
                  },
                  "errorRatio": {
                    "type": "number",
                    "minimum": 0
                  },
                  "generatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "sampledCount": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "sampleLimit": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "truncated": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/EventSavedViewResponse.json"
      },
      "def-20": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "filters",
                "visibility",
                "appliedCount",
                "sharedCount",
                "createdAt",
                "updatedAt",
                "owner"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Saved view identifier."
                },
                "slug": {
                  "type": "string",
                  "description": "Slug used to reference the saved view."
                },
                "name": {
                  "type": "string",
                  "description": "Display name for the saved view."
                },
                "description": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "filters": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "source": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "correlationId": {
                      "type": "string",
                      "maxLength": 200
                    },
                    "from": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "to": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "jsonPath": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "severity": {
                      "type": "array",
                      "maxItems": 5,
                      "items": {
                        "type": "string",
                        "enum": [
                          "critical",
                          "error",
                          "warning",
                          "info",
                          "debug"
                        ]
                      }
                    },
                    "limit": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 200
                    }
                  }
                },
                "visibility": {
                  "type": "string",
                  "enum": [
                    "private",
                    "shared"
                  ]
                },
                "appliedCount": {
                  "type": "integer",
                  "minimum": 0
                },
                "sharedCount": {
                  "type": "integer",
                  "minimum": 0
                },
                "lastAppliedAt": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "lastSharedAt": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "owner": {
                  "type": "object",
                  "required": [
                    "key",
                    "subject",
                    "kind"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "subject": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "user",
                        "service"
                      ]
                    },
                    "userId": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  }
                },
                "analytics": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "required": [
                    "windowSeconds",
                    "totalEvents",
                    "errorEvents",
                    "eventRatePerMinute",
                    "errorRatio",
                    "generatedAt",
                    "sampledCount",
                    "sampleLimit",
                    "truncated"
                  ],
                  "properties": {
                    "windowSeconds": {
                      "type": "integer",
                      "minimum": 60
                    },
                    "totalEvents": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "errorEvents": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "eventRatePerMinute": {
                      "type": "number",
                      "minimum": 0
                    },
                    "errorRatio": {
                      "type": "number",
                      "minimum": 0
                    },
                    "generatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "sampledCount": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "sampleLimit": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "truncated": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/EventSavedViewListResponse.json"
      },
      "def-21": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "filters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "maxLength": 200
              },
              "source": {
                "type": "string",
                "maxLength": 200
              },
              "correlationId": {
                "type": "string",
                "maxLength": 200
              },
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "jsonPath": {
                "type": "string",
                "maxLength": 500
              },
              "severity": {
                "type": "array",
                "maxItems": 5,
                "items": {
                  "type": "string",
                  "enum": [
                    "critical",
                    "error",
                    "warning",
                    "info",
                    "debug"
                  ]
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 200
              }
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "shared"
            ]
          }
        },
        "additionalProperties": false,
        "title": "https://catalog.apphub/schemas/EventSavedViewCreateRequest.json"
      },
      "def-22": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 120
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "filters": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "type": {
                "type": "string",
                "maxLength": 200
              },
              "source": {
                "type": "string",
                "maxLength": 200
              },
              "correlationId": {
                "type": "string",
                "maxLength": 200
              },
              "from": {
                "type": "string",
                "format": "date-time"
              },
              "to": {
                "type": "string",
                "format": "date-time"
              },
              "jsonPath": {
                "type": "string",
                "maxLength": 500
              },
              "severity": {
                "type": "array",
                "maxItems": 5,
                "items": {
                  "type": "string",
                  "enum": [
                    "critical",
                    "error",
                    "warning",
                    "info",
                    "debug"
                  ]
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 200
              }
            }
          },
          "visibility": {
            "type": "string",
            "enum": [
              "private",
              "shared"
            ]
          }
        },
        "additionalProperties": false,
        "title": "https://catalog.apphub/schemas/EventSavedViewUpdateRequest.json"
      },
      "def-23": {
        "type": "object",
        "required": [
          "subject",
          "kind",
          "scopes"
        ],
        "properties": {
          "subject": {
            "type": "string",
            "description": "Identifier for the authenticated principal (user email, service name, or token subject)."
          },
          "kind": {
            "type": "string",
            "description": "Identity classification.",
            "enum": [
              "user",
              "service"
            ]
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Granted operator scopes."
          },
          "userId": {
            "type": [
              "null",
              "string"
            ]
          },
          "sessionId": {
            "type": [
              "null",
              "string"
            ]
          },
          "apiKeyId": {
            "type": [
              "null",
              "string"
            ]
          },
          "authDisabled": {
            "type": "boolean",
            "description": "Indicates that the server is running with authentication disabled for local development."
          },
          "displayName": {
            "type": [
              "null",
              "string"
            ]
          },
          "email": {
            "type": [
              "null",
              "string"
            ]
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Role slugs assigned to the identity."
          }
        },
        "title": "https://catalog.apphub/schemas/OperatorIdentity.json"
      },
      "def-24": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "$ref": "#/components/schemas/def-23"
          }
        },
        "title": "https://catalog.apphub/schemas/IdentityResponse.json"
      },
      "def-25": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoUrl",
          "dockerfilePath"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Lowercase identifier for the app (letters, numbers, and dashes).",
            "pattern": "^[a-z][a-z0-9-]{2,63}$",
            "minLength": 3,
            "maxLength": 64
          },
          "name": {
            "type": "string",
            "description": "Human readable name for the app."
          },
          "description": {
            "type": "string",
            "description": "Short description that appears in the catalog."
          },
          "repoUrl": {
            "type": "string",
            "description": "Location of the repository. Supports git, HTTP(S), and absolute filesystem paths."
          },
          "dockerfilePath": {
            "type": "string",
            "description": "Repository-relative path to the Dockerfile (e.g. services/api/Dockerfile).",
            "pattern": "Dockerfile(.[^/]+)?$"
          },
          "tags": {
            "type": "array",
            "description": "Optional tags to associate with the repository.",
            "items": {
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "description": "Tag key."
                },
                "value": {
                  "type": "string",
                  "description": "Tag value."
                }
              }
            },
            "default": []
          }
        },
        "title": "https://catalog.apphub/schemas/RepositoryCreateRequest.json"
      },
      "def-26": {
        "type": "object",
        "required": [
          "key",
          "value",
          "count"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        },
        "title": "https://catalog.apphub/schemas/TagFacet.json"
      },
      "def-27": {
        "type": "object",
        "required": [
          "status",
          "count"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "seed",
              "pending",
              "processing",
              "ready",
              "failed"
            ]
          },
          "count": {
            "type": "integer",
            "minimum": 0
          }
        },
        "title": "https://catalog.apphub/schemas/StatusFacet.json"
      },
      "def-28": {
        "type": "object",
        "description": "Metadata sourced from service manifests and configuration files.",
        "properties": {
          "source": {
            "type": [
              "string",
              "null"
            ],
            "description": "Location of the manifest entry that populated this service."
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All manifest files that contributed to this service definition."
          },
          "baseUrlSource": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "manifest",
              "runtime",
              "config"
            ],
            "description": "Whether the manifest, runtime state, or config file selected the effective base URL."
          },
          "openapiPath": {
            "type": [
              "string",
              "null"
            ]
          },
          "healthEndpoint": {
            "type": [
              "string",
              "null"
            ]
          },
          "workingDir": {
            "type": [
              "string",
              "null"
            ]
          },
          "devCommand": {
            "type": [
              "string",
              "null"
            ]
          },
          "env": {
            "anyOf": [
              {
                "description": "Environment variables declared for the service in manifests, including placeholder metadata.",
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "apps": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "description": "IDs of apps that are linked to this service through service networks."
          },
          "appliedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when this manifest version was applied."
          }
        },
        "additionalProperties": false,
        "title": "https://catalog.apphub/schemas/ServiceManifestMetadata.json"
      },
      "def-29": {
        "type": "object",
        "description": "Runtime details gathered from the containerized app connected to the service.",
        "properties": {
          "repositoryId": {
            "type": "string",
            "description": "Repository ID providing the runtime implementation."
          },
          "launchId": {
            "type": [
              "string",
              "null"
            ]
          },
          "instanceUrl": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "baseUrl": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "previewUrl": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "host": {
            "type": [
              "string",
              "null"
            ]
          },
          "port": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 65535
          },
          "containerIp": {
            "type": [
              "string",
              "null"
            ]
          },
          "containerPort": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 0,
            "maximum": 65535
          },
          "containerBaseUrl": {
            "type": [
              "string",
              "null"
            ],
            "format": "uri"
          },
          "source": {
            "type": [
              "string",
              "null"
            ],
            "description": "Origin of the runtime snapshot (for example, service-network synchronizer)."
          },
          "status": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "running",
              "stopped"
            ]
          },
          "updatedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "title": "https://catalog.apphub/schemas/ServiceRuntimeMetadata.json"
      },
      "def-30": {
        "type": "object",
        "description": "Structured metadata describing how a service is sourced, linked, and executed.",
        "properties": {
          "resourceType": {
            "type": "string",
            "enum": [
              "service"
            ],
            "description": "Discriminator indicating this metadata payload represents a service resource."
          },
          "manifest": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/def-28"
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "config": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                ],
                "description": "Raw metadata block forwarded from manifests or config files."
              },
              {
                "type": "null"
              }
            ]
          },
          "runtime": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/def-29"
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "linkedApps": {
            "type": [
              "array",
              "null"
            ],
            "items": {
              "type": "string"
            },
            "description": "Explicit list of app IDs linked to this service beyond manifest hints."
          },
          "notes": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 2000
          }
        },
        "additionalProperties": false,
        "title": "https://catalog.apphub/schemas/ServiceMetadata.json"
      },
      "def-31": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "displayName",
          "kind",
          "baseUrl",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": [
              "unknown",
              "healthy",
              "degraded",
              "unreachable"
            ]
          },
          "statusMessage": {
            "type": [
              "string",
              "null"
            ]
          },
          "capabilities": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "type": [
              "object",
              "null"
            ],
            "description": "Structured metadata describing how a service is sourced, linked, and executed.",
            "properties": {
              "resourceType": {
                "type": "string",
                "enum": [
                  "service"
                ],
                "description": "Discriminator indicating this metadata payload represents a service resource."
              },
              "manifest": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/def-28"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "config": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "anyOf": [
                          {
                            "description": "Arbitrary JSON value.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    ],
                    "description": "Raw metadata block forwarded from manifests or config files."
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "runtime": {
                "anyOf": [
                  {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/def-29"
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "linkedApps": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                },
                "description": "Explicit list of app IDs linked to this service beyond manifest hints."
              },
              "notes": {
                "type": [
                  "string",
                  "null"
                ],
                "maxLength": 2000
              }
            },
            "additionalProperties": false
          },
          "openapi": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "lastHealthyAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "health": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "unknown",
                  "healthy",
                  "degraded",
                  "unreachable"
                ]
              },
              "statusMessage": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "checkedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "latencyMs": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "statusCode": {
                "type": [
                  "integer",
                  "null"
                ]
              },
              "baseUrl": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "healthEndpoint": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/Service.json"
      },
      "def-32": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "displayName",
                "kind",
                "baseUrl",
                "status",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "displayName": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "baseUrl": {
                  "type": "string",
                  "format": "uri"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "unknown",
                    "healthy",
                    "degraded",
                    "unreachable"
                  ]
                },
                "statusMessage": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "capabilities": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "metadata": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "description": "Structured metadata describing how a service is sourced, linked, and executed.",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "service"
                      ],
                      "description": "Discriminator indicating this metadata payload represents a service resource."
                    },
                    "manifest": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/def-28"
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "config": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          ],
                          "description": "Raw metadata block forwarded from manifests or config files."
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "runtime": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "$ref": "#/components/schemas/def-29"
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "linkedApps": {
                      "type": [
                        "null",
                        "array"
                      ],
                      "items": {
                        "type": "string"
                      },
                      "description": "Explicit list of app IDs linked to this service beyond manifest hints."
                    },
                    "notes": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "maxLength": 2000
                    }
                  },
                  "additionalProperties": false
                },
                "openapi": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "lastHealthyAt": {
                  "type": [
                    "null",
                    "string"
                  ],
                  "format": "date-time"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "health": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "unknown",
                        "healthy",
                        "degraded",
                        "unreachable"
                      ]
                    },
                    "statusMessage": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "checkedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "latencyMs": {
                      "type": [
                        "null",
                        "integer"
                      ]
                    },
                    "statusCode": {
                      "type": [
                        "null",
                        "integer"
                      ]
                    },
                    "baseUrl": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "healthEndpoint": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "total",
              "healthyCount",
              "unhealthyCount"
            ],
            "properties": {
              "total": {
                "type": "integer",
                "minimum": 0
              },
              "healthyCount": {
                "type": "integer",
                "minimum": 0
              },
              "unhealthyCount": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/ServiceListResponse.json"
      },
      "def-33": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "displayName",
              "kind",
              "baseUrl",
              "status",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "displayName": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              },
              "baseUrl": {
                "type": "string",
                "format": "uri"
              },
              "status": {
                "type": "string",
                "enum": [
                  "unknown",
                  "healthy",
                  "degraded",
                  "unreachable"
                ]
              },
              "statusMessage": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "capabilities": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "metadata": {
                "type": [
                  "null",
                  "object"
                ],
                "description": "Structured metadata describing how a service is sourced, linked, and executed.",
                "properties": {
                  "resourceType": {
                    "type": "string",
                    "enum": [
                      "service"
                    ],
                    "description": "Discriminator indicating this metadata payload represents a service resource."
                  },
                  "manifest": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/def-28"
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "config": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        ],
                        "description": "Raw metadata block forwarded from manifests or config files."
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "runtime": {
                    "anyOf": [
                      {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/def-29"
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "linkedApps": {
                    "type": [
                      "null",
                      "array"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "description": "Explicit list of app IDs linked to this service beyond manifest hints."
                  },
                  "notes": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "maxLength": 2000
                  }
                },
                "additionalProperties": false
              },
              "openapi": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "lastHealthyAt": {
                "type": [
                  "null",
                  "string"
                ],
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "health": {
                "type": [
                  "null",
                  "object"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "unknown",
                      "healthy",
                      "degraded",
                      "unreachable"
                    ]
                  },
                  "statusMessage": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "checkedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "latencyMs": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "statusCode": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "baseUrl": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "healthEndpoint": {
                    "type": [
                      "null",
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/ServiceResponse.json"
      },
      "def-34": {
        "type": "object",
        "required": [
          "slug",
          "displayName",
          "kind",
          "baseUrl"
        ],
        "properties": {
          "slug": {
            "type": "string",
            "description": "Unique identifier for the service."
          },
          "displayName": {
            "type": "string"
          },
          "kind": {
            "type": "string",
            "description": "Service kind or integration type."
          },
          "baseUrl": {
            "type": "string",
            "format": "uri"
          },
          "status": {
            "type": "string",
            "enum": [
              "unknown",
              "healthy",
              "degraded",
              "unreachable"
            ]
          },
          "statusMessage": {
            "type": [
              "string",
              "null"
            ]
          },
          "capabilities": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/def-30"
                  }
                ],
                "description": "Optional metadata describing manifest provenance, linked apps, and runtime expectations."
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/ServiceRegistrationRequest.json"
      },
      "def-35": {
        "type": "object",
        "properties": {
          "maxAttempts": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "strategy": {
            "type": "string",
            "enum": [
              "none",
              "fixed",
              "exponential"
            ]
          },
          "initialDelayMs": {
            "type": "integer",
            "minimum": 0,
            "maximum": 86400000
          },
          "maxDelayMs": {
            "type": "integer",
            "minimum": 0,
            "maximum": 86400000
          },
          "jitter": {
            "type": "string",
            "enum": [
              "none",
              "full",
              "equal"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/JobRetryPolicy.json"
      },
      "def-36": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "version",
          "type",
          "runtime",
          "entryPoint",
          "parametersSchema",
          "defaultParameters",
          "outputSchema",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "type": {
            "type": "string",
            "enum": [
              "batch",
              "service-triggered",
              "manual"
            ]
          },
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ]
          },
          "entryPoint": {
            "type": "string"
          },
          "parametersSchema": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "defaultParameters": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "outputSchema": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "timeoutMs": {
            "type": [
              "null",
              "integer"
            ]
          },
          "retryPolicy": {
            "type": [
              "null",
              "object"
            ],
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "metadata": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/JobDefinition.json"
      },
      "def-37": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "type",
          "entryPoint"
        ],
        "properties": {
          "slug": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$",
            "minLength": 1,
            "maxLength": 100
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "batch",
              "service-triggered",
              "manual"
            ]
          },
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ],
            "default": "node"
          },
          "entryPoint": {
            "type": "string"
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "parametersSchema": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "defaultParameters": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "outputSchema": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "metadata": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/JobDefinitionCreateRequest.json"
      },
      "def-38": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "type": {
            "type": "string",
            "enum": [
              "batch",
              "service-triggered",
              "manual"
            ]
          },
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ]
          },
          "entryPoint": {
            "type": "string"
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000
          },
          "retryPolicy": {
            "type": "object",
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "parametersSchema": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "defaultParameters": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "outputSchema": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "metadata": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/JobDefinitionUpdateRequest.json"
      },
      "def-39": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "version",
              "type",
              "runtime",
              "entryPoint",
              "parametersSchema",
              "defaultParameters",
              "outputSchema",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              },
              "type": {
                "type": "string",
                "enum": [
                  "batch",
                  "service-triggered",
                  "manual"
                ]
              },
              "runtime": {
                "type": "string",
                "enum": [
                  "node",
                  "python",
                  "docker"
                ]
              },
              "entryPoint": {
                "type": "string"
              },
              "parametersSchema": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "defaultParameters": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "outputSchema": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "timeoutMs": {
                "type": [
                  "null",
                  "integer"
                ]
              },
              "retryPolicy": {
                "type": [
                  "null",
                  "object"
                ],
                "properties": {
                  "maxAttempts": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "none",
                      "fixed",
                      "exponential"
                    ]
                  },
                  "initialDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "maxDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "jitter": {
                    "type": "string",
                    "enum": [
                      "none",
                      "full",
                      "equal"
                    ]
                  }
                }
              },
              "metadata": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobDefinitionResponse.json"
      },
      "def-40": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "version",
                "type",
                "runtime",
                "entryPoint",
                "parametersSchema",
                "defaultParameters",
                "outputSchema",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "integer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "batch",
                    "service-triggered",
                    "manual"
                  ]
                },
                "runtime": {
                  "type": "string",
                  "enum": [
                    "node",
                    "python",
                    "docker"
                  ]
                },
                "entryPoint": {
                  "type": "string"
                },
                "parametersSchema": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "defaultParameters": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outputSchema": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "timeoutMs": {
                  "type": [
                    "null",
                    "integer"
                  ]
                },
                "retryPolicy": {
                  "type": [
                    "null",
                    "object"
                  ],
                  "properties": {
                    "maxAttempts": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 10
                    },
                    "strategy": {
                      "type": "string",
                      "enum": [
                        "none",
                        "fixed",
                        "exponential"
                      ]
                    },
                    "initialDelayMs": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 86400000
                    },
                    "maxDelayMs": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 86400000
                    },
                    "jitter": {
                      "type": "string",
                      "enum": [
                        "none",
                        "full",
                        "equal"
                      ]
                    }
                  }
                },
                "metadata": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobDefinitionListResponse.json"
      },
      "def-41": {
        "type": "object",
        "required": [
          "id",
          "jobDefinitionId",
          "status",
          "parameters",
          "result",
          "context",
          "metrics",
          "attempt",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "jobDefinitionId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled",
              "expired"
            ]
          },
          "parameters": {
            "$ref": "#/components/schemas/def-0"
          },
          "result": {
            "$ref": "#/components/schemas/def-0"
          },
          "errorMessage": {
            "type": [
              "null",
              "string"
            ]
          },
          "logsUrl": {
            "type": [
              "null",
              "string"
            ],
            "format": "uri"
          },
          "metrics": {
            "$ref": "#/components/schemas/def-0"
          },
          "context": {
            "$ref": "#/components/schemas/def-0"
          },
          "timeoutMs": {
            "type": [
              "null",
              "integer"
            ],
            "minimum": 0
          },
          "attempt": {
            "type": "integer",
            "minimum": 1
          },
          "maxAttempts": {
            "type": [
              "null",
              "integer"
            ],
            "minimum": 1
          },
          "durationMs": {
            "type": [
              "null",
              "integer"
            ],
            "minimum": 0
          },
          "scheduledAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "startedAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "completedAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/JobRun.json"
      },
      "def-42": {
        "type": "object",
        "required": [
          "run",
          "job"
        ],
        "properties": {
          "run": {
            "type": "object",
            "required": [
              "id",
              "jobDefinitionId",
              "status",
              "parameters",
              "result",
              "context",
              "metrics",
              "attempt",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "jobDefinitionId": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "running",
                  "succeeded",
                  "failed",
                  "canceled",
                  "expired"
                ]
              },
              "parameters": {
                "$ref": "#/components/schemas/def-0"
              },
              "result": {
                "$ref": "#/components/schemas/def-0"
              },
              "errorMessage": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "logsUrl": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "uri"
              },
              "metrics": {
                "$ref": "#/components/schemas/def-0"
              },
              "context": {
                "$ref": "#/components/schemas/def-0"
              },
              "timeoutMs": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "attempt": {
                "type": "integer",
                "minimum": 1
              },
              "maxAttempts": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1
              },
              "durationMs": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 0
              },
              "scheduledAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "startedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "completedAt": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "job": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "version",
              "type",
              "runtime"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "integer",
                "minimum": 1
              },
              "type": {
                "type": "string",
                "enum": [
                  "batch",
                  "service-triggered",
                  "manual"
                ]
              },
              "runtime": {
                "type": "string",
                "enum": [
                  "node",
                  "python",
                  "docker"
                ]
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobRunWithDefinition.json"
      },
      "def-43": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "run",
                "job"
              ],
              "properties": {
                "run": {
                  "type": "object",
                  "required": [
                    "id",
                    "jobDefinitionId",
                    "status",
                    "parameters",
                    "result",
                    "context",
                    "metrics",
                    "attempt",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jobDefinitionId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "succeeded",
                        "failed",
                        "canceled",
                        "expired"
                      ]
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "result": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "errorMessage": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "logsUrl": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "uri"
                    },
                    "metrics": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "context": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "timeoutMs": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": 0
                    },
                    "attempt": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "maxAttempts": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": 1
                    },
                    "durationMs": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": 0
                    },
                    "scheduledAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "startedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "completedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "job": {
                  "type": "object",
                  "required": [
                    "id",
                    "slug",
                    "name",
                    "version",
                    "type",
                    "runtime"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "batch",
                        "service-triggered",
                        "manual"
                      ]
                    },
                    "runtime": {
                      "type": "string",
                      "enum": [
                        "node",
                        "python",
                        "docker"
                      ]
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "limit",
              "offset",
              "hasMore",
              "nextOffset"
            ],
            "properties": {
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              },
              "hasMore": {
                "type": "boolean"
              },
              "nextOffset": {
                "type": [
                  "null",
                  "integer"
                ],
                "minimum": 0
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobRunListResponse.json"
      },
      "def-44": {
        "type": "object",
        "required": [
          "data",
          "meta"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "job",
              "runs"
            ],
            "properties": {
              "job": {
                "type": "object",
                "required": [
                  "id",
                  "slug",
                  "name",
                  "version",
                  "type",
                  "runtime",
                  "entryPoint",
                  "parametersSchema",
                  "defaultParameters",
                  "outputSchema",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "batch",
                      "service-triggered",
                      "manual"
                    ]
                  },
                  "runtime": {
                    "type": "string",
                    "enum": [
                      "node",
                      "python",
                      "docker"
                    ]
                  },
                  "entryPoint": {
                    "type": "string"
                  },
                  "parametersSchema": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "defaultParameters": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "outputSchema": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "retryPolicy": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    }
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "runs": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "jobDefinitionId",
                    "status",
                    "parameters",
                    "result",
                    "context",
                    "metrics",
                    "attempt",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "jobDefinitionId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "running",
                        "succeeded",
                        "failed",
                        "canceled",
                        "expired"
                      ]
                    },
                    "parameters": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "result": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "errorMessage": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "logsUrl": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "uri"
                    },
                    "metrics": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "context": {
                      "$ref": "#/components/schemas/def-0"
                    },
                    "timeoutMs": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": 0
                    },
                    "attempt": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "maxAttempts": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": 1
                    },
                    "durationMs": {
                      "type": [
                        "null",
                        "integer"
                      ],
                      "minimum": 0
                    },
                    "scheduledAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "startedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "completedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "limit",
              "offset"
            ],
            "properties": {
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobDetailResponse.json"
      },
      "def-45": {
        "type": "object",
        "required": [
          "runtime",
          "ready",
          "reason",
          "checkedAt",
          "details"
        ],
        "properties": {
          "runtime": {
            "type": "string",
            "enum": [
              "node",
              "python",
              "docker"
            ]
          },
          "ready": {
            "type": "boolean"
          },
          "reason": {
            "type": [
              "string",
              "null"
            ]
          },
          "checkedAt": {
            "type": "string",
            "format": "date-time"
          },
          "details": {
            "$ref": "#/components/schemas/def-0"
          }
        },
        "title": "https://catalog.apphub/schemas/RuntimeReadiness.json"
      },
      "def-46": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "runtime",
                "ready",
                "reason",
                "checkedAt",
                "details"
              ],
              "properties": {
                "runtime": {
                  "type": "string",
                  "enum": [
                    "node",
                    "python",
                    "docker"
                  ]
                },
                "ready": {
                  "type": "boolean"
                },
                "reason": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "checkedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "details": {
                  "$ref": "#/components/schemas/def-0"
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/RuntimeReadinessListResponse.json"
      },
      "def-47": {
        "type": "object",
        "required": [
          "parametersSchema",
          "outputSchema",
          "parametersSource",
          "outputSource"
        ],
        "properties": {
          "parametersSchema": {
            "$ref": "#/components/schemas/def-0"
          },
          "outputSchema": {
            "$ref": "#/components/schemas/def-0"
          },
          "parametersSource": {
            "type": [
              "string",
              "null"
            ]
          },
          "outputSource": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/JobSchemaPreview.json"
      },
      "def-48": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "parametersSchema",
              "outputSchema",
              "parametersSource",
              "outputSource"
            ],
            "properties": {
              "parametersSchema": {
                "$ref": "#/components/schemas/def-0"
              },
              "outputSchema": {
                "$ref": "#/components/schemas/def-0"
              },
              "parametersSource": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "outputSource": {
                "type": [
                  "null",
                  "string"
                ]
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobSchemaPreviewResponse.json"
      },
      "def-49": {
        "type": "object",
        "required": [
          "path",
          "contents"
        ],
        "properties": {
          "path": {
            "type": "string",
            "description": "Relative path of the file inside the bundle."
          },
          "contents": {
            "type": "string",
            "description": "File contents encoded as UTF-8 text or base64."
          },
          "encoding": {
            "type": "string",
            "enum": [
              "utf8",
              "base64"
            ],
            "description": "Encoding of the contents value. Defaults to utf8 when omitted."
          },
          "executable": {
            "type": "boolean",
            "description": "Whether the file should be marked as executable in the generated bundle."
          }
        },
        "title": "https://catalog.apphub/schemas/JobBundleFile.json"
      },
      "def-50": {
        "type": "object",
        "required": [
          "id",
          "bundleId",
          "slug",
          "version",
          "checksum",
          "capabilityFlags",
          "immutable",
          "status",
          "artifact",
          "metadata",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "bundleId": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "checksum": {
            "type": "string",
            "description": "SHA-256 checksum of the stored artifact."
          },
          "capabilityFlags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Capability flags declared by the bundle."
          },
          "immutable": {
            "type": "boolean",
            "description": "Indicates whether further edits to this version are allowed."
          },
          "status": {
            "type": "string",
            "description": "Lifecycle status of the bundle version."
          },
          "artifact": {
            "type": "object",
            "required": [
              "storage",
              "contentType",
              "size"
            ],
            "properties": {
              "storage": {
                "type": "string",
                "description": "Where the bundle artifact is stored."
              },
              "contentType": {
                "type": "string",
                "description": "MIME type reported for the bundle artifact."
              },
              "size": {
                "type": "integer",
                "description": "Size of the bundle artifact in bytes."
              }
            }
          },
          "manifest": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "publishedBy": {
            "type": [
              "object",
              "null"
            ],
            "required": [
              "subject",
              "kind",
              "tokenHash"
            ],
            "properties": {
              "subject": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "kind": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "tokenHash": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          "publishedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "deprecatedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "replacedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "replacedBy": {
            "type": [
              "string",
              "null"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "download": {
            "type": "object",
            "required": [
              "url",
              "expiresAt",
              "storage",
              "kind"
            ],
            "properties": {
              "url": {
                "type": "string",
                "format": "uri"
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time"
              },
              "storage": {
                "type": "string"
              },
              "kind": {
                "type": "string"
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/JobBundleVersion.json"
      },
      "def-51": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "job",
              "binding",
              "bundle",
              "editor",
              "aiBuilder",
              "history",
              "suggestionSource",
              "availableVersions"
            ],
            "properties": {
              "job": {
                "$ref": "#/components/schemas/def-36"
              },
              "binding": {
                "type": "object",
                "required": [
                  "slug",
                  "version"
                ],
                "properties": {
                  "slug": {
                    "type": "string",
                    "description": "Slug of the bundle bound to the job."
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the bundle referenced by the job entry point."
                  },
                  "exportName": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "description": "Optional export name used when requiring the bundle entry point."
                  }
                }
              },
              "bundle": {
                "type": "object",
                "required": [
                  "id",
                  "bundleId",
                  "slug",
                  "version",
                  "checksum",
                  "capabilityFlags",
                  "immutable",
                  "status",
                  "artifact",
                  "metadata",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "bundleId": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "checksum": {
                    "type": "string",
                    "description": "SHA-256 checksum of the stored artifact."
                  },
                  "capabilityFlags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Capability flags declared by the bundle."
                  },
                  "immutable": {
                    "type": "boolean",
                    "description": "Indicates whether further edits to this version are allowed."
                  },
                  "status": {
                    "type": "string",
                    "description": "Lifecycle status of the bundle version."
                  },
                  "artifact": {
                    "type": "object",
                    "required": [
                      "storage",
                      "contentType",
                      "size"
                    ],
                    "properties": {
                      "storage": {
                        "type": "string",
                        "description": "Where the bundle artifact is stored."
                      },
                      "contentType": {
                        "type": "string",
                        "description": "MIME type reported for the bundle artifact."
                      },
                      "size": {
                        "type": "integer",
                        "description": "Size of the bundle artifact in bytes."
                      }
                    }
                  },
                  "manifest": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "publishedBy": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "required": [
                      "subject",
                      "kind",
                      "tokenHash"
                    ],
                    "properties": {
                      "subject": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "kind": {
                        "type": [
                          "null",
                          "string"
                        ]
                      },
                      "tokenHash": {
                        "type": [
                          "null",
                          "string"
                        ]
                      }
                    }
                  },
                  "publishedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "deprecatedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "replacedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "replacedBy": {
                    "type": [
                      "null",
                      "string"
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "download": {
                    "type": "object",
                    "required": [
                      "url",
                      "expiresAt",
                      "storage",
                      "kind"
                    ],
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "storage": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "editor": {
                "type": "object",
                "required": [
                  "entryPoint",
                  "manifestPath",
                  "manifest",
                  "files"
                ],
                "properties": {
                  "entryPoint": {
                    "type": "string",
                    "description": "Relative path of the bundle entry point file."
                  },
                  "manifestPath": {
                    "type": "string",
                    "description": "Path to the manifest file within the bundle."
                  },
                  "manifest": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "contents"
                      ],
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "Relative path of the file inside the bundle."
                        },
                        "contents": {
                          "type": "string",
                          "description": "File contents encoded as UTF-8 text or base64."
                        },
                        "encoding": {
                          "type": "string",
                          "enum": [
                            "utf8",
                            "base64"
                          ],
                          "description": "Encoding of the contents value. Defaults to utf8 when omitted."
                        },
                        "executable": {
                          "type": "boolean",
                          "description": "Whether the file should be marked as executable in the generated bundle."
                        }
                      }
                    }
                  }
                }
              },
              "aiBuilder": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "history": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "slug",
                    "version"
                  ],
                  "properties": {
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "checksum": {
                      "type": "string",
                      "description": "Checksum of the generated artifact."
                    },
                    "regeneratedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "description": "History of AI generated bundle versions associated with this job."
              },
              "suggestionSource": {
                "type": "string",
                "enum": [
                  "metadata",
                  "artifact"
                ],
                "description": "Source used to build the current editor suggestion."
              },
              "availableVersions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "bundleId",
                    "slug",
                    "version",
                    "checksum",
                    "capabilityFlags",
                    "immutable",
                    "status",
                    "artifact",
                    "metadata",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "bundleId": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "checksum": {
                      "type": "string",
                      "description": "SHA-256 checksum of the stored artifact."
                    },
                    "capabilityFlags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Capability flags declared by the bundle."
                    },
                    "immutable": {
                      "type": "boolean",
                      "description": "Indicates whether further edits to this version are allowed."
                    },
                    "status": {
                      "type": "string",
                      "description": "Lifecycle status of the bundle version."
                    },
                    "artifact": {
                      "type": "object",
                      "required": [
                        "storage",
                        "contentType",
                        "size"
                      ],
                      "properties": {
                        "storage": {
                          "type": "string",
                          "description": "Where the bundle artifact is stored."
                        },
                        "contentType": {
                          "type": "string",
                          "description": "MIME type reported for the bundle artifact."
                        },
                        "size": {
                          "type": "integer",
                          "description": "Size of the bundle artifact in bytes."
                        }
                      }
                    },
                    "manifest": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "metadata": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "publishedBy": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "required": [
                        "subject",
                        "kind",
                        "tokenHash"
                      ],
                      "properties": {
                        "subject": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "kind": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "tokenHash": {
                          "type": [
                            "null",
                            "string"
                          ]
                        }
                      }
                    },
                    "publishedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "deprecatedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "replacedAt": {
                      "type": [
                        "null",
                        "string"
                      ],
                      "format": "date-time"
                    },
                    "replacedBy": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "download": {
                      "type": "object",
                      "required": [
                        "url",
                        "expiresAt",
                        "storage",
                        "kind"
                      ],
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "expiresAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "storage": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "description": "Previously published bundle versions available for selection."
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/BundleEditorResponse.json"
      },
      "def-52": {
        "type": "object",
        "required": [
          "prompt"
        ],
        "properties": {
          "prompt": {
            "type": "string",
            "maxLength": 10000,
            "description": "Instruction describing the desired edits to apply to the job bundle."
          },
          "provider": {
            "type": "string",
            "enum": [
              "codex",
              "openai",
              "openrouter"
            ],
            "description": "Model provider responsible for generating the bundle edits."
          },
          "providerOptions": {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "openAiApiKey": {
                    "type": "string",
                    "description": "API key to authorize calls to OpenAI models."
                  },
                  "openAiBaseUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "Override for the OpenAI API base URL when routing requests through a proxy."
                  },
                  "openAiMaxOutputTokens": {
                    "type": "integer",
                    "minimum": 256,
                    "maximum": 32000,
                    "description": "Maximum number of tokens the OpenAI provider may generate in a single response."
                  },
                  "openRouterApiKey": {
                    "type": "string",
                    "description": "API key used when the OpenRouter provider is selected."
                  },
                  "openRouterReferer": {
                    "type": "string",
                    "format": "uri",
                    "description": "Referer value to include when calling OpenRouter."
                  },
                  "openRouterTitle": {
                    "type": "string",
                    "description": "Human readable title supplied to OpenRouter when making a request."
                  }
                }
              }
            ],
            "description": "Provider-specific configuration such as API keys or maximum output tokens."
          }
        },
        "title": "https://catalog.apphub/schemas/AiBundleEditRequest.json"
      },
      "def-53": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "entryPoint",
          "manifestPath",
          "files"
        ],
        "properties": {
          "entryPoint": {
            "type": "string",
            "minLength": 1,
            "maxLength": 256
          },
          "manifestPath": {
            "type": "string",
            "minLength": 1,
            "maxLength": 512
          },
          "manifest": {
            "$ref": "#/components/schemas/def-0"
          },
          "files": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "path",
                "contents"
              ],
              "properties": {
                "path": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 512
                },
                "contents": {
                  "type": "string"
                },
                "encoding": {
                  "type": "string",
                  "enum": [
                    "utf8",
                    "base64"
                  ]
                },
                "executable": {
                  "type": "boolean"
                }
              }
            }
          },
          "capabilityFlags": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/def-0"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 512
          },
          "displayName": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 256
          },
          "version": {
            "type": "string",
            "maxLength": 100
          }
        },
        "title": "https://catalog.apphub/schemas/BundleRegenerateRequest.json"
      },
      "def-54": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "parameters": {
            "$ref": "#/components/schemas/def-0"
          },
          "timeoutMs": {
            "type": "integer",
            "minimum": 1000,
            "maximum": 86400000
          },
          "maxAttempts": {
            "type": "integer",
            "minimum": 1
          },
          "context": {
            "$ref": "#/components/schemas/def-0"
          }
        },
        "title": "https://catalog.apphub/schemas/JobRunRequest.json"
      },
      "def-55": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "type": "string"
          },
          "options": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowTrigger.json"
      },
      "def-56": {
        "type": "object",
        "required": [
          "id",
          "name",
          "jobSlug"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "job"
            ]
          },
          "jobSlug": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 25
          },
          "parameters": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "timeoutMs": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1000,
            "maximum": 86400000
          },
          "retryPolicy": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "storeResultAs": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowJobStep.json"
      },
      "def-57": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "serviceSlug",
          "request"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "service"
            ]
          },
          "serviceSlug": {
            "type": "string"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 25
          },
          "parameters": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "timeoutMs": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1000,
            "maximum": 86400000
          },
          "retryPolicy": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "maxAttempts": {
                "type": "integer",
                "minimum": 1,
                "maximum": 10
              },
              "strategy": {
                "type": "string",
                "enum": [
                  "none",
                  "fixed",
                  "exponential"
                ]
              },
              "initialDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "maxDelayMs": {
                "type": "integer",
                "minimum": 0,
                "maximum": 86400000
              },
              "jitter": {
                "type": "string",
                "enum": [
                  "none",
                  "full",
                  "equal"
                ]
              }
            }
          },
          "requireHealthy": {
            "type": "boolean"
          },
          "allowDegraded": {
            "type": "boolean"
          },
          "captureResponse": {
            "type": "boolean"
          },
          "storeResponseAs": {
            "type": "string"
          },
          "request": {
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "path": {
                "type": "string"
              },
              "method": {
                "type": "string",
                "enum": [
                  "GET",
                  "POST",
                  "PUT",
                  "PATCH",
                  "DELETE",
                  "HEAD"
                ]
              },
              "headers": {
                "type": "object",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "object",
                      "required": [
                        "secret"
                      ],
                      "properties": {
                        "secret": {
                          "type": "object",
                          "required": [
                            "source",
                            "key"
                          ],
                          "properties": {
                            "source": {
                              "type": "string",
                              "enum": [
                                "env",
                                "store"
                              ]
                            },
                            "key": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        },
                        "prefix": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              },
              "query": {
                "type": "object",
                "additionalProperties": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "boolean"
                    }
                  ]
                }
              },
              "body": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowServiceStep.json"
      },
      "def-58": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "collection",
          "template"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "fanout"
            ]
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "dependsOn": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "maxItems": 25
          },
          "collection": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "template": {
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "jobSlug"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "job"
                    ]
                  },
                  "jobSlug": {
                    "type": "string"
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "dependsOn": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 25
                  },
                  "parameters": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 1000,
                    "maximum": 86400000
                  },
                  "retryPolicy": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    }
                  },
                  "storeResultAs": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "type",
                  "serviceSlug",
                  "request"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "service"
                    ]
                  },
                  "serviceSlug": {
                    "type": "string"
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "dependsOn": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "maxItems": 25
                  },
                  "parameters": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "minimum": 1000,
                    "maximum": 86400000
                  },
                  "retryPolicy": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    }
                  },
                  "requireHealthy": {
                    "type": "boolean"
                  },
                  "allowDegraded": {
                    "type": "boolean"
                  },
                  "captureResponse": {
                    "type": "boolean"
                  },
                  "storeResponseAs": {
                    "type": "string"
                  },
                  "request": {
                    "type": "object",
                    "required": [
                      "path"
                    ],
                    "properties": {
                      "path": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string",
                        "enum": [
                          "GET",
                          "POST",
                          "PUT",
                          "PATCH",
                          "DELETE",
                          "HEAD"
                        ]
                      },
                      "headers": {
                        "type": "object",
                        "additionalProperties": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "object",
                              "required": [
                                "secret"
                              ],
                              "properties": {
                                "secret": {
                                  "type": "object",
                                  "required": [
                                    "source",
                                    "key"
                                  ],
                                  "properties": {
                                    "source": {
                                      "type": "string",
                                      "enum": [
                                        "env",
                                        "store"
                                      ]
                                    },
                                    "key": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "prefix": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "query": {
                        "type": "object",
                        "additionalProperties": {
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "boolean"
                            }
                          ]
                        }
                      },
                      "body": {
                        "anyOf": [
                          {
                            "description": "Arbitrary JSON value.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            ]
          },
          "maxItems": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "maximum": 10000
          },
          "maxConcurrency": {
            "type": [
              "integer",
              "null"
            ],
            "minimum": 1,
            "maximum": 1000
          },
          "storeResultsAs": {
            "type": "string"
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowFanOutStep.json"
      },
      "def-59": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "jobSlug"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "job"
                ]
              },
              "jobSlug": {
                "type": "string"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "dependsOn": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 25
              },
              "parameters": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "timeoutMs": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1000,
                "maximum": 86400000
              },
              "retryPolicy": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "maxAttempts": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "none",
                      "fixed",
                      "exponential"
                    ]
                  },
                  "initialDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "maxDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "jitter": {
                    "type": "string",
                    "enum": [
                      "none",
                      "full",
                      "equal"
                    ]
                  }
                }
              },
              "storeResultAs": {
                "type": [
                  "string",
                  "null"
                ]
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "type",
              "serviceSlug",
              "request"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "service"
                ]
              },
              "serviceSlug": {
                "type": "string"
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "dependsOn": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 25
              },
              "parameters": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "timeoutMs": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1000,
                "maximum": 86400000
              },
              "retryPolicy": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "maxAttempts": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10
                  },
                  "strategy": {
                    "type": "string",
                    "enum": [
                      "none",
                      "fixed",
                      "exponential"
                    ]
                  },
                  "initialDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "maxDelayMs": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 86400000
                  },
                  "jitter": {
                    "type": "string",
                    "enum": [
                      "none",
                      "full",
                      "equal"
                    ]
                  }
                }
              },
              "requireHealthy": {
                "type": "boolean"
              },
              "allowDegraded": {
                "type": "boolean"
              },
              "captureResponse": {
                "type": "boolean"
              },
              "storeResponseAs": {
                "type": "string"
              },
              "request": {
                "type": "object",
                "required": [
                  "path"
                ],
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "method": {
                    "type": "string",
                    "enum": [
                      "GET",
                      "POST",
                      "PUT",
                      "PATCH",
                      "DELETE",
                      "HEAD"
                    ]
                  },
                  "headers": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "object",
                          "required": [
                            "secret"
                          ],
                          "properties": {
                            "secret": {
                              "type": "object",
                              "required": [
                                "source",
                                "key"
                              ],
                              "properties": {
                                "source": {
                                  "type": "string",
                                  "enum": [
                                    "env",
                                    "store"
                                  ]
                                },
                                "key": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                }
                              }
                            },
                            "prefix": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "query": {
                    "type": "object",
                    "additionalProperties": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "boolean"
                        }
                      ]
                    }
                  },
                  "body": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "id",
              "name",
              "type",
              "collection",
              "template"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "fanout"
                ]
              },
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "dependsOn": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "maxItems": 25
              },
              "collection": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "template": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "jobSlug"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "job"
                        ]
                      },
                      "jobSlug": {
                        "type": "string"
                      },
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "dependsOn": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 25
                      },
                      "parameters": {
                        "anyOf": [
                          {
                            "description": "Arbitrary JSON value.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "timeoutMs": {
                        "type": [
                          "integer",
                          "null"
                        ],
                        "minimum": 1000,
                        "maximum": 86400000
                      },
                      "retryPolicy": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "maxAttempts": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 10
                          },
                          "strategy": {
                            "type": "string",
                            "enum": [
                              "none",
                              "fixed",
                              "exponential"
                            ]
                          },
                          "initialDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "maxDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "jitter": {
                            "type": "string",
                            "enum": [
                              "none",
                              "full",
                              "equal"
                            ]
                          }
                        }
                      },
                      "storeResultAs": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "type",
                      "serviceSlug",
                      "request"
                    ],
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "service"
                        ]
                      },
                      "serviceSlug": {
                        "type": "string"
                      },
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "dependsOn": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 25
                      },
                      "parameters": {
                        "anyOf": [
                          {
                            "description": "Arbitrary JSON value.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "timeoutMs": {
                        "type": [
                          "integer",
                          "null"
                        ],
                        "minimum": 1000,
                        "maximum": 86400000
                      },
                      "retryPolicy": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "maxAttempts": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 10
                          },
                          "strategy": {
                            "type": "string",
                            "enum": [
                              "none",
                              "fixed",
                              "exponential"
                            ]
                          },
                          "initialDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "maxDelayMs": {
                            "type": "integer",
                            "minimum": 0,
                            "maximum": 86400000
                          },
                          "jitter": {
                            "type": "string",
                            "enum": [
                              "none",
                              "full",
                              "equal"
                            ]
                          }
                        }
                      },
                      "requireHealthy": {
                        "type": "boolean"
                      },
                      "allowDegraded": {
                        "type": "boolean"
                      },
                      "captureResponse": {
                        "type": "boolean"
                      },
                      "storeResponseAs": {
                        "type": "string"
                      },
                      "request": {
                        "type": "object",
                        "required": [
                          "path"
                        ],
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "GET",
                              "POST",
                              "PUT",
                              "PATCH",
                              "DELETE",
                              "HEAD"
                            ]
                          },
                          "headers": {
                            "type": "object",
                            "additionalProperties": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "secret"
                                  ],
                                  "properties": {
                                    "secret": {
                                      "type": "object",
                                      "required": [
                                        "source",
                                        "key"
                                      ],
                                      "properties": {
                                        "source": {
                                          "type": "string",
                                          "enum": [
                                            "env",
                                            "store"
                                          ]
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "version": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "query": {
                            "type": "object",
                            "additionalProperties": {
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                }
                              ]
                            }
                          },
                          "body": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              },
              "maxItems": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1,
                "maximum": 10000
              },
              "maxConcurrency": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1,
                "maximum": 1000
              },
              "storeResultsAs": {
                "type": "string"
              }
            }
          }
        ],
        "title": "https://catalog.apphub/schemas/WorkflowStep.json"
      },
      "def-60": {
        "type": "object",
        "required": [
          "id",
          "slug",
          "name",
          "version",
          "steps",
          "triggers",
          "parametersSchema",
          "defaultParameters",
          "outputSchema",
          "dag",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "description": {
            "type": [
              "string",
              "null"
            ]
          },
          "steps": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "jobSlug"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "job"
                      ]
                    },
                    "jobSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1000,
                      "maximum": 86400000
                    },
                    "retryPolicy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      }
                    },
                    "storeResultAs": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "serviceSlug",
                    "request"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "service"
                      ]
                    },
                    "serviceSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1000,
                      "maximum": 86400000
                    },
                    "retryPolicy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      }
                    },
                    "requireHealthy": {
                      "type": "boolean"
                    },
                    "allowDegraded": {
                      "type": "boolean"
                    },
                    "captureResponse": {
                      "type": "boolean"
                    },
                    "storeResponseAs": {
                      "type": "string"
                    },
                    "request": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "HEAD"
                          ]
                        },
                        "headers": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "required": [
                                  "secret"
                                ],
                                "properties": {
                                  "secret": {
                                    "type": "object",
                                    "required": [
                                      "source",
                                      "key"
                                    ],
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "enum": [
                                          "env",
                                          "store"
                                        ]
                                      },
                                      "key": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "prefix": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "query": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        },
                        "body": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "collection",
                    "template"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "fanout"
                      ]
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "collection": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "template": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "jobSlug"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "job"
                              ]
                            },
                            "jobSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "minimum": 1000,
                              "maximum": 86400000
                            },
                            "retryPolicy": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              }
                            },
                            "storeResultAs": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "type",
                            "serviceSlug",
                            "request"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "service"
                              ]
                            },
                            "serviceSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "minimum": 1000,
                              "maximum": 86400000
                            },
                            "retryPolicy": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              }
                            },
                            "requireHealthy": {
                              "type": "boolean"
                            },
                            "allowDegraded": {
                              "type": "boolean"
                            },
                            "captureResponse": {
                              "type": "boolean"
                            },
                            "storeResponseAs": {
                              "type": "string"
                            },
                            "request": {
                              "type": "object",
                              "required": [
                                "path"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "HEAD"
                                  ]
                                },
                                "headers": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "secret"
                                        ],
                                        "properties": {
                                          "secret": {
                                            "type": "object",
                                            "required": [
                                              "source",
                                              "key"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": "string",
                                                "enum": [
                                                  "env",
                                                  "store"
                                                ]
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "version": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "prefix": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "query": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "body": {
                                  "anyOf": [
                                    {
                                      "description": "Arbitrary JSON value.",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "maxItems": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1,
                      "maximum": 10000
                    },
                    "maxConcurrency": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1,
                      "maximum": 1000
                    },
                    "storeResultsAs": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "minItems": 1,
            "maxItems": 100
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string"
                },
                "options": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "parametersSchema": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "defaultParameters": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "outputSchema": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "dag": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowDefinition.json"
      },
      "def-61": {
        "type": "object",
        "required": [
          "slug",
          "name",
          "steps"
        ],
        "properties": {
          "slug": {
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-_]*$",
            "minLength": 1,
            "maxLength": 100
          },
          "name": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "minimum": 1
          },
          "description": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "jobSlug"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "job"
                      ]
                    },
                    "jobSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1000,
                      "maximum": 86400000
                    },
                    "retryPolicy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      }
                    },
                    "storeResultAs": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "serviceSlug",
                    "request"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "service"
                      ]
                    },
                    "serviceSlug": {
                      "type": "string"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "parameters": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "timeoutMs": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1000,
                      "maximum": 86400000
                    },
                    "retryPolicy": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "maxAttempts": {
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 10
                        },
                        "strategy": {
                          "type": "string",
                          "enum": [
                            "none",
                            "fixed",
                            "exponential"
                          ]
                        },
                        "initialDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "maxDelayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 86400000
                        },
                        "jitter": {
                          "type": "string",
                          "enum": [
                            "none",
                            "full",
                            "equal"
                          ]
                        }
                      }
                    },
                    "requireHealthy": {
                      "type": "boolean"
                    },
                    "allowDegraded": {
                      "type": "boolean"
                    },
                    "captureResponse": {
                      "type": "boolean"
                    },
                    "storeResponseAs": {
                      "type": "string"
                    },
                    "request": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "GET",
                            "POST",
                            "PUT",
                            "PATCH",
                            "DELETE",
                            "HEAD"
                          ]
                        },
                        "headers": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "object",
                                "required": [
                                  "secret"
                                ],
                                "properties": {
                                  "secret": {
                                    "type": "object",
                                    "required": [
                                      "source",
                                      "key"
                                    ],
                                    "properties": {
                                      "source": {
                                        "type": "string",
                                        "enum": [
                                          "env",
                                          "store"
                                        ]
                                      },
                                      "key": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "prefix": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "query": {
                          "type": "object",
                          "additionalProperties": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              }
                            ]
                          }
                        },
                        "body": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "type",
                    "collection",
                    "template"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "fanout"
                      ]
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "maxItems": 25
                    },
                    "collection": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "template": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "jobSlug"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "job"
                              ]
                            },
                            "jobSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "minimum": 1000,
                              "maximum": 86400000
                            },
                            "retryPolicy": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              }
                            },
                            "storeResultAs": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "type",
                            "serviceSlug",
                            "request"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "service"
                              ]
                            },
                            "serviceSlug": {
                              "type": "string"
                            },
                            "description": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "dependsOn": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "maxItems": 25
                            },
                            "parameters": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "timeoutMs": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "minimum": 1000,
                              "maximum": 86400000
                            },
                            "retryPolicy": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "maxAttempts": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 10
                                },
                                "strategy": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "fixed",
                                    "exponential"
                                  ]
                                },
                                "initialDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "maxDelayMs": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "maximum": 86400000
                                },
                                "jitter": {
                                  "type": "string",
                                  "enum": [
                                    "none",
                                    "full",
                                    "equal"
                                  ]
                                }
                              }
                            },
                            "requireHealthy": {
                              "type": "boolean"
                            },
                            "allowDegraded": {
                              "type": "boolean"
                            },
                            "captureResponse": {
                              "type": "boolean"
                            },
                            "storeResponseAs": {
                              "type": "string"
                            },
                            "request": {
                              "type": "object",
                              "required": [
                                "path"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string",
                                  "enum": [
                                    "GET",
                                    "POST",
                                    "PUT",
                                    "PATCH",
                                    "DELETE",
                                    "HEAD"
                                  ]
                                },
                                "headers": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "secret"
                                        ],
                                        "properties": {
                                          "secret": {
                                            "type": "object",
                                            "required": [
                                              "source",
                                              "key"
                                            ],
                                            "properties": {
                                              "source": {
                                                "type": "string",
                                                "enum": [
                                                  "env",
                                                  "store"
                                                ]
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "version": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "prefix": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                },
                                "query": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      }
                                    ]
                                  }
                                },
                                "body": {
                                  "anyOf": [
                                    {
                                      "description": "Arbitrary JSON value.",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "maxItems": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1,
                      "maximum": 10000
                    },
                    "maxConcurrency": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "minimum": 1,
                      "maximum": 1000
                    },
                    "storeResultsAs": {
                      "type": "string"
                    }
                  }
                }
              ]
            },
            "minItems": 1,
            "maxItems": 100
          },
          "triggers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "type": "string"
                },
                "options": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "parametersSchema": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "defaultParameters": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "outputSchema": {
            "type": "object",
            "additionalProperties": {
              "anyOf": [
                {
                  "description": "Arbitrary JSON value.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    },
                    {
                      "type": "integer"
                    },
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    },
                    {
                      "type": "object",
                      "additionalProperties": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  ]
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "metadata": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowDefinitionCreateRequest.json"
      },
      "def-62": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "id",
              "slug",
              "name",
              "version",
              "steps",
              "triggers",
              "parametersSchema",
              "defaultParameters",
              "outputSchema",
              "dag",
              "createdAt",
              "updatedAt"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "slug": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "version": {
                "type": "integer"
              },
              "description": {
                "type": [
                  "null",
                  "string"
                ]
              },
              "steps": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "jobSlug"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "job"
                          ]
                        },
                        "jobSlug": {
                          "type": "string"
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 25
                        },
                        "parameters": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "timeoutMs": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "minimum": 1000,
                          "maximum": 86400000
                        },
                        "retryPolicy": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "maxAttempts": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            },
                            "strategy": {
                              "type": "string",
                              "enum": [
                                "none",
                                "fixed",
                                "exponential"
                              ]
                            },
                            "initialDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "maxDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "jitter": {
                              "type": "string",
                              "enum": [
                                "none",
                                "full",
                                "equal"
                              ]
                            }
                          }
                        },
                        "storeResultAs": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "type",
                        "serviceSlug",
                        "request"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "service"
                          ]
                        },
                        "serviceSlug": {
                          "type": "string"
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 25
                        },
                        "parameters": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "timeoutMs": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "minimum": 1000,
                          "maximum": 86400000
                        },
                        "retryPolicy": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "maxAttempts": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 10
                            },
                            "strategy": {
                              "type": "string",
                              "enum": [
                                "none",
                                "fixed",
                                "exponential"
                              ]
                            },
                            "initialDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "maxDelayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 86400000
                            },
                            "jitter": {
                              "type": "string",
                              "enum": [
                                "none",
                                "full",
                                "equal"
                              ]
                            }
                          }
                        },
                        "requireHealthy": {
                          "type": "boolean"
                        },
                        "allowDegraded": {
                          "type": "boolean"
                        },
                        "captureResponse": {
                          "type": "boolean"
                        },
                        "storeResponseAs": {
                          "type": "string"
                        },
                        "request": {
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "path": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string",
                              "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "PATCH",
                                "DELETE",
                                "HEAD"
                              ]
                            },
                            "headers": {
                              "type": "object",
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "secret"
                                    ],
                                    "properties": {
                                      "secret": {
                                        "type": "object",
                                        "required": [
                                          "source",
                                          "key"
                                        ],
                                        "properties": {
                                          "source": {
                                            "type": "string",
                                            "enum": [
                                              "env",
                                              "store"
                                            ]
                                          },
                                          "key": {
                                            "type": "string"
                                          },
                                          "version": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "prefix": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "query": {
                              "type": "object",
                              "additionalProperties": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  }
                                ]
                              }
                            },
                            "body": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "type",
                        "collection",
                        "template"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "fanout"
                          ]
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "maxItems": 25
                        },
                        "collection": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "template": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "jobSlug"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "job"
                                  ]
                                },
                                "jobSlug": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "dependsOn": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 25
                                },
                                "parameters": {
                                  "anyOf": [
                                    {
                                      "description": "Arbitrary JSON value.",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "timeoutMs": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "minimum": 1000,
                                  "maximum": 86400000
                                },
                                "retryPolicy": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "maxAttempts": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 10
                                    },
                                    "strategy": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "fixed",
                                        "exponential"
                                      ]
                                    },
                                    "initialDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "maxDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "full",
                                        "equal"
                                      ]
                                    }
                                  }
                                },
                                "storeResultAs": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "type",
                                "serviceSlug",
                                "request"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "service"
                                  ]
                                },
                                "serviceSlug": {
                                  "type": "string"
                                },
                                "description": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "dependsOn": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "maxItems": 25
                                },
                                "parameters": {
                                  "anyOf": [
                                    {
                                      "description": "Arbitrary JSON value.",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "timeoutMs": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ],
                                  "minimum": 1000,
                                  "maximum": 86400000
                                },
                                "retryPolicy": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "maxAttempts": {
                                      "type": "integer",
                                      "minimum": 1,
                                      "maximum": 10
                                    },
                                    "strategy": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "fixed",
                                        "exponential"
                                      ]
                                    },
                                    "initialDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "maxDelayMs": {
                                      "type": "integer",
                                      "minimum": 0,
                                      "maximum": 86400000
                                    },
                                    "jitter": {
                                      "type": "string",
                                      "enum": [
                                        "none",
                                        "full",
                                        "equal"
                                      ]
                                    }
                                  }
                                },
                                "requireHealthy": {
                                  "type": "boolean"
                                },
                                "allowDegraded": {
                                  "type": "boolean"
                                },
                                "captureResponse": {
                                  "type": "boolean"
                                },
                                "storeResponseAs": {
                                  "type": "string"
                                },
                                "request": {
                                  "type": "object",
                                  "required": [
                                    "path"
                                  ],
                                  "properties": {
                                    "path": {
                                      "type": "string"
                                    },
                                    "method": {
                                      "type": "string",
                                      "enum": [
                                        "GET",
                                        "POST",
                                        "PUT",
                                        "PATCH",
                                        "DELETE",
                                        "HEAD"
                                      ]
                                    },
                                    "headers": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "secret"
                                            ],
                                            "properties": {
                                              "secret": {
                                                "type": "object",
                                                "required": [
                                                  "source",
                                                  "key"
                                                ],
                                                "properties": {
                                                  "source": {
                                                    "type": "string",
                                                    "enum": [
                                                      "env",
                                                      "store"
                                                    ]
                                                  },
                                                  "key": {
                                                    "type": "string"
                                                  },
                                                  "version": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "prefix": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "query": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "boolean"
                                          }
                                        ]
                                      }
                                    },
                                    "body": {
                                      "anyOf": [
                                        {
                                          "description": "Arbitrary JSON value.",
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "boolean"
                                            },
                                            {
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/components/schemas/def-0"
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "additionalProperties": {
                                                "$ref": "#/components/schemas/def-0"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        },
                        "maxItems": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "minimum": 1,
                          "maximum": 10000
                        },
                        "maxConcurrency": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "minimum": 1,
                          "maximum": 1000
                        },
                        "storeResultsAs": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                },
                "minItems": 1,
                "maxItems": 100
              },
              "triggers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "options": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                }
              },
              "parametersSchema": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "defaultParameters": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "outputSchema": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "metadata": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dag": {
                "anyOf": [
                  {
                    "description": "Arbitrary JSON value.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      },
                      {
                        "type": "integer"
                      },
                      {
                        "type": "boolean"
                      },
                      {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": {
                          "$ref": "#/components/schemas/def-0"
                        }
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowDefinitionResponse.json"
      },
      "def-63": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "slug",
                "name",
                "version",
                "steps",
                "triggers",
                "parametersSchema",
                "defaultParameters",
                "outputSchema",
                "dag",
                "createdAt",
                "updatedAt"
              ],
              "properties": {
                "id": {
                  "type": "string"
                },
                "slug": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "integer"
                },
                "description": {
                  "type": [
                    "null",
                    "string"
                  ]
                },
                "steps": {
                  "type": "array",
                  "items": {
                    "oneOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "jobSlug"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "job"
                            ]
                          },
                          "jobSlug": {
                            "type": "string"
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "dependsOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 25
                          },
                          "parameters": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "timeoutMs": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "minimum": 1000,
                            "maximum": 86400000
                          },
                          "retryPolicy": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "maxAttempts": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10
                              },
                              "strategy": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "fixed",
                                  "exponential"
                                ]
                              },
                              "initialDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "maxDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "jitter": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "full",
                                  "equal"
                                ]
                              }
                            }
                          },
                          "storeResultAs": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "type",
                          "serviceSlug",
                          "request"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "service"
                            ]
                          },
                          "serviceSlug": {
                            "type": "string"
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "dependsOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 25
                          },
                          "parameters": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "timeoutMs": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "minimum": 1000,
                            "maximum": 86400000
                          },
                          "retryPolicy": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "maxAttempts": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 10
                              },
                              "strategy": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "fixed",
                                  "exponential"
                                ]
                              },
                              "initialDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "maxDelayMs": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 86400000
                              },
                              "jitter": {
                                "type": "string",
                                "enum": [
                                  "none",
                                  "full",
                                  "equal"
                                ]
                              }
                            }
                          },
                          "requireHealthy": {
                            "type": "boolean"
                          },
                          "allowDegraded": {
                            "type": "boolean"
                          },
                          "captureResponse": {
                            "type": "boolean"
                          },
                          "storeResponseAs": {
                            "type": "string"
                          },
                          "request": {
                            "type": "object",
                            "required": [
                              "path"
                            ],
                            "properties": {
                              "path": {
                                "type": "string"
                              },
                              "method": {
                                "type": "string",
                                "enum": [
                                  "GET",
                                  "POST",
                                  "PUT",
                                  "PATCH",
                                  "DELETE",
                                  "HEAD"
                                ]
                              },
                              "headers": {
                                "type": "object",
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "secret"
                                      ],
                                      "properties": {
                                        "secret": {
                                          "type": "object",
                                          "required": [
                                            "source",
                                            "key"
                                          ],
                                          "properties": {
                                            "source": {
                                              "type": "string",
                                              "enum": [
                                                "env",
                                                "store"
                                              ]
                                            },
                                            "key": {
                                              "type": "string"
                                            },
                                            "version": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "prefix": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "query": {
                                "type": "object",
                                "additionalProperties": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    }
                                  ]
                                }
                              },
                              "body": {
                                "anyOf": [
                                  {
                                    "description": "Arbitrary JSON value.",
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "type",
                          "collection",
                          "template"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "fanout"
                            ]
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "dependsOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "maxItems": 25
                          },
                          "collection": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "template": {
                            "oneOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "jobSlug"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "job"
                                    ]
                                  },
                                  "jobSlug": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "dependsOn": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "maxItems": 25
                                  },
                                  "parameters": {
                                    "anyOf": [
                                      {
                                        "description": "Arbitrary JSON value.",
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "boolean"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "timeoutMs": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "minimum": 1000,
                                    "maximum": 86400000
                                  },
                                  "retryPolicy": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "maxAttempts": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "fixed",
                                          "exponential"
                                        ]
                                      },
                                      "initialDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "maxDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "jitter": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "full",
                                          "equal"
                                        ]
                                      }
                                    }
                                  },
                                  "storeResultAs": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name",
                                  "type",
                                  "serviceSlug",
                                  "request"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "service"
                                    ]
                                  },
                                  "serviceSlug": {
                                    "type": "string"
                                  },
                                  "description": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "dependsOn": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "maxItems": 25
                                  },
                                  "parameters": {
                                    "anyOf": [
                                      {
                                        "description": "Arbitrary JSON value.",
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "boolean"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "timeoutMs": {
                                    "type": [
                                      "integer",
                                      "null"
                                    ],
                                    "minimum": 1000,
                                    "maximum": 86400000
                                  },
                                  "retryPolicy": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "properties": {
                                      "maxAttempts": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 10
                                      },
                                      "strategy": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "fixed",
                                          "exponential"
                                        ]
                                      },
                                      "initialDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "maxDelayMs": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 86400000
                                      },
                                      "jitter": {
                                        "type": "string",
                                        "enum": [
                                          "none",
                                          "full",
                                          "equal"
                                        ]
                                      }
                                    }
                                  },
                                  "requireHealthy": {
                                    "type": "boolean"
                                  },
                                  "allowDegraded": {
                                    "type": "boolean"
                                  },
                                  "captureResponse": {
                                    "type": "boolean"
                                  },
                                  "storeResponseAs": {
                                    "type": "string"
                                  },
                                  "request": {
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "path": {
                                        "type": "string"
                                      },
                                      "method": {
                                        "type": "string",
                                        "enum": [
                                          "GET",
                                          "POST",
                                          "PUT",
                                          "PATCH",
                                          "DELETE",
                                          "HEAD"
                                        ]
                                      },
                                      "headers": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "secret"
                                              ],
                                              "properties": {
                                                "secret": {
                                                  "type": "object",
                                                  "required": [
                                                    "source",
                                                    "key"
                                                  ],
                                                  "properties": {
                                                    "source": {
                                                      "type": "string",
                                                      "enum": [
                                                        "env",
                                                        "store"
                                                      ]
                                                    },
                                                    "key": {
                                                      "type": "string"
                                                    },
                                                    "version": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "prefix": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "query": {
                                        "type": "object",
                                        "additionalProperties": {
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "boolean"
                                            }
                                          ]
                                        }
                                      },
                                      "body": {
                                        "anyOf": [
                                          {
                                            "description": "Arbitrary JSON value.",
                                            "oneOf": [
                                              {
                                                "type": "string"
                                              },
                                              {
                                                "type": "number"
                                              },
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "boolean"
                                              },
                                              {
                                                "type": "array",
                                                "items": {
                                                  "$ref": "#/components/schemas/def-0"
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "additionalProperties": {
                                                  "$ref": "#/components/schemas/def-0"
                                                }
                                              }
                                            ]
                                          },
                                          {
                                            "type": "null"
                                          }
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          },
                          "maxItems": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "minimum": 1,
                            "maximum": 10000
                          },
                          "maxConcurrency": {
                            "type": [
                              "integer",
                              "null"
                            ],
                            "minimum": 1,
                            "maximum": 1000
                          },
                          "storeResultsAs": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "minItems": 1,
                  "maxItems": 100
                },
                "triggers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "options": {
                        "anyOf": [
                          {
                            "description": "Arbitrary JSON value.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  }
                },
                "parametersSchema": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "defaultParameters": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "outputSchema": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "metadata": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "dag": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowDefinitionListResponse.json"
      },
      "def-64": {
        "type": "object",
        "required": [
          "id",
          "workflowDefinitionId",
          "status",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "workflowDefinitionId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled"
            ]
          },
          "parameters": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "context": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "errorMessage": {
            "type": [
              "null",
              "string"
            ]
          },
          "currentStepId": {
            "type": [
              "null",
              "string"
            ]
          },
          "currentStepIndex": {
            "type": [
              "null",
              "integer"
            ]
          },
          "metrics": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "triggeredBy": {
            "type": [
              "null",
              "string"
            ]
          },
          "trigger": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "partitionKey": {
            "type": [
              "null",
              "string"
            ]
          },
          "startedAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "completedAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "durationMs": {
            "type": [
              "null",
              "integer"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowRun.json"
      },
      "def-65": {
        "type": "object",
        "required": [
          "reason",
          "requestedAt",
          "claimedAt",
          "claimOwner"
        ],
        "properties": {
          "workflowRunId": {
            "type": [
              "string",
              "null"
            ]
          },
          "reason": {
            "type": "string"
          },
          "assetId": {
            "type": [
              "string",
              "null"
            ]
          },
          "partitionKey": {
            "type": [
              "string",
              "null"
            ]
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimedAt": {
            "type": "string",
            "format": "date-time"
          },
          "claimOwner": {
            "type": "string"
          },
          "context": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowAutoMaterializeInFlight.json"
      },
      "def-66": {
        "type": "object",
        "required": [
          "failures"
        ],
        "properties": {
          "failures": {
            "type": "integer",
            "minimum": 0
          },
          "nextEligibleAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowAutoMaterializeCooldown.json"
      },
      "def-67": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "runs",
              "inFlight",
              "cooldown",
              "updatedAt"
            ],
            "properties": {
              "runs": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-64"
                }
              },
              "inFlight": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-65"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "cooldown": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/def-66"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "updatedAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "workflow": {
                "type": "object",
                "required": [
                  "id",
                  "slug",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "limit": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              },
              "offset": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowAutoMaterializeOpsResponse.json"
      },
      "def-68": {
        "type": "object",
        "required": [
          "id",
          "prefix",
          "scopes",
          "createdAt",
          "updatedAt"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": [
              "null",
              "string"
            ]
          },
          "prefix": {
            "type": "string",
            "description": "Stable API key prefix used for support diagnostics."
          },
          "scopes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Scopes granted to the API key."
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUsedAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "expiresAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          },
          "revokedAt": {
            "type": [
              "null",
              "string"
            ],
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/ApiKey.json"
      },
      "def-69": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "keys"
            ],
            "properties": {
              "keys": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/def-68"
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/ApiKeyListResponse.json"
      },
      "def-70": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "key",
              "token"
            ],
            "properties": {
              "key": {
                "$ref": "#/components/schemas/def-68"
              },
              "token": {
                "type": "string",
                "description": "Full API key token. This value is only returned once at creation time."
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/ApiKeyCreateResponse.json"
      },
      "def-71": {
        "type": "object",
        "required": [
          "handlerName",
          "handlerIsAsync",
          "inputModel",
          "outputModel"
        ],
        "properties": {
          "handlerName": {
            "type": "string"
          },
          "handlerIsAsync": {
            "type": "boolean"
          },
          "inputModel": {
            "type": "object",
            "required": [
              "name",
              "schema"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "schema": {
                "$ref": "#/components/schemas/def-0"
              }
            }
          },
          "outputModel": {
            "type": "object",
            "required": [
              "name",
              "schema"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "schema": {
                "$ref": "#/components/schemas/def-0"
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/PythonSnippetPreview.json"
      },
      "def-72": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "job",
              "analysis",
              "bundle"
            ],
            "properties": {
              "job": {
                "type": "object",
                "required": [
                  "id",
                  "slug",
                  "name",
                  "version",
                  "type",
                  "runtime",
                  "entryPoint",
                  "parametersSchema",
                  "defaultParameters",
                  "outputSchema",
                  "createdAt",
                  "updatedAt"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "slug": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "version": {
                    "type": "integer"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "batch",
                      "service-triggered",
                      "manual"
                    ]
                  },
                  "runtime": {
                    "type": "string",
                    "enum": [
                      "node",
                      "python",
                      "docker"
                    ]
                  },
                  "entryPoint": {
                    "type": "string"
                  },
                  "parametersSchema": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "defaultParameters": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "outputSchema": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "timeoutMs": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "retryPolicy": {
                    "type": [
                      "null",
                      "object"
                    ],
                    "properties": {
                      "maxAttempts": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 10
                      },
                      "strategy": {
                        "type": "string",
                        "enum": [
                          "none",
                          "fixed",
                          "exponential"
                        ]
                      },
                      "initialDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "maxDelayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 86400000
                      },
                      "jitter": {
                        "type": "string",
                        "enum": [
                          "none",
                          "full",
                          "equal"
                        ]
                      }
                    }
                  },
                  "metadata": {
                    "anyOf": [
                      {
                        "description": "Arbitrary JSON value.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "integer"
                          },
                          {
                            "type": "boolean"
                          },
                          {
                            "type": "array",
                            "items": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          },
                          {
                            "type": "object",
                            "additionalProperties": {
                              "$ref": "#/components/schemas/def-0"
                            }
                          }
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "analysis": {
                "type": "object",
                "required": [
                  "handlerName",
                  "handlerIsAsync",
                  "inputModel",
                  "outputModel"
                ],
                "properties": {
                  "handlerName": {
                    "type": "string"
                  },
                  "handlerIsAsync": {
                    "type": "boolean"
                  },
                  "inputModel": {
                    "type": "object",
                    "required": [
                      "name",
                      "schema"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  },
                  "outputModel": {
                    "type": "object",
                    "required": [
                      "name",
                      "schema"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "schema": {
                        "$ref": "#/components/schemas/def-0"
                      }
                    }
                  }
                }
              },
              "bundle": {
                "type": "object",
                "required": [
                  "slug",
                  "version"
                ],
                "properties": {
                  "slug": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/PythonSnippetCreateResponse.json"
      },
      "def-73": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "stepId",
          "stepName",
          "stepType",
          "partitioning",
          "autoMaterialize",
          "freshness"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          },
          "partitioning": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "autoMaterialize": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "freshness": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphProducer.json"
      },
      "def-74": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "stepId",
          "stepName",
          "stepType"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphConsumer.json"
      },
      "def-75": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "runId",
          "stepId",
          "stepName",
          "stepType",
          "runStatus",
          "stepStatus",
          "producedAt",
          "partitionKey",
          "freshness",
          "runStartedAt",
          "runCompletedAt"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "runId": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          },
          "runStatus": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "canceled"
            ]
          },
          "stepStatus": {
            "type": "string",
            "enum": [
              "pending",
              "running",
              "succeeded",
              "failed",
              "skipped"
            ]
          },
          "producedAt": {
            "type": "string",
            "format": "date-time"
          },
          "partitionKey": {
            "type": [
              "string",
              "null"
            ]
          },
          "freshness": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          },
          "runStartedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "runCompletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphMaterialization.json"
      },
      "def-76": {
        "type": "object",
        "required": [
          "workflowId",
          "workflowSlug",
          "workflowName",
          "partitionKey",
          "requestedAt",
          "requestedBy",
          "note"
        ],
        "properties": {
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "partitionKey": {
            "type": [
              "string",
              "null"
            ]
          },
          "requestedAt": {
            "type": "string",
            "format": "date-time"
          },
          "requestedBy": {
            "type": [
              "string",
              "null"
            ]
          },
          "note": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphStalePartition.json"
      },
      "def-77": {
        "type": "object",
        "required": [
          "assetId",
          "normalizedAssetId",
          "producers",
          "consumers",
          "latestMaterializations",
          "stalePartitions",
          "hasStalePartitions",
          "hasOutdatedUpstreams",
          "outdatedUpstreamAssetIds"
        ],
        "properties": {
          "assetId": {
            "type": "string"
          },
          "normalizedAssetId": {
            "type": "string"
          },
          "producers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "stepId",
                "stepName",
                "stepType",
                "partitioning",
                "autoMaterialize",
                "freshness"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "stepId": {
                  "type": "string"
                },
                "stepName": {
                  "type": "string"
                },
                "stepType": {
                  "type": "string",
                  "enum": [
                    "job",
                    "service",
                    "fanout"
                  ]
                },
                "partitioning": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "autoMaterialize": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "freshness": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "consumers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "stepId",
                "stepName",
                "stepType"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "stepId": {
                  "type": "string"
                },
                "stepName": {
                  "type": "string"
                },
                "stepType": {
                  "type": "string",
                  "enum": [
                    "job",
                    "service",
                    "fanout"
                  ]
                }
              }
            }
          },
          "latestMaterializations": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "runId",
                "stepId",
                "stepName",
                "stepType",
                "runStatus",
                "stepStatus",
                "producedAt",
                "partitionKey",
                "freshness",
                "runStartedAt",
                "runCompletedAt"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "runId": {
                  "type": "string"
                },
                "stepId": {
                  "type": "string"
                },
                "stepName": {
                  "type": "string"
                },
                "stepType": {
                  "type": "string",
                  "enum": [
                    "job",
                    "service",
                    "fanout"
                  ]
                },
                "runStatus": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "running",
                    "succeeded",
                    "failed",
                    "canceled"
                  ]
                },
                "stepStatus": {
                  "type": "string",
                  "enum": [
                    "pending",
                    "running",
                    "succeeded",
                    "failed",
                    "skipped"
                  ]
                },
                "producedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "partitionKey": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "freshness": {
                  "anyOf": [
                    {
                      "description": "Arbitrary JSON value.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "number"
                        },
                        {
                          "type": "integer"
                        },
                        {
                          "type": "boolean"
                        },
                        {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        },
                        {
                          "type": "object",
                          "additionalProperties": {
                            "$ref": "#/components/schemas/def-0"
                          }
                        }
                      ]
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "runStartedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                },
                "runCompletedAt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "date-time"
                }
              }
            }
          },
          "stalePartitions": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "workflowId",
                "workflowSlug",
                "workflowName",
                "partitionKey",
                "requestedAt",
                "requestedBy",
                "note"
              ],
              "properties": {
                "workflowId": {
                  "type": "string"
                },
                "workflowSlug": {
                  "type": "string"
                },
                "workflowName": {
                  "type": "string"
                },
                "partitionKey": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "requestedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "requestedBy": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "note": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              }
            }
          },
          "hasStalePartitions": {
            "type": "boolean"
          },
          "hasOutdatedUpstreams": {
            "type": "boolean"
          },
          "outdatedUpstreamAssetIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphNode.json"
      },
      "def-78": {
        "type": "object",
        "required": [
          "fromAssetId",
          "fromAssetNormalizedId",
          "toAssetId",
          "toAssetNormalizedId",
          "workflowId",
          "workflowSlug",
          "workflowName",
          "stepId",
          "stepName",
          "stepType"
        ],
        "properties": {
          "fromAssetId": {
            "type": "string"
          },
          "fromAssetNormalizedId": {
            "type": "string"
          },
          "toAssetId": {
            "type": "string"
          },
          "toAssetNormalizedId": {
            "type": "string"
          },
          "workflowId": {
            "type": "string"
          },
          "workflowSlug": {
            "type": "string"
          },
          "workflowName": {
            "type": "string"
          },
          "stepId": {
            "type": "string"
          },
          "stepName": {
            "type": "string"
          },
          "stepType": {
            "type": "string",
            "enum": [
              "job",
              "service",
              "fanout"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphEdge.json"
      },
      "def-79": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "assets",
              "edges"
            ],
            "properties": {
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "assetId",
                    "normalizedAssetId",
                    "producers",
                    "consumers",
                    "latestMaterializations",
                    "stalePartitions",
                    "hasStalePartitions",
                    "hasOutdatedUpstreams",
                    "outdatedUpstreamAssetIds"
                  ],
                  "properties": {
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "producers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "stepId",
                          "stepName",
                          "stepType",
                          "partitioning",
                          "autoMaterialize",
                          "freshness"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "stepId": {
                            "type": "string"
                          },
                          "stepName": {
                            "type": "string"
                          },
                          "stepType": {
                            "type": "string",
                            "enum": [
                              "job",
                              "service",
                              "fanout"
                            ]
                          },
                          "partitioning": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "autoMaterialize": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "freshness": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "consumers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "stepId",
                          "stepName",
                          "stepType"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "stepId": {
                            "type": "string"
                          },
                          "stepName": {
                            "type": "string"
                          },
                          "stepType": {
                            "type": "string",
                            "enum": [
                              "job",
                              "service",
                              "fanout"
                            ]
                          }
                        }
                      }
                    },
                    "latestMaterializations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "runId",
                          "stepId",
                          "stepName",
                          "stepType",
                          "runStatus",
                          "stepStatus",
                          "producedAt",
                          "partitionKey",
                          "freshness",
                          "runStartedAt",
                          "runCompletedAt"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "runId": {
                            "type": "string"
                          },
                          "stepId": {
                            "type": "string"
                          },
                          "stepName": {
                            "type": "string"
                          },
                          "stepType": {
                            "type": "string",
                            "enum": [
                              "job",
                              "service",
                              "fanout"
                            ]
                          },
                          "runStatus": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "running",
                              "succeeded",
                              "failed",
                              "canceled"
                            ]
                          },
                          "stepStatus": {
                            "type": "string",
                            "enum": [
                              "pending",
                              "running",
                              "succeeded",
                              "failed",
                              "skipped"
                            ]
                          },
                          "producedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "partitionKey": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "freshness": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "runStartedAt": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "date-time"
                          },
                          "runCompletedAt": {
                            "type": [
                              "null",
                              "string"
                            ],
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "stalePartitions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "workflowId",
                          "workflowSlug",
                          "workflowName",
                          "partitionKey",
                          "requestedAt",
                          "requestedBy",
                          "note"
                        ],
                        "properties": {
                          "workflowId": {
                            "type": "string"
                          },
                          "workflowSlug": {
                            "type": "string"
                          },
                          "workflowName": {
                            "type": "string"
                          },
                          "partitionKey": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "requestedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "requestedBy": {
                            "type": [
                              "null",
                              "string"
                            ]
                          },
                          "note": {
                            "type": [
                              "null",
                              "string"
                            ]
                          }
                        }
                      }
                    },
                    "hasStalePartitions": {
                      "type": "boolean"
                    },
                    "hasOutdatedUpstreams": {
                      "type": "boolean"
                    },
                    "outdatedUpstreamAssetIds": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "edges": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "fromAssetId",
                    "fromAssetNormalizedId",
                    "toAssetId",
                    "toAssetNormalizedId",
                    "workflowId",
                    "workflowSlug",
                    "workflowName",
                    "stepId",
                    "stepName",
                    "stepType"
                  ],
                  "properties": {
                    "fromAssetId": {
                      "type": "string"
                    },
                    "fromAssetNormalizedId": {
                      "type": "string"
                    },
                    "toAssetId": {
                      "type": "string"
                    },
                    "toAssetNormalizedId": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "workflowSlug": {
                      "type": "string"
                    },
                    "workflowName": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string"
                    },
                    "stepName": {
                      "type": "string"
                    },
                    "stepType": {
                      "type": "string",
                      "enum": [
                        "job",
                        "service",
                        "fanout"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/AssetGraphResponse.json"
      },
      "def-80": {
        "type": "object",
        "properties": {
          "partitionKey": {
            "type": "string",
            "minLength": 1,
            "maxLength": 200
          },
          "note": {
            "type": "string",
            "minLength": 1,
            "maxLength": 500
          }
        },
        "additionalProperties": false,
        "title": "https://catalog.apphub/schemas/AssetMarkStaleRequest.json"
      },
      "def-81": {
        "type": "object",
        "required": [
          "version",
          "generatedAt",
          "nodes",
          "edges"
        ],
        "properties": {
          "version": {
            "type": "string",
            "enum": [
              "v1",
              "v2"
            ]
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "nodes": {
            "type": "object",
            "required": [
              "workflows",
              "steps",
              "triggers",
              "schedules",
              "assets",
              "eventSources"
            ],
            "properties": {
              "workflows": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "slug",
                    "name",
                    "version",
                    "createdAt",
                    "updatedAt",
                    "annotations"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "anyOf": [
                          {
                            "description": "Arbitrary JSON value.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              },
                              {
                                "type": "object",
                                "additionalProperties": {
                                  "$ref": "#/components/schemas/def-0"
                                }
                              }
                            ]
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    },
                    "annotations": {
                      "type": "object",
                      "required": [
                        "tags"
                      ],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "Annotation tags that can be used for filtering and grouping.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ownerName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ownerContact": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "team": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "domain": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "environment": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "slo": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "steps": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "workflowId",
                    "name",
                    "type",
                    "dependsOn",
                    "dependents",
                    "runtime"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "job",
                        "service",
                        "fanout"
                      ]
                    },
                    "dependsOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dependents": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "runtime": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "jobSlug"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "job"
                              ]
                            },
                            "jobSlug": {
                              "type": "string"
                            },
                            "bundleStrategy": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "enum": [
                                "latest",
                                "pinned"
                              ]
                            },
                            "bundleSlug": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "bundleVersion": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "exportName": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "timeoutMs": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "serviceSlug"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "service"
                              ]
                            },
                            "serviceSlug": {
                              "type": "string"
                            },
                            "timeoutMs": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "requireHealthy": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "allowDegraded": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            },
                            "captureResponse": {
                              "type": [
                                "boolean",
                                "null"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "type",
                            "collection",
                            "template"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "fanout"
                              ]
                            },
                            "collection": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "maxItems": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "maxConcurrency": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "storeResultsAs": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "template": {
                              "type": "object",
                              "required": [
                                "id",
                                "runtime"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "runtime": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "jobSlug"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "job"
                                          ]
                                        },
                                        "jobSlug": {
                                          "type": "string"
                                        },
                                        "bundleStrategy": {
                                          "type": [
                                            "string",
                                            "null"
                                          ],
                                          "enum": [
                                            "latest",
                                            "pinned"
                                          ]
                                        },
                                        "bundleSlug": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "bundleVersion": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "exportName": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "timeoutMs": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type",
                                        "serviceSlug"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "service"
                                          ]
                                        },
                                        "serviceSlug": {
                                          "type": "string"
                                        },
                                        "timeoutMs": {
                                          "type": [
                                            "integer",
                                            "null"
                                          ]
                                        },
                                        "requireHealthy": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "allowDegraded": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        },
                                        "captureResponse": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              },
              "triggers": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "kind",
                        "triggerType"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "definition"
                          ]
                        },
                        "triggerType": {
                          "type": "string"
                        },
                        "options": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "schedule": {
                          "anyOf": [
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "cron"
                                  ],
                                  "properties": {
                                    "cron": {
                                      "type": "string"
                                    },
                                    "timezone": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "startWindow": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "endWindow": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "catchUp": {
                                      "type": [
                                        "boolean",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "kind",
                        "status",
                        "eventType",
                        "predicates",
                        "parameterTemplate",
                        "runKeyTemplate",
                        "throttleWindowMs",
                        "throttleCount",
                        "maxConcurrency",
                        "idempotencyKeyExpression",
                        "metadata",
                        "createdAt",
                        "updatedAt"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "event"
                          ]
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "active",
                            "disabled"
                          ]
                        },
                        "eventType": {
                          "type": "string"
                        },
                        "eventSource": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "predicates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "path",
                              "operator"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "jsonPath"
                                ]
                              },
                              "path": {
                                "type": "string"
                              },
                              "operator": {
                                "type": "string"
                              },
                              "value": {
                                "anyOf": [
                                  {
                                    "description": "Arbitrary JSON value.",
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "additionalProperties": {
                                          "$ref": "#/components/schemas/def-0"
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "values": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "description": "Arbitrary JSON value.",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                }
                              },
                              "caseSensitive": {
                                "type": "boolean"
                              },
                              "flags": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            }
                          }
                        },
                        "parameterTemplate": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "runKeyTemplate": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "throttleWindowMs": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "throttleCount": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "maxConcurrency": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "idempotencyKeyExpression": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "metadata": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "createdBy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "updatedBy": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "schedules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "workflowId",
                    "cron",
                    "timezone",
                    "parameters",
                    "startWindow",
                    "endWindow",
                    "catchUp",
                    "nextRunAt",
                    "isActive",
                    "createdAt",
                    "updatedAt"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "cron": {
                      "type": "string"
                    },
                    "timezone": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "parameters": {
                      "anyOf": [
                        {
                          "description": "Arbitrary JSON value.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            },
                            {
                              "type": "object",
                              "additionalProperties": {
                                "$ref": "#/components/schemas/def-0"
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "startWindow": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "endWindow": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "catchUp": {
                      "type": "boolean"
                    },
                    "nextRunAt": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time"
                    },
                    "isActive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              },
              "assets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "assetId",
                    "normalizedAssetId",
                    "annotations"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "annotations": {
                      "type": "object",
                      "required": [
                        "tags"
                      ],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "Annotation tags that can be used for filtering and grouping.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ownerName": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "ownerContact": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "team": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "domain": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "environment": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "slo": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "eventSources": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "id",
                    "eventType"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string"
                    },
                    "eventSource": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          },
          "edges": {
            "type": "object",
            "required": [
              "triggerToWorkflow",
              "workflowToStep",
              "stepToAsset",
              "assetToWorkflow",
              "eventSourceToTrigger",
              "stepToEventSource"
            ],
            "properties": {
              "triggerToWorkflow": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "kind",
                        "triggerId",
                        "workflowId"
                      ],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": [
                            "event-trigger",
                            "definition-trigger"
                          ]
                        },
                        "triggerId": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "kind",
                        "scheduleId",
                        "workflowId"
                      ],
                      "properties": {
                        "kind": {
                          "type": "string",
                          "enum": [
                            "schedule"
                          ]
                        },
                        "scheduleId": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              },
              "workflowToStep": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "workflowId",
                    "toStepId"
                  ],
                  "properties": {
                    "workflowId": {
                      "type": "string"
                    },
                    "fromStepId": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "toStepId": {
                      "type": "string"
                    }
                  }
                }
              },
              "stepToAsset": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "workflowId",
                    "stepId",
                    "assetId",
                    "normalizedAssetId",
                    "direction"
                  ],
                  "properties": {
                    "workflowId": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string"
                    },
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "direction": {
                      "type": "string",
                      "enum": [
                        "produces",
                        "consumes"
                      ]
                    },
                    "freshness": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "maxAgeMs": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "ttlMs": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "cadenceMs": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        }
                      }
                    },
                    "partitioning": {
                      "anyOf": [
                        {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "granularity"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "timeWindow"
                                  ]
                                },
                                "granularity": {
                                  "type": "string",
                                  "enum": [
                                    "minute",
                                    "hour",
                                    "day",
                                    "week",
                                    "month"
                                  ]
                                },
                                "timezone": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "format": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "lookbackWindows": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "keys"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "static"
                                  ]
                                },
                                "keys": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "dynamic"
                                  ]
                                },
                                "maxKeys": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "retentionDays": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "autoMaterialize": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "onUpstreamUpdate": {
                          "type": "boolean"
                        },
                        "priority": {
                          "type": [
                            "integer",
                            "null"
                          ]
                        },
                        "parameterDefaults": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "assetToWorkflow": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "assetId",
                    "normalizedAssetId",
                    "workflowId",
                    "reason"
                  ],
                  "properties": {
                    "assetId": {
                      "type": "string"
                    },
                    "normalizedAssetId": {
                      "type": "string"
                    },
                    "workflowId": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "reason": {
                      "type": "string",
                      "enum": [
                        "auto-materialize"
                      ]
                    },
                    "priority": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    }
                  }
                }
              },
              "eventSourceToTrigger": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "sourceId",
                    "triggerId"
                  ],
                  "properties": {
                    "sourceId": {
                      "type": "string"
                    },
                    "triggerId": {
                      "type": "string"
                    }
                  }
                }
              },
              "stepToEventSource": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "workflowId",
                    "stepId",
                    "sourceId",
                    "kind",
                    "confidence"
                  ],
                  "properties": {
                    "workflowId": {
                      "type": "string"
                    },
                    "stepId": {
                      "type": "string"
                    },
                    "sourceId": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "enum": [
                        "inferred"
                      ]
                    },
                    "confidence": {
                      "type": "object",
                      "required": [
                        "sampleCount",
                        "lastSeenAt"
                      ],
                      "properties": {
                        "sampleCount": {
                          "type": "integer",
                          "minimum": 0
                        },
                        "lastSeenAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowTopologyGraph.json"
      },
      "def-82": {
        "type": "object",
        "required": [
          "hit",
          "stats"
        ],
        "properties": {
          "hit": {
            "type": "boolean"
          },
          "cachedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "ageMs": {
            "type": [
              "integer",
              "null"
            ]
          },
          "expiresAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "stats": {
            "type": "object",
            "required": [
              "hits",
              "misses",
              "invalidations"
            ],
            "properties": {
              "hits": {
                "type": "integer"
              },
              "misses": {
                "type": "integer"
              },
              "invalidations": {
                "type": "integer"
              }
            }
          },
          "lastInvalidatedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "lastInvalidationReason": {
            "type": [
              "string",
              "null"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowGraphCacheMeta.json"
      },
      "def-83": {
        "type": "object",
        "required": [
          "hits",
          "misses",
          "invalidations"
        ],
        "properties": {
          "hits": {
            "type": "integer"
          },
          "misses": {
            "type": "integer"
          },
          "invalidations": {
            "type": "integer"
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowGraphCacheStats.json"
      },
      "def-84": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "version",
              "generatedAt",
              "nodes",
              "edges"
            ],
            "properties": {
              "version": {
                "type": "string",
                "enum": [
                  "v1",
                  "v2"
                ]
              },
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "nodes": {
                "type": "object",
                "required": [
                  "workflows",
                  "steps",
                  "triggers",
                  "schedules",
                  "assets",
                  "eventSources"
                ],
                "properties": {
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "slug",
                        "name",
                        "version",
                        "createdAt",
                        "updatedAt",
                        "annotations"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "version": {
                          "type": "integer"
                        },
                        "description": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "metadata": {
                          "type": [
                            "null",
                            "object"
                          ],
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "description": "Arbitrary JSON value.",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "additionalProperties": {
                                      "$ref": "#/components/schemas/def-0"
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        },
                        "annotations": {
                          "type": "object",
                          "required": [
                            "tags"
                          ],
                          "properties": {
                            "tags": {
                              "type": "array",
                              "description": "Annotation tags that can be used for filtering and grouping.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ownerName": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "ownerContact": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "team": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "domain": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "environment": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "slo": {
                              "type": [
                                "null",
                                "string"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "steps": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "name",
                        "type",
                        "dependsOn",
                        "dependents",
                        "runtime"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "job",
                            "service",
                            "fanout"
                          ]
                        },
                        "dependsOn": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "dependents": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "runtime": {
                          "oneOf": [
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "jobSlug"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "job"
                                  ]
                                },
                                "jobSlug": {
                                  "type": "string"
                                },
                                "bundleStrategy": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "enum": [
                                    "latest",
                                    "pinned"
                                  ]
                                },
                                "bundleSlug": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "bundleVersion": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "exportName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "timeoutMs": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "serviceSlug"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "service"
                                  ]
                                },
                                "serviceSlug": {
                                  "type": "string"
                                },
                                "timeoutMs": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "requireHealthy": {
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "allowDegraded": {
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                },
                                "captureResponse": {
                                  "type": [
                                    "boolean",
                                    "null"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "type",
                                "collection",
                                "template"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "fanout"
                                  ]
                                },
                                "collection": {
                                  "anyOf": [
                                    {
                                      "description": "Arbitrary JSON value.",
                                      "oneOf": [
                                        {
                                          "type": "string"
                                        },
                                        {
                                          "type": "number"
                                        },
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "boolean"
                                        },
                                        {
                                          "type": "array",
                                          "items": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "additionalProperties": {
                                            "$ref": "#/components/schemas/def-0"
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "null"
                                    }
                                  ]
                                },
                                "maxItems": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "maxConcurrency": {
                                  "type": [
                                    "integer",
                                    "null"
                                  ]
                                },
                                "storeResultsAs": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "template": {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "runtime"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "runtime": {
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "jobSlug"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "job"
                                              ]
                                            },
                                            "jobSlug": {
                                              "type": "string"
                                            },
                                            "bundleStrategy": {
                                              "type": [
                                                "string",
                                                "null"
                                              ],
                                              "enum": [
                                                "latest",
                                                "pinned"
                                              ]
                                            },
                                            "bundleSlug": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "bundleVersion": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "exportName": {
                                              "type": [
                                                "string",
                                                "null"
                                              ]
                                            },
                                            "timeoutMs": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type",
                                            "serviceSlug"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "service"
                                              ]
                                            },
                                            "serviceSlug": {
                                              "type": "string"
                                            },
                                            "timeoutMs": {
                                              "type": [
                                                "integer",
                                                "null"
                                              ]
                                            },
                                            "requireHealthy": {
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            },
                                            "allowDegraded": {
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            },
                                            "captureResponse": {
                                              "type": [
                                                "boolean",
                                                "null"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  },
                  "triggers": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "workflowId",
                            "kind",
                            "triggerType"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "definition"
                              ]
                            },
                            "triggerType": {
                              "type": "string"
                            },
                            "options": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "schedule": {
                              "anyOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "cron"
                                      ],
                                      "properties": {
                                        "cron": {
                                          "type": "string"
                                        },
                                        "timezone": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "startWindow": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "endWindow": {
                                          "type": [
                                            "string",
                                            "null"
                                          ]
                                        },
                                        "catchUp": {
                                          "type": [
                                            "boolean",
                                            "null"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "workflowId",
                            "kind",
                            "status",
                            "eventType",
                            "predicates",
                            "parameterTemplate",
                            "runKeyTemplate",
                            "throttleWindowMs",
                            "throttleCount",
                            "maxConcurrency",
                            "idempotencyKeyExpression",
                            "metadata",
                            "createdAt",
                            "updatedAt"
                          ],
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string",
                              "enum": [
                                "event"
                              ]
                            },
                            "name": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "description": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "active",
                                "disabled"
                              ]
                            },
                            "eventType": {
                              "type": "string"
                            },
                            "eventSource": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "predicates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "type",
                                  "path",
                                  "operator"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "jsonPath"
                                    ]
                                  },
                                  "path": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "anyOf": [
                                      {
                                        "description": "Arbitrary JSON value.",
                                        "oneOf": [
                                          {
                                            "type": "string"
                                          },
                                          {
                                            "type": "number"
                                          },
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "boolean"
                                          },
                                          {
                                            "type": "array",
                                            "items": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "additionalProperties": {
                                              "$ref": "#/components/schemas/def-0"
                                            }
                                          }
                                        ]
                                      },
                                      {
                                        "type": "null"
                                      }
                                    ]
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "anyOf": [
                                        {
                                          "description": "Arbitrary JSON value.",
                                          "oneOf": [
                                            {
                                              "type": "string"
                                            },
                                            {
                                              "type": "number"
                                            },
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "boolean"
                                            },
                                            {
                                              "type": "array",
                                              "items": {
                                                "$ref": "#/components/schemas/def-0"
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "additionalProperties": {
                                                "$ref": "#/components/schemas/def-0"
                                              }
                                            }
                                          ]
                                        },
                                        {
                                          "type": "null"
                                        }
                                      ]
                                    }
                                  },
                                  "caseSensitive": {
                                    "type": "boolean"
                                  },
                                  "flags": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  }
                                }
                              }
                            },
                            "parameterTemplate": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "runKeyTemplate": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "throttleWindowMs": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "throttleCount": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "maxConcurrency": {
                              "type": [
                                "integer",
                                "null"
                              ]
                            },
                            "idempotencyKeyExpression": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "metadata": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "updatedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "createdBy": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "updatedBy": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "schedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "workflowId",
                        "cron",
                        "timezone",
                        "parameters",
                        "startWindow",
                        "endWindow",
                        "catchUp",
                        "nextRunAt",
                        "isActive",
                        "createdAt",
                        "updatedAt"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "name": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "description": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "cron": {
                          "type": "string"
                        },
                        "timezone": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "parameters": {
                          "anyOf": [
                            {
                              "description": "Arbitrary JSON value.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "type": "array",
                                  "items": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                },
                                {
                                  "type": "object",
                                  "additionalProperties": {
                                    "$ref": "#/components/schemas/def-0"
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "startWindow": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "endWindow": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "catchUp": {
                          "type": "boolean"
                        },
                        "nextRunAt": {
                          "type": [
                            "null",
                            "string"
                          ],
                          "format": "date-time"
                        },
                        "isActive": {
                          "type": "boolean"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "assets": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "assetId",
                        "normalizedAssetId",
                        "annotations"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string"
                        },
                        "normalizedAssetId": {
                          "type": "string"
                        },
                        "annotations": {
                          "type": "object",
                          "required": [
                            "tags"
                          ],
                          "properties": {
                            "tags": {
                              "type": "array",
                              "description": "Annotation tags that can be used for filtering and grouping.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ownerName": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "ownerContact": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "team": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "domain": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "environment": {
                              "type": [
                                "null",
                                "string"
                              ]
                            },
                            "slo": {
                              "type": [
                                "null",
                                "string"
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "eventSources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "eventType"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "eventType": {
                          "type": "string"
                        },
                        "eventSource": {
                          "type": [
                            "null",
                            "string"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "edges": {
                "type": "object",
                "required": [
                  "triggerToWorkflow",
                  "workflowToStep",
                  "stepToAsset",
                  "assetToWorkflow",
                  "eventSourceToTrigger",
                  "stepToEventSource"
                ],
                "properties": {
                  "triggerToWorkflow": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "kind",
                            "triggerId",
                            "workflowId"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "event-trigger",
                                "definition-trigger"
                              ]
                            },
                            "triggerId": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "kind",
                            "scheduleId",
                            "workflowId"
                          ],
                          "properties": {
                            "kind": {
                              "type": "string",
                              "enum": [
                                "schedule"
                              ]
                            },
                            "scheduleId": {
                              "type": "string"
                            },
                            "workflowId": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "workflowToStep": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "workflowId",
                        "toStepId"
                      ],
                      "properties": {
                        "workflowId": {
                          "type": "string"
                        },
                        "fromStepId": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "toStepId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "stepToAsset": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "workflowId",
                        "stepId",
                        "assetId",
                        "normalizedAssetId",
                        "direction"
                      ],
                      "properties": {
                        "workflowId": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string"
                        },
                        "assetId": {
                          "type": "string"
                        },
                        "normalizedAssetId": {
                          "type": "string"
                        },
                        "direction": {
                          "type": "string",
                          "enum": [
                            "produces",
                            "consumes"
                          ]
                        },
                        "freshness": {
                          "type": [
                            "null",
                            "object"
                          ],
                          "properties": {
                            "maxAgeMs": {
                              "type": [
                                "null",
                                "integer"
                              ]
                            },
                            "ttlMs": {
                              "type": [
                                "null",
                                "integer"
                              ]
                            },
                            "cadenceMs": {
                              "type": [
                                "null",
                                "integer"
                              ]
                            }
                          }
                        },
                        "partitioning": {
                          "anyOf": [
                            {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "granularity"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "timeWindow"
                                      ]
                                    },
                                    "granularity": {
                                      "type": "string",
                                      "enum": [
                                        "minute",
                                        "hour",
                                        "day",
                                        "week",
                                        "month"
                                      ]
                                    },
                                    "timezone": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "format": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    },
                                    "lookbackWindows": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type",
                                    "keys"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "static"
                                      ]
                                    },
                                    "keys": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "dynamic"
                                      ]
                                    },
                                    "maxKeys": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    },
                                    "retentionDays": {
                                      "type": [
                                        "integer",
                                        "null"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "autoMaterialize": {
                          "type": [
                            "null",
                            "object"
                          ],
                          "properties": {
                            "onUpstreamUpdate": {
                              "type": "boolean"
                            },
                            "priority": {
                              "type": [
                                "null",
                                "integer"
                              ]
                            },
                            "parameterDefaults": {
                              "anyOf": [
                                {
                                  "description": "Arbitrary JSON value.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "additionalProperties": {
                                        "$ref": "#/components/schemas/def-0"
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "assetToWorkflow": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "assetId",
                        "normalizedAssetId",
                        "workflowId",
                        "reason"
                      ],
                      "properties": {
                        "assetId": {
                          "type": "string"
                        },
                        "normalizedAssetId": {
                          "type": "string"
                        },
                        "workflowId": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": [
                            "null",
                            "string"
                          ]
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "auto-materialize"
                          ]
                        },
                        "priority": {
                          "type": [
                            "null",
                            "integer"
                          ]
                        }
                      }
                    }
                  },
                  "eventSourceToTrigger": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "sourceId",
                        "triggerId"
                      ],
                      "properties": {
                        "sourceId": {
                          "type": "string"
                        },
                        "triggerId": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "stepToEventSource": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "workflowId",
                        "stepId",
                        "sourceId",
                        "kind",
                        "confidence"
                      ],
                      "properties": {
                        "workflowId": {
                          "type": "string"
                        },
                        "stepId": {
                          "type": "string"
                        },
                        "sourceId": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "inferred"
                          ]
                        },
                        "confidence": {
                          "type": "object",
                          "required": [
                            "sampleCount",
                            "lastSeenAt"
                          ],
                          "properties": {
                            "sampleCount": {
                              "type": "integer",
                              "minimum": 0
                            },
                            "lastSeenAt": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "cache"
            ],
            "properties": {
              "cache": {
                "type": "object",
                "required": [
                  "hit",
                  "stats"
                ],
                "properties": {
                  "hit": {
                    "type": "boolean"
                  },
                  "cachedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "ageMs": {
                    "type": [
                      "null",
                      "integer"
                    ]
                  },
                  "expiresAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "stats": {
                    "type": "object",
                    "required": [
                      "hits",
                      "misses",
                      "invalidations"
                    ],
                    "properties": {
                      "hits": {
                        "type": "integer"
                      },
                      "misses": {
                        "type": "integer"
                      },
                      "invalidations": {
                        "type": "integer"
                      }
                    }
                  },
                  "lastInvalidatedAt": {
                    "type": [
                      "null",
                      "string"
                    ],
                    "format": "date-time"
                  },
                  "lastInvalidationReason": {
                    "type": [
                      "null",
                      "string"
                    ]
                  }
                }
              }
            }
          }
        },
        "title": "https://catalog.apphub/schemas/WorkflowGraphResponse.json"
      },
      "def-85": {
        "type": "object",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ok"
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/HealthResponse.json"
      },
      "def-86": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "anyOf": [
              {
                "description": "Arbitrary JSON value.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  },
                  {
                    "type": "integer"
                  },
                  {
                    "type": "boolean"
                  },
                  {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  },
                  {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/def-0"
                    }
                  }
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "title": "https://catalog.apphub/schemas/ErrorResponse.json"
      }
    },
    "securitySchemes": {
      "OperatorToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token",
        "description": "Operator access token supplied via the Authorization header: `Authorization: Bearer <token>`."
      },
      "ServiceRegistryToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "Token",
        "description": "Service registry token supplied via the Authorization header when registering services."
      }
    }
  },
  "paths": {
    "/openapi.json": {
      "get": {
        "summary": "OpenAPI specification",
        "tags": [
          "System"
        ],
        "description": "Returns the generated OpenAPI document for the catalog service.",
        "responses": {
          "200": {
            "description": "The generated OpenAPI document.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Readiness probe",
        "tags": [
          "System"
        ],
        "description": "Returns a simple status payload when the API is healthy.",
        "responses": {
          "200": {
            "description": "The API is healthy.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-85"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metrics/prometheus": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "summary": "Initiate OIDC login",
        "tags": [
          "Auth"
        ],
        "description": "Generates an OAuth authorization request and redirects the browser to the configured identity provider.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "redirectTo",
            "required": false,
            "description": "Optional relative path to redirect to after successful authentication."
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect to the external identity provider.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Redirect to the external identity provider."
                }
              }
            }
          },
          "400": {
            "description": "The request query parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The identity provider request failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Single sign-on is not enabled on this instance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/auth/callback": {
      "get": {
        "summary": "OIDC login callback",
        "tags": [
          "Auth"
        ],
        "description": "Handles the OAuth authorization response, issues a secure session cookie, and redirects back to the application.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "state",
            "required": true,
            "description": "Opaque login state value issued during the authorization request."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "code",
            "required": true,
            "description": "Authorization code returned by the identity provider."
          }
        ],
        "responses": {
          "302": {
            "description": "User is redirected to the requested application page.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "User is redirected to the requested application page."
                }
              }
            }
          },
          "400": {
            "description": "The login state or authorization payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The authenticated identity is not allowed to access the platform.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The identity provider request failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Single sign-on is not enabled on this instance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Terminate current session",
        "tags": [
          "Auth"
        ],
        "description": "Revokes the caller's active session and clears the session cookie.",
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "The session was terminated.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The session was terminated."
                }
              }
            }
          }
        }
      }
    },
    "/auth/identity": {
      "get": {
        "summary": "Retrieve authenticated identity",
        "tags": [
          "Auth"
        ],
        "description": "Returns the subject, scopes, and metadata for the active session, API key, or operator token.",
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Identity details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-24"
                }
              }
            }
          },
          "401": {
            "description": "No valid session or authorization token was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller did not have permission to inspect identity information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/auth/api-keys": {
      "get": {
        "summary": "List API keys",
        "tags": [
          "Auth"
        ],
        "description": "Returns the API keys owned by the authenticated user.",
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "API keys for the current user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-69"
                }
              }
            }
          },
          "401": {
            "description": "No valid session or authorization token was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to list API keys.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Authentication is disabled on this instance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create API key",
        "tags": [
          "Auth"
        ],
        "description": "Mints a new API key scoped to the authenticated user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 120
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "expiresAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  },
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {}
                  }
                ]
              }
            }
          }
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "API key created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-70"
                }
              }
            }
          },
          "400": {
            "description": "The API key request payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "No valid session or authorization token was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to create API keys.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Authentication is disabled on this instance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/auth/api-keys/{id}": {
      "delete": {
        "summary": "Revoke API key",
        "tags": [
          "Auth"
        ],
        "description": "Revokes an API key owned by the authenticated user.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Unique identifier of the API key to revoke."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "The API key was revoked.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "The API key was revoked."
                }
              }
            }
          },
          "400": {
            "description": "The API key identifier was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "No valid session or authorization token was provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to revoke API keys.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "No API key matched the supplied identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Authentication is disabled on this instance.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "summary": "List job definitions",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "Job definitions currently available to run.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-40"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a job definition",
        "tags": [
          "Jobs"
        ],
        "description": "Creates a new job definition. Only callers with the jobs:write scope may invoke this endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-37"
              }
            }
          }
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "The job definition was created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-39"
                }
              }
            }
          },
          "400": {
            "description": "The request payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The operator token is missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "409": {
            "description": "A job definition with the same slug already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The server failed to persist the job definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/runtimes": {
      "get": {
        "summary": "List runtime readiness",
        "tags": [
          "Jobs"
        ],
        "description": "Reports whether each job runtime (node, python, docker) is ready to execute jobs.",
        "responses": {
          "200": {
            "description": "Runtime readiness diagnostics.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-46"
                }
              }
            }
          },
          "500": {
            "description": "Failed to compute runtime readiness.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/job-runs": {
      "get": {
        "summary": "List job runs",
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Comma-separated job run statuses to filter (pending,running,succeeded,failed,canceled,expired)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "job",
            "required": false,
            "description": "Comma-separated list of job slugs to filter."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "runtime",
            "required": false,
            "description": "Comma-separated list of runtimes to filter (node,python,docker)."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 200
            },
            "in": "query",
            "name": "search",
            "required": false
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Job runs matching the requested filters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-43"
                }
              }
            }
          },
          "400": {
            "description": "The job run filters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to list job runs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{slug}": {
      "patch": {
        "summary": "Update a job definition",
        "tags": [
          "Jobs"
        ],
        "description": "Updates an existing job definition. Requires jobs:write scope.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-38"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Job definition slug."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Job definition updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-39"
                }
              }
            }
          },
          "400": {
            "description": "The update payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The operator token is missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Job definition not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "409": {
            "description": "The update conflicted with an existing job definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The server failed to persist the job definition.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get job definition with recent runs",
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Comma-separated job run statuses to filter (pending,running,succeeded,failed,canceled,expired)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "job",
            "required": false,
            "description": "Comma-separated list of job slugs to filter."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "runtime",
            "required": false,
            "description": "Comma-separated list of runtimes to filter (node,python,docker)."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 200
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Job definition slug."
          }
        ],
        "responses": {
          "200": {
            "description": "Job definition and recent runs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-44"
                }
              }
            }
          },
          "400": {
            "description": "The job lookup parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Job definition not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to load job details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/schema-preview": {
      "post": {
        "summary": "Preview job entry point schemas",
        "tags": [
          "Jobs"
        ],
        "description": "Introspects a bundle entry point to infer input and output schemas.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "entryPoint"
                ],
                "properties": {
                  "entryPoint": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "runtime": {
                    "type": "string",
                    "enum": [
                      "node",
                      "python",
                      "docker"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Inferred schemas for the supplied entry point.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-48"
                }
              }
            }
          },
          "400": {
            "description": "The schema preview payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to preview job schemas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to inspect entry point schemas.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/python-snippet/preview": {
      "post": {
        "summary": "Preview Python snippet analysis",
        "tags": [
          "Jobs"
        ],
        "description": "Analyzes a Python snippet to infer handler metadata before creating a job.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "snippet"
                ],
                "properties": {
                  "snippet": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20000
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Python snippet analysis results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-71"
                }
              }
            }
          },
          "400": {
            "description": "The Python snippet payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to analyze Python snippets.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to analyze the Python snippet.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/python-snippet": {
      "post": {
        "summary": "Create a Python snippet job",
        "tags": [
          "Jobs"
        ],
        "description": "Analyzes the provided snippet, generates a bundle, and creates or updates the job definition.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "slug",
                  "name",
                  "type",
                  "snippet",
                  "versionStrategy"
                ],
                "properties": {
                  "slug": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "Job slug (alphanumeric, dash, underscore)."
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "batch",
                      "service-triggered",
                      "manual"
                    ]
                  },
                  "snippet": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 20000
                  },
                  "dependencies": {
                    "type": "array",
                    "maxItems": 32,
                    "items": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 120
                    }
                  },
                  "timeoutMs": {
                    "type": "integer",
                    "minimum": 1000,
                    "maximum": 86400000
                  },
                  "versionStrategy": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "manual"
                    ]
                  },
                  "bundleSlug": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100,
                    "description": "Bundle slug to reuse (optional when versionStrategy is auto)."
                  },
                  "bundleVersion": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "jobVersion": {
                    "type": "integer",
                    "minimum": 1
                  }
                }
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Python snippet job created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-72"
                }
              }
            }
          },
          "400": {
            "description": "The Python snippet payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to create Python snippet jobs.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to create Python snippet job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{slug}/bundle-editor": {
      "get": {
        "summary": "Fetch bundle editor context for a job",
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Slug of the job definition to inspect."
          }
        ],
        "responses": {
          "200": {
            "description": "Current bundle editor state for the requested job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-51"
                }
              }
            }
          },
          "400": {
            "description": "The provided slug failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "No job or bundle editor snapshot was found for the provided slug.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred while loading the bundle editor snapshot.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{slug}/bundle/ai-edit": {
      "post": {
        "summary": "Generate bundle edits with AI",
        "tags": [
          "Jobs"
        ],
        "description": "Runs an AI provider against the current job bundle and publishes a new version when the response is valid.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-52"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Slug of the job whose bundle should be regenerated."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "A new bundle version was generated and bound to the job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-51"
                }
              }
            }
          },
          "400": {
            "description": "Request parameters or generated bundle payload were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked an operator token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The supplied operator token was missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "No job or bundle editor snapshot was found for the provided slug.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "409": {
            "description": "The job is not bound to a bundle entry point or the generated version already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "422": {
            "description": "The AI response did not contain a valid bundle suggestion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The server failed to publish the generated bundle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "502": {
            "description": "The selected AI provider failed to generate a response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{slug}/bundle/regenerate": {
      "post": {
        "summary": "Regenerate bundle editor snapshot",
        "tags": [
          "Jobs"
        ],
        "description": "Applies manual bundle edits and publishes a new version bound to the job.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-53"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Job definition slug."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Bundle regenerated and bound to the job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-51"
                }
              }
            }
          },
          "400": {
            "description": "The bundle regenerate payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked an operator token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The supplied operator token was missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Job or bundle editor snapshot not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "409": {
            "description": "A conflicting bundle version already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "422": {
            "description": "The bundle edits were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to regenerate the bundle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{slug}/run": {
      "post": {
        "summary": "Trigger a job run",
        "tags": [
          "Jobs"
        ],
        "description": "Queues a run for the specified job definition.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-54"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Job definition slug."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "202": {
            "description": "Job run scheduled.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-41"
                }
              }
            }
          },
          "400": {
            "description": "The job run payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to run the job.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Job definition not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to schedule the job run.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/job-bundles": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-bundles/{slug}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-bundles/{slug}/versions/{version}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-bundles/{slug}/versions/{version}/download": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "version",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/examples/load": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/examples/bundles/status": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/examples/bundles/{slug}/fingerprints/{fingerprint}/download": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "fingerprint",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-imports/example": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-imports/example/{slug}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-imports/preview": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/job-imports": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/examples/catalog": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/builder/context": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/builder/generations": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/builder/generations/{generationId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "generationId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/builder/suggest": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/ai/builder/jobs": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/triggers": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/triggers/{triggerId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "triggerId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "triggerId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "triggerId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/triggers/{triggerId}/deliveries": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "triggerId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/graph": {
      "get": {
        "summary": "Retrieve workflow topology graph",
        "tags": [
          "Workflows"
        ],
        "description": "Returns the cached workflow topology graph used by the operations console. Requires the workflows:write operator scope.",
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current workflow topology graph snapshot.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-84"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked an operator token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The supplied operator token did not include the workflows:write scope.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The server failed to assemble the workflow topology graph.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/workflows": {
      "get": {
        "summary": "List workflow definitions",
        "tags": [
          "Workflows"
        ],
        "responses": {
          "200": {
            "description": "Workflow definitions currently available.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-63"
                }
              }
            }
          },
          "500": {
            "description": "The server failed to fetch workflow definitions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a workflow definition",
        "tags": [
          "Workflows"
        ],
        "description": "Creates a workflow by composing job and service steps. Requires the workflows:write operator scope.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-61"
              }
            }
          }
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Workflow definition created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-62"
                }
              }
            }
          },
          "400": {
            "description": "The workflow payload failed validation or the DAG is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked an operator token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The operator token is missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "409": {
            "description": "A workflow with the provided slug already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "The server failed to create the workflow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-schedules": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflow-runs": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflow-activity": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/schedules": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/runs": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/timeline": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/auto-materialize": {
      "get": {
        "summary": "Inspect auto materialize status",
        "tags": [
          "Workflows"
        ],
        "description": "Provides recent auto-materialize runs, in-flight claims, and cooldown status for the specified workflow.",
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50
            },
            "in": "query",
            "name": "limit",
            "required": false
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "offset",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Comma-separated workflow run statuses to filter."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "workflow",
            "required": false,
            "description": "Comma-separated workflow slugs to filter."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "trigger",
            "required": false,
            "description": "Comma-separated trigger identifiers to filter."
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 200
            },
            "in": "query",
            "name": "partition",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "maxLength": 200
            },
            "in": "query",
            "name": "search",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "from",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "to",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Workflow slug to inspect."
          }
        ],
        "responses": {
          "200": {
            "description": "Auto-materialize status for the workflow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-67"
                }
              }
            }
          },
          "400": {
            "description": "The request parameters or query failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Workflow not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/workflow-schedules/{scheduleId}": {
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "scheduleId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "scheduleId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/stats": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/run-metrics": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/assets": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/assets/{assetId}/history": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assetId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/assets/{assetId}/partitions": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assetId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/assets/{assetId}/partition-parameters": {
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assetId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assetId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflows/{slug}/run": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflow-runs/{runId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "runId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/workflow-runs/{runId}/steps": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "runId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/assets/graph": {
      "get": {
        "summary": "Retrieve workflow asset graph",
        "tags": [
          "Workflows"
        ],
        "description": "Aggregates asset producers and consumers across all registered workflows.",
        "responses": {
          "200": {
            "description": "Current asset graph snapshot.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-79"
                }
              }
            }
          },
          "500": {
            "description": "Failed to build the workflow asset graph.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/workflows/{slug}/assets/{assetId}/stale": {
      "post": {
        "summary": "Mark workflow asset as stale",
        "tags": [
          "Workflows"
        ],
        "description": "Marks an asset or partition as stale so downstream workloads know to refresh dependent data.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-80"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Workflow slug containing the asset."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "Asset identifier declared by the workflow."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Marked the asset or partition as stale.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Marked the asset or partition as stale."
                }
              }
            }
          },
          "400": {
            "description": "The request parameters or body failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked an operator token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The operator token was missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Workflow asset not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to mark the asset as stale.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Clear stale asset status",
        "tags": [
          "Workflows"
        ],
        "description": "Clears the stale marker for an asset or partition so downstream jobs can resume.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "maxLength": 200
            },
            "in": "query",
            "name": "partitionKey",
            "required": false,
            "description": "Optional partition key to target a specific asset slice."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Workflow slug containing the asset."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "assetId",
            "required": true,
            "description": "Asset identifier declared by the workflow."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Cleared the stale marker for the asset or partition.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Cleared the stale marker for the asset or partition."
                }
              }
            }
          },
          "400": {
            "description": "The request parameters or query failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The request lacked an operator token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The operator token was missing required scopes.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Workflow asset not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to clear the stale marker.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "List registered services",
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "Service inventory and health summary.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-32"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Register or update a service",
        "tags": [
          "Services"
        ],
        "description": "Adds a new service entry or updates the metadata for an existing service. Requires the service registry bearer token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-34"
              }
            }
          }
        },
        "security": [
          {
            "ServiceRegistryToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "The service metadata was updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-33"
                }
              }
            }
          },
          "201": {
            "description": "A new service was registered.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-33"
                }
              }
            }
          },
          "400": {
            "description": "The service payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "Authorization header was missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "Authorization header was rejected.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Service registry support is disabled on this deployment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/services/{slug}/preview": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/services/{slug}/preview/{*}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/service-config/import": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/service-networks/import": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/services/{slug}": {
      "patch": {
        "summary": "Update a registered service",
        "tags": [
          "Services"
        ],
        "description": "Updates metadata for an existing service entry. Requires the service registry bearer token.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "baseUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "unknown",
                      "healthy",
                      "degraded",
                      "unreachable"
                    ]
                  },
                  "statusMessage": {
                    "type": "string",
                    "nullable": true
                  },
                  "capabilities": {
                    "$ref": "#/components/schemas/def-0"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/def-30"
                  },
                  "lastHealthyAt": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Service slug."
          }
        ],
        "security": [
          {
            "ServiceRegistryToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated service metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-33"
                }
              }
            }
          },
          "400": {
            "description": "The service payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "Authorization header was missing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "Authorization header was rejected.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "Service not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "Failed to update service.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "503": {
            "description": "Service registry support is disabled on this deployment.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/metastore": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "head": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "trace": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/metastore/{*}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "head": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "trace": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "options": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/timestore": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "head": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "trace": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/timestore/{*}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "head": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "trace": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "options": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/filestore": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "head": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "trace": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "options": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/filestore/{*}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "head": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "trace": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "options": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "*",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/apps": {
      "get": {
        "summary": "Search repositories",
        "tags": [
          "Apps"
        ],
        "description": "Retrieves repositories matching text, tag, and ingest-status filters. Results include aggregated facets and relevance metadata.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "q",
            "required": false,
            "description": "Free-text query matched against repository name, description, and tags."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tags",
            "required": false,
            "description": "Space or comma-delimited list of tag filters. Each token is matched against stored tag key/value pairs."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "status",
            "required": false,
            "description": "Space or comma-delimited list of ingest statuses to include (seed, pending, processing, ready, failed)."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "ingestedAfter",
            "required": false,
            "description": "Only return repositories ingested on or after the provided ISO timestamp."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "ingestedBefore",
            "required": false,
            "description": "Only return repositories ingested on or before the provided ISO timestamp."
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "updated",
                "name"
              ]
            },
            "in": "query",
            "name": "sort",
            "required": false,
            "description": "Sort order applied to search results."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "relevance",
            "required": false,
            "description": "Optional JSON-encoded object overriding relevance weights. Unspecified weights fall back to defaults."
          }
        ],
        "responses": {
          "200": {
            "description": "Matching repositories were found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-9"
                }
              }
            }
          },
          "400": {
            "description": "The supplied query parameters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Submit a repository for ingestion",
        "tags": [
          "Apps"
        ],
        "description": "Queues a new repository for ingestion. The payload mirrors the information collected in the Apphub submission form.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-25"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The repository was accepted for ingestion.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-10"
                }
              }
            }
          },
          "400": {
            "description": "The submission payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{id}": {
      "get": {
        "summary": "Fetch a repository by identifier",
        "tags": [
          "Apps"
        ],
        "description": "Returns repository metadata, ingest status, and latest build/launch information.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true,
            "description": "Repository identifier."
          }
        ],
        "responses": {
          "200": {
            "description": "Repository details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-10"
                }
              }
            }
          },
          "400": {
            "description": "The supplied identifier was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "No repository matched the supplied identifier.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{id}/history": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/apps/{id}/builds": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/apps/{id}/launches": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/apps/{id}/launch": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/launches": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/apps/{id}/launches/{launchId}/stop": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "launchId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/builds/{id}/logs": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/builds/{id}/retry": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/tags/suggest": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/apps/{id}/retry": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/saved-searches": {
      "get": {
        "summary": "List saved catalog searches",
        "tags": [
          "Saved Searches"
        ],
        "description": "Returns saved catalog searches owned by the authenticated operator.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "category",
            "required": false,
            "description": "Optional category slug used to filter saved searches."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Saved searches available to the caller.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-13"
                }
              }
            }
          },
          "400": {
            "description": "The saved search filters were invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to access saved searches.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a saved catalog search",
        "tags": [
          "Saved Searches"
        ],
        "description": "Persists a reusable catalog search definition for the authenticated operator.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-14"
              }
            }
          }
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Saved search created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-12"
                }
              }
            }
          },
          "400": {
            "description": "The saved search payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to create saved searches.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred while creating the saved search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/saved-searches/{slug}": {
      "get": {
        "summary": "Get a saved catalog search",
        "tags": [
          "Saved Searches"
        ],
        "description": "Retrieves a saved search owned by the authenticated operator.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved search slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Saved search details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-12"
                }
              }
            }
          },
          "400": {
            "description": "The saved search slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to inspect the saved search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "No saved search matches the supplied slug.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a saved catalog search",
        "tags": [
          "Saved Searches"
        ],
        "description": "Updates attributes of an existing saved search owned by the caller.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-15"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved search slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Saved search updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-12"
                }
              }
            }
          },
          "400": {
            "description": "The update payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to modify the saved search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved search does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a saved catalog search",
        "tags": [
          "Saved Searches"
        ],
        "description": "Removes a saved search owned by the authenticated operator.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved search slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Saved search deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Saved search deleted."
                }
              }
            }
          },
          "400": {
            "description": "The saved search slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to delete the saved search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved search does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/saved-searches/{slug}/apply": {
      "post": {
        "summary": "Record saved search application",
        "tags": [
          "Saved Searches"
        ],
        "description": "Increments usage metrics after applying a saved search.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved search slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated saved search metrics.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-12"
                }
              }
            }
          },
          "400": {
            "description": "The saved search slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to update the saved search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved search does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/saved-searches/{slug}/share": {
      "post": {
        "summary": "Record saved search share action",
        "tags": [
          "Saved Searches"
        ],
        "description": "Increments share metrics for a saved search.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved search slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated saved search metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-12"
                }
              }
            }
          },
          "400": {
            "description": "The saved search slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to update the saved search.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved search does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/events/saved-views": {
      "get": {
        "summary": "List saved event views",
        "tags": [
          "Events"
        ],
        "description": "Returns saved event views available to the authenticated operator, including shared presets.",
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Saved event views available to the caller.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-20"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to view saved event overlays.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a saved event view",
        "tags": [
          "Events"
        ],
        "description": "Persists a reusable filter preset for the events explorer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-21"
              }
            }
          }
        },
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "201": {
            "description": "Saved event view created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-19"
                }
              }
            }
          },
          "400": {
            "description": "The saved view payload failed validation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to create saved event views.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred while creating the saved event view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/events/saved-views/{slug}": {
      "get": {
        "summary": "Get a saved event view",
        "tags": [
          "Events"
        ],
        "description": "Retrieves a saved event view, including analytics, owned or shared to the caller.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved view slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Saved event view details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-19"
                }
              }
            }
          },
          "400": {
            "description": "The saved view slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to inspect the saved view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "No saved event view matches the supplied slug.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a saved event view",
        "tags": [
          "Events"
        ],
        "description": "Updates a saved event view owned by the caller.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/def-22"
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved view slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Saved event view updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-19"
                }
              }
            }
          },
          "400": {
            "description": "The saved view update payload was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to modify the saved view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved event view does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "500": {
            "description": "An unexpected error occurred while updating the saved event view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a saved event view",
        "tags": [
          "Events"
        ],
        "description": "Removes a saved event view owned by the authenticated operator.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved view slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "204": {
            "description": "Saved event view deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Saved event view deleted."
                }
              }
            }
          },
          "400": {
            "description": "The saved view slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to delete the saved view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved event view does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/events/saved-views/{slug}/apply": {
      "post": {
        "summary": "Record saved event view usage",
        "tags": [
          "Events"
        ],
        "description": "Increments usage metrics after applying a saved event view.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved view slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated saved event view metrics.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-19"
                }
              }
            }
          },
          "400": {
            "description": "The saved view slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to update the saved view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved event view does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/events/saved-views/{slug}/share": {
      "post": {
        "summary": "Record saved event view share action",
        "tags": [
          "Events"
        ],
        "description": "Increments share metrics for a saved event view.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "slug",
            "required": true,
            "description": "Saved view slug assigned when the record was created."
          }
        ],
        "security": [
          {
            "OperatorToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "Updated saved event view metadata.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-19"
                }
              }
            }
          },
          "400": {
            "description": "The saved view slug was invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "401": {
            "description": "The caller is unauthenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "403": {
            "description": "The caller is not authorized to update the saved view.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          },
          "404": {
            "description": "The saved event view does not exist.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/def-86"
                }
              }
            }
          }
        }
      }
    },
    "/admin/event-health": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/runtime-scaling": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/runtime-scaling/{target}": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "target",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/event-sampling": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/queue-health": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/event-sampling/replay": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/retries/events/{eventId}/cancel": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "eventId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/retries/events/{eventId}/force": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "eventId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/retries/deliveries/{deliveryId}/cancel": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "deliveryId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/retries/deliveries/{deliveryId}/force": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "deliveryId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/retries/workflow-steps/{stepId}/cancel": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stepId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/retries/workflow-steps/{stepId}/force": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "stepId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/events": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/catalog/nuke/run-data": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/catalog/nuke": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/admin/catalog/nuke/everything": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/observatory/calibrations": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/observatory/calibrations/{calibrationId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "calibrationId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/observatory/calibrations/upload": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/observatory/plans": {
      "get": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/observatory/plans/{planId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "planId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/observatory/plans/{planId}/reprocess": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "planId",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://127.0.0.1:4000",
      "description": "Local development server"
    }
  ],
  "tags": [
    {
      "name": "System",
      "description": "Service health and operational endpoints."
    },
    {
      "name": "Auth",
      "description": "Authentication, session management, and identity inspection."
    },
    {
      "name": "Apps",
      "description": "Search and management of ingested repositories."
    },
    {
      "name": "Services",
      "description": "Runtime services discovered and managed by Apphub."
    },
    {
      "name": "Jobs",
      "description": "Reusable job definitions executed by the platform."
    },
    {
      "name": "Workflows",
      "description": "Multi-step workflow orchestration definitions."
    },
    {
      "name": "Saved Searches",
      "description": "Manage reusable catalog search definitions."
    },
    {
      "name": "Events",
      "description": "Events explorer health overlays and saved views."
    }
  ]
}
